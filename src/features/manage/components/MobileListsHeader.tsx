import React from 'react'
import { LeftMenuSelection } from './LeftMenu'
import { MobileListSelector } from './MobileListSelector'

type Props = {
  selectedKey: string
  onSelect: (sel: LeftMenuSelection) => void
  isModerator: boolean
  pendingCount?: number | null
  mineCount?: number | null
  userLists: Array<{ id: number; title: string; items_count?: number }>
  onAddList: () => void
  labelAll?: string
  selectedListId?: number | null
  onDeleteList?: (id: number) => void
  onShareList?: (id: number) => void
  onShowOnTimeline?: (id: number) => void
  readonlyListId?: number
  onCopySharedList?: (id: number) => void
  // Filter toggle
  filtersVisible?: boolean
  onToggleFilters?: () => void
  onAddElement?: () => void
}

export function MobileListsHeader({
  selectedKey,
  onSelect,
  isModerator,
  pendingCount,
  mineCount,
  userLists,
  onAddList,
  labelAll = '–í—Å–µ',
  selectedListId,
  onDeleteList,
  onShareList,
  onShowOnTimeline,
  readonlyListId,
  onCopySharedList,
  filtersVisible,
  onToggleFilters,
  onAddElement
}: Props) {
  const isListSelected = selectedKey.startsWith('list:')
  const currentList = isListSelected ? userLists.find(l => l.id === selectedListId) : null

  return (
    <div className="lists-mobile-header">
      {/* –°–µ–ª–µ–∫—Ç–æ—Ä —Å–ø–∏—Å–∫–æ–≤ –∏ –∫–Ω–æ–ø–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–∞ –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ */}
      <div style={{ display: 'flex', gap: 12, alignItems: 'center' }}>
        <div style={{ flex: 1, minWidth: 0 }}>
          <MobileListSelector
            selectedKey={selectedKey}
            onSelect={onSelect}
            isModerator={isModerator}
            pendingCount={pendingCount}
            mineCount={mineCount}
            userLists={userLists}
            onAddList={onAddList}
            labelAll={labelAll}
          />
        </div>
        
        {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ */}
        <button
          onClick={onToggleFilters}
          className="lists-mobile-actions__action-button lists-mobile-filter-toggle"
          title={filtersVisible ? '–°–∫—Ä—ã—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã' : '–ü–æ–∫–∞–∑–∞—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã'}
          aria-pressed={!!filtersVisible}
          style={{ flexShrink: 0 }}
        >
          {filtersVisible ? 'üîº' : 'üîΩ'}
        </button>

        {/* –ö–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ (–≤—Å–µ–≥–¥–∞ –≤–∏–¥–Ω–∞) */}
        {onAddElement && (
          <button
            onClick={onAddElement}
            className="lists-mobile-actions__action-button"
            title="–î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç"
            style={{ flexShrink: 0 }}
          >
            ‚ûï
          </button>
        )}
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Å–ø–∏—Å–æ–∫) */}
      {isListSelected && currentList && (
        <div className="lists-mobile-actions" style={{ display: 'flex', gap: 8, alignItems: 'center', marginBottom: '12px' }}>
          {/* –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ —Ç–∞–π–º–ª–∞–π–Ω–µ */}
          <button
            onClick={() => onShowOnTimeline?.(currentList.id)}
            className="lists-mobile-actions__action-button"
            title="–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ —Ç–∞–π–º–ª–∞–π–Ω–µ"
          >
            ‚è±Ô∏è
          </button>

          {/* –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∏–ª–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å */}
          {readonlyListId === currentList.id ? (
            <button
              onClick={() => onCopySharedList?.(currentList.id)}
              className="lists-mobile-actions__action-button"
              title="–°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–µ–±–µ"
            >
              üìã
            </button>
          ) : (
            <button
              onClick={() => onShareList?.(currentList.id)}
              className="lists-mobile-actions__action-button"
              title="–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"
            >
              üîó
            </button>
          )}

          {/* –£–¥–∞–ª–∏—Ç—å (—Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤–æ–∏—Ö —Å–ø–∏—Å–∫–æ–≤) */}
          {readonlyListId !== currentList.id && onDeleteList && (
            <button
              onClick={() => {
                const ok = window.confirm('–£–¥–∞–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∏ –≤—Å–µ –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã?')
                if (ok) onDeleteList(currentList.id)
              }}
              className="lists-mobile-actions__action-button lists-mobile-actions__action-button--danger"
              title="–£–¥–∞–ª–∏—Ç—å —Å–ø–∏—Å–æ–∫"
            >
              üóëÔ∏è
            </button>
          )}
        </div>
      )}

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å–ø–∏—Å–∫–µ */}
      {isListSelected && currentList && (
        <div className="lists-mobile-list-info">
          <div className="lists-mobile-list-info__title">
            –°–ø–∏—Å–æ–∫: <strong>{currentList.title}</strong>
          </div>
          <div className="lists-mobile-list-info__count">
            –≠–ª–µ–º–µ–Ω—Ç–æ–≤: {currentList.items_count || 0}
          </div>
        </div>
      )}
    </div>
  )
}
