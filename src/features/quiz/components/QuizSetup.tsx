import React from 'react';
import { QuizSetupConfig } from '../types';
import { FilterDropdown } from '../../../shared/ui/FilterDropdown';

interface QuizSetupProps {
  setup: QuizSetupConfig;
  onSetupChange: (setup: QuizSetupConfig) => void;
  allCategories: string[];
  allCountries: string[];
  onStartQuiz: () => void;
  canStart: boolean;
}

const QUESTION_TYPES = [
  { value: 'birthYear', label: '–£–≥–∞–¥–∞–π –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è' },
  { value: 'achievementsMatch', label: '–°–æ–ø–æ—Å—Ç–∞–≤—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è' },
  { value: 'birthOrder', label: '–†–∞—Å—Å—Ç–∞–≤—å –ø–æ –≥–æ–¥—É —Ä–æ–∂–¥–µ–Ω–∏—è' }
];

const QUESTION_TYPE_LABELS: { [key: string]: string } = {
  'birthYear': '–£–≥–∞–¥–∞–π –≥–æ–¥ —Ä–æ–∂–¥–µ–Ω–∏—è',
  'achievementsMatch': '–°–æ–ø–æ—Å—Ç–∞–≤—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è', 
  'birthOrder': '–†–∞—Å—Å—Ç–∞–≤—å –ø–æ –≥–æ–¥—É —Ä–æ–∂–¥–µ–Ω–∏—è'
};

const QUESTION_COUNTS = [3, 5, 7, 10, 15, 20];

export const QuizSetup: React.FC<QuizSetupProps> = ({
  setup,
  onSetupChange,
  allCategories,
  allCountries,
  onStartQuiz,
  canStart
}) => {
  const handleCountriesChange = (countries: string[]) => {
    onSetupChange({
      ...setup,
      selectedCountries: countries
    });
  };

  const handleCategoriesChange = (categories: string[]) => {
    onSetupChange({
      ...setup,
      selectedCategories: categories
    });
  };

  const handleQuestionTypesChange = (types: string[]) => {
    onSetupChange({
      ...setup,
      questionTypes: types
    });
  };

  const handleQuestionCountChange = (count: number) => {
    onSetupChange({
      ...setup,
      questionCount: count
    });
  };

  return (
    <div className="quiz-setup">
      <div className="quiz-setup-header">
        <h2>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–≥—Ä—ã</h2>
        <p>–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã</p>
      </div>

      <div className="quiz-setup-content">
        <div className="quiz-setup-filters">
          <div className="quiz-setup-filter-group">
            <h3>–§–∏–ª—å—Ç—Ä—ã</h3>
            <div className="quiz-setup-filters-row">
              <FilterDropdown
                title="–°—Ç—Ä–∞–Ω—ã"
                items={allCountries}
                selectedItems={setup.selectedCountries}
                onSelectionChange={handleCountriesChange}
                icon="üåç"
              />
              <FilterDropdown
                title="–ö–∞—Ç–µ–≥–æ—Ä–∏–∏"
                items={allCategories}
                selectedItems={setup.selectedCategories}
                onSelectionChange={handleCategoriesChange}
                icon="üìö"
              />
            </div>
          </div>

          <div className="quiz-setup-filter-group">
            <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤</h3>
            <div className="quiz-setup-questions-row">
              <div className="quiz-setup-question-types">
                <FilterDropdown
                  title="–¢–∏–ø—ã –≤–æ–ø—Ä–æ—Å–æ–≤"
                  items={QUESTION_TYPES.map(t => t.label)}
                  selectedItems={setup.questionTypes.map(type => QUESTION_TYPE_LABELS[type] || type)}
                  onSelectionChange={(selectedLabels) => {
                    const selectedValues = selectedLabels.map(label => 
                      Object.keys(QUESTION_TYPE_LABELS).find(key => QUESTION_TYPE_LABELS[key] === label) || label
                    );
                    handleQuestionTypesChange(selectedValues);
                  }}
                  icon="‚ùì"
                  textLabel="–¢–∏–ø—ã"
                />
              </div>
              <div className="quiz-setup-question-count">
                <label className="quiz-count-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ:</label>
                <div className="quiz-setup-count-selector">
                  {QUESTION_COUNTS.map(count => (
                    <button
                      key={count}
                      className={`quiz-count-button ${setup.questionCount === count ? 'selected' : ''}`}
                      onClick={() => handleQuestionCountChange(count)}
                    >
                      {count}
                    </button>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>

        <div className="quiz-setup-summary">
          <h3>–°–≤–æ–¥–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫</h3>
          <div className="quiz-summary-item">
            <span className="quiz-summary-label">–°—Ç—Ä–∞–Ω—ã:</span>
            <span className="quiz-summary-value">
              {setup.selectedCountries.length === 0 ? '–í—Å–µ' : `${setup.selectedCountries.length} –≤—ã–±—Ä–∞–Ω–æ`}
            </span>
          </div>
          <div className="quiz-summary-item">
            <span className="quiz-summary-label">–ö–∞—Ç–µ–≥–æ—Ä–∏–∏:</span>
            <span className="quiz-summary-value">
              {setup.selectedCategories.length === 0 ? '–í—Å–µ' : `${setup.selectedCategories.length} –≤—ã–±—Ä–∞–Ω–æ`}
            </span>
          </div>
          <div className="quiz-summary-item">
            <span className="quiz-summary-label">–¢–∏–ø—ã –≤–æ–ø—Ä–æ—Å–æ–≤:</span>
            <span className="quiz-summary-value">
              {setup.questionTypes.length === 0 ? '–í—Å–µ' : setup.questionTypes.map(type => QUESTION_TYPE_LABELS[type] || type).join(', ')}
            </span>
          </div>
          <div className="quiz-summary-item">
            <span className="quiz-summary-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤:</span>
            <span className="quiz-summary-value">{setup.questionCount}</span>
          </div>
        </div>
      </div>

      <div className="quiz-setup-footer">
        <button 
          onClick={onStartQuiz}
          disabled={!canStart}
          className="quiz-start-button"
        >
          –ù–∞—á–∞—Ç—å –∏–≥—Ä—É ({setup.questionCount} –≤–æ–ø—Ä–æ—Å–æ–≤)
        </button>
      </div>
    </div>
  );
};
