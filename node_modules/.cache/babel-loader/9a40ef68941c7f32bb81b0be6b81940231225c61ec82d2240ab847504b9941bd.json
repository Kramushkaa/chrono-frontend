{"ast":null,"code":"import{useState,useEffect}from'react';export const useMobile=()=>{const[isMobile,setIsMobile]=useState(false);useEffect(()=>{const checkMobile=()=>{setIsMobile(window.innerWidth<=768);};checkMobile();window.addEventListener('resize',checkMobile);return()=>window.removeEventListener('resize',checkMobile);},[]);return isMobile;};","map":{"version":3,"names":["useState","useEffect","useMobile","isMobile","setIsMobile","checkMobile","window","innerWidth","addEventListener","removeEventListener"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/hooks/useMobile.ts"],"sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nexport const useMobile = () => {\r\n  const [isMobile, setIsMobile] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      setIsMobile(window.innerWidth <= 768)\r\n    }\r\n    \r\n    checkMobile()\r\n    window.addEventListener('resize', checkMobile)\r\n    return () => window.removeEventListener('resize', checkMobile)\r\n  }, [])\r\n  \r\n  return isMobile\r\n} "],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGJ,QAAQ,CAAC,KAAK,CAAC,CAE/CC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAI,WAAW,CAAGA,CAAA,GAAM,CACxBD,WAAW,CAACE,MAAM,CAACC,UAAU,EAAI,GAAG,CAAC,CACvC,CAAC,CAEDF,WAAW,CAAC,CAAC,CACbC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,CAAEH,WAAW,CAAC,CAC9C,MAAO,IAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,CAAEJ,WAAW,CAAC,CAChE,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CAAAF,QAAQ,CACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}