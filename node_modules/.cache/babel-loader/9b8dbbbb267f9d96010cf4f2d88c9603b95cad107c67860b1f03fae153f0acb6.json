{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selecty\\\\Documents\\\\PetProjects\\\\chronoline-frontend\\\\src\\\\components\\\\Timeline.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useMobile } from '../hooks/useMobile';\nimport { getPosition, getWidth, getCenturyColor, getCenturyNumber, toRomanNumeral } from '../utils/timelineUtils';\n\n// Типы для элементов временной линии\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Timeline = ({\n  isLoading,\n  timelineWidth,\n  totalHeight,\n  centuryBoundaries,\n  minYear,\n  pixelsPerYear,\n  LEFT_PADDING_PX,\n  rowPlacement,\n  filters,\n  groupingType,\n  categoryDividers,\n  getGroupColor,\n  getGroupColorDark,\n  getGroupColorMuted,\n  getPersonGroup,\n  hoveredPerson,\n  setHoveredPerson,\n  mousePosition,\n  setMousePosition,\n  showTooltip,\n  setShowTooltip,\n  activeAchievementMarker,\n  setActiveAchievementMarker,\n  hoveredAchievement,\n  setHoveredAchievement,\n  achievementTooltipPosition,\n  setAchievementTooltipPosition,\n  showAchievementTooltip,\n  setShowAchievementTooltip,\n  hoverTimerRef,\n  sortedData,\n  selectedPerson,\n  setSelectedPerson\n}) => {\n  _s();\n  const isMobile = useMobile();\n\n  // Функция для определения пустых веков на основе отфильтрованных данных\n  const getEmptyCenturies = () => {\n    if (!sortedData || sortedData.length === 0) return new Set();\n\n    // Используем отфильтрованные данные для определения диапазона\n    const minYear = Math.min(...sortedData.map(p => p.birthYear));\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear));\n    const startCentury = Math.floor(minYear / 100) * 100;\n    const endCentury = Math.ceil(maxYear / 100) * 100;\n    const emptyCenturies = new Set();\n    for (let centuryStart = startCentury; centuryStart <= endCentury; centuryStart += 100) {\n      const centuryEnd = centuryStart + 99;\n      const hasDataInCentury = sortedData.some(person => person.birthYear <= centuryEnd && person.deathYear >= centuryStart);\n      if (!hasDataInCentury) {\n        emptyCenturies.add(centuryStart);\n      }\n    }\n    return emptyCenturies;\n  };\n\n  // Создаем массив для отображения веков с промежутками\n  const getTimelineElements = () => {\n    if (!filters.hideEmptyCenturies) {\n      return centuryBoundaries.map(year => ({\n        type: 'century',\n        year\n      }));\n    }\n    const emptyCenturies = getEmptyCenturies();\n    const visibleCenturies = centuryBoundaries.filter(year => !emptyCenturies.has(year));\n    const elements = [];\n    for (let i = 0; i < visibleCenturies.length; i++) {\n      const currentYear = visibleCenturies[i];\n\n      // Добавляем промежуток перед веком (кроме первого)\n      if (i > 0) {\n        const prevYear = visibleCenturies[i - 1];\n        const gapStart = prevYear + 100;\n        const gapEnd = currentYear;\n\n        // Находим все скрытые века в промежутке\n        const hiddenCenturies = [];\n        for (let year = gapStart; year < gapEnd; year += 100) {\n          if (emptyCenturies.has(year)) {\n            hiddenCenturies.push(year);\n          }\n        }\n        if (hiddenCenturies.length > 0) {\n          elements.push({\n            type: 'gap',\n            startYear: gapStart,\n            endYear: gapEnd,\n            hiddenCenturies\n          });\n        }\n      }\n\n      // Добавляем сам век\n      elements.push({\n        type: 'century',\n        year: currentYear\n      });\n    }\n    return elements;\n  };\n  const timelineElements = getTimelineElements();\n\n  // Функция для вычисления позиции с учетом промежутков\n  const getAdjustedPosition = year => {\n    if (!filters.hideEmptyCenturies) {\n      return getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    }\n\n    // Находим позицию года в оригинальной шкале\n    const originalPosition = getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n\n    // Вычисляем смещение, проходя по всем промежуткам до этого года\n    let totalOffset = 0;\n    for (const element of timelineElements) {\n      if (element.type === 'gap') {\n        const gapStart = getPosition(element.startYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const gapEnd = getPosition(element.endYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const originalGapWidth = gapEnd - gapStart;\n        const newGapWidth = pixelsPerYear * 10; // 10 лет\n\n        // Если год находится после этого промежутка, добавляем смещение\n        if (year >= element.endYear) {\n          totalOffset += originalGapWidth - newGapWidth;\n        }\n      }\n    }\n    return originalPosition - totalOffset;\n  };\n\n  // Функция для вычисления ширины с учетом промежутков\n  const getAdjustedWidth = (startYear, endYear) => {\n    if (!filters.hideEmptyCenturies) {\n      return getWidth(startYear, endYear, pixelsPerYear);\n    }\n    const startPos = getAdjustedPosition(startYear);\n    const endPos = getAdjustedPosition(endYear);\n    return endPos - startPos;\n  };\n\n  // Функция для вычисления скорректированной ширины таймлайна\n  const getAdjustedTimelineWidth = () => {\n    if (!filters.hideEmptyCenturies) {\n      return timelineWidth;\n    }\n\n    // Вычисляем общую ширину, проходя по всем элементам\n    let totalWidth = 0;\n    for (const element of timelineElements) {\n      if (element.type === 'century') {\n        // Век занимает 100 лет\n        totalWidth += pixelsPerYear * 100;\n      } else if (element.type === 'gap') {\n        // Промежуток занимает 10 лет\n        totalWidth += pixelsPerYear * 10;\n      }\n    }\n    return totalWidth + LEFT_PADDING_PX + 50; // Добавляем отступы\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      role: \"status\",\n      \"aria-live\": \"polite\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-content\",\n      id: \"timeline-content\",\n      role: \"presentation\",\n      \"aria-hidden\": \"true\",\n      style: {\n        position: 'relative',\n        height: '100%',\n        overflow: 'visible',\n        padding: isMobile ? '0' : '1rem 0 2rem 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-background\",\n        id: \"timeline-background\",\n        role: \"presentation\",\n        \"aria-hidden\": \"true\",\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 1\n        },\n        children: timelineElements.map((element, index) => {\n          if (element.type === 'century') {\n            const year = element.year;\n            // Каждый век занимает ровно 100 лет\n            const nextYear = year + 100;\n            const startPos = getAdjustedPosition(year);\n            const endPos = getAdjustedPosition(nextYear);\n            const width = endPos - startPos;\n\n            // Вычисляем век на основе центра года в столетии\n            const centerYear = year + 50;\n            const centuryNumber = getCenturyNumber(centerYear);\n            // Для отрицательных веков добавляем знак минус\n            const isNegativeCentury = year < 0;\n            const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"century-background\",\n              id: `century-${year}`,\n              role: \"presentation\",\n              \"aria-label\": `Век ${romanNumeral}`,\n              style: {\n                position: 'absolute',\n                left: `${startPos}px`,\n                width: `${width}px`,\n                height: '100%',\n                background: getCenturyColor(year, minYear),\n                opacity: 0.3,\n                zIndex: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"century-label\",\n                id: `century-label-${year}`,\n                \"aria-label\": `Век ${romanNumeral}`,\n                style: {\n                  position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  fontSize: '2rem',\n                  fontWeight: 'bold',\n                  color: 'rgba(244, 228, 193, 0.6)',\n                  textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n                  pointerEvents: 'none',\n                  zIndex: 2,\n                  fontFamily: 'serif'\n                },\n                children: romanNumeral\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 19\n              }, this)\n            }, `century-bg-${year}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this);\n          } else if (element.type === 'gap') {\n            var _element$hiddenCentur;\n            // Промежуток между веками - компактный размер (1/10 века)\n            const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n            const startPos = getAdjustedPosition(element.startYear);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${startPos}px`,\n                width: `${gapWidth}px`,\n                height: '100%',\n                background: 'rgba(139, 69, 19, 0.1)',\n                border: '1px dashed rgba(139, 69, 19, 0.3)',\n                zIndex: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  fontSize: '0.8rem',\n                  color: 'rgba(139, 69, 19, 0.7)',\n                  textAlign: 'center',\n                  pointerEvents: 'none',\n                  zIndex: 2,\n                  fontWeight: 'bold'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u043E:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 42\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '0.7rem',\n                    marginTop: '2px'\n                  },\n                  children: ((_element$hiddenCentur = element.hiddenCenturies) === null || _element$hiddenCentur === void 0 ? void 0 : _element$hiddenCentur.map(year => {\n                    const centuryNumber = getCenturyNumber(year + 50);\n                    const isNegativeCentury = year < 0;\n                    const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n                    return romanNumeral;\n                  }).join(', ')) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 22\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 19\n              }, this)\n            }, `gap-${element.startYear}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 18\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 5\n        },\n        children: timelineElements.map(element => {\n          if (element.type === 'century') {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(element.year)}px`,\n                width: '2px',\n                height: '100%',\n                background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                zIndex: 5\n              }\n            }, `century-line-${element.year}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 19\n            }, this);\n          } else if (element.type === 'gap') {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(element.startYear)}px`,\n                width: '2px',\n                height: '100%',\n                background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                zIndex: 5\n              }\n            }, `gap-line-${element.startYear}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-dividers\",\n        id: \"category-dividers\",\n        role: \"presentation\",\n        \"aria-hidden\": \"true\",\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 8\n        },\n        children: categoryDividers.map(divider => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-divider\",\n          id: `divider-${divider.category}`,\n          role: \"separator\",\n          \"aria-label\": `Разделитель группы: ${divider.category}`,\n          style: {\n            position: 'absolute',\n            top: `${divider.top}px`,\n            left: '0',\n            width: '100%',\n            height: '10px',\n            background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n            opacity: 0.6,\n            zIndex: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-label\",\n            id: `category-label-${divider.category}`,\n            \"aria-label\": `Группа: ${divider.category}`,\n            style: {\n              position: 'absolute',\n              left: '20px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              background: getGroupColor(divider.category),\n              color: 'white',\n              padding: '2px 8px',\n              borderRadius: '4px',\n              fontSize: '0.7rem',\n              fontWeight: 'bold',\n              whiteSpace: 'nowrap',\n              zIndex: 9\n            },\n            children: divider.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)\n        }, `category-divider-${divider.category}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"person-timeline\",\n        id: \"person-timeline\",\n        role: \"list\",\n        \"aria-label\": \"\\u0412\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043B\\u0438\\u043D\\u0438\\u0438 \\u0438\\u0441\\u0442\\u043E\\u0440\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0445 \\u043B\\u0438\\u0447\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\",\n        style: {\n          position: 'relative',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 60}px`,\n          zIndex: 10\n        },\n        children: rowPlacement.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-row\",\n          id: `timeline-row-${rowIndex}`,\n          role: \"listitem\",\n          \"aria-label\": `Строка ${rowIndex + 1} временной линии`,\n          style: {\n            position: 'relative',\n            height: row.length === 0 ? '20px' : '60px',\n            marginBottom: row.length === 0 ? '0px' : '10px'\n          },\n          children: row.map(person => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"birth-year-label\",\n              id: `birth-year-${person.id}`,\n              \"aria-label\": `Год рождения: ${person.birthYear}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.birthYear)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: 'rgba(244, 228, 193, 0.6)',\n                fontStyle: 'italic',\n                fontWeight: 400,\n                transform: 'translateX(-100%) translateY(-10px)'\n              },\n              children: person.birthYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 19\n            }, this), person.reignStart && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reign-label\",\n              id: `reign-start-${person.id}`,\n              \"aria-label\": `Начало правления: ${person.reignStart}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.reignStart)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: '#E57373',\n                // Темно-красный\n                fontStyle: 'italic',\n                fontWeight: 'bold',\n                transform: 'translateX(-100%) translateY(-22px)'\n              },\n              children: [\"\\uD83D\\uDC51 \", person.reignStart]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 22\n            }, this), person.reignEnd && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reign-label\",\n              id: `reign-end-${person.id}`,\n              \"aria-label\": `Конец правления: ${person.reignEnd}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.reignEnd)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: '#E57373',\n                // Темно-красный\n                fontStyle: 'italic',\n                fontWeight: 'bold',\n                transform: 'translateY(-22px)'\n              },\n              children: person.reignEnd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"death-year-label\",\n              id: `death-year-${person.id}`,\n              \"aria-label\": `Год смерти: ${person.deathYear}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.deathYear)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: 'rgba(244, 228, 193, 0.6)',\n                fontStyle: 'italic',\n                fontWeight: 400,\n                transform: 'translateY(-10px)'\n              },\n              children: person.deathYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 38\n            }, this), filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3].filter(year => year !== undefined && year !== null).map((year, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"achievement-marker\",\n                id: `achievement-${person.id}-${index}`,\n                role: \"button\",\n                \"aria-label\": `Достижение ${index + 1} в ${year} году`,\n                tabIndex: 0,\n                style: {\n                  position: 'absolute',\n                  left: `${getAdjustedPosition(year)}px`,\n                  top: '-4px',\n                  width: '2px',\n                  height: '15px',\n                  backgroundColor: getGroupColorDark(getPersonGroup(person)),\n                  zIndex: (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.personId) === person.id && (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.index) === index ? 10 : 3,\n                  transform: 'translateX(-50%)',\n                  cursor: 'pointer',\n                  transition: 'all 0.2s ease'\n                },\n                onMouseEnter: e => {\n                  e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                  e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n\n                  // Устанавливаем активный маркер\n                  setActiveAchievementMarker({\n                    personId: person.id,\n                    index\n                  });\n\n                  // Очищаем предыдущий таймер если он есть\n                  if (hoverTimerRef.current) {\n                    clearTimeout(hoverTimerRef.current);\n                  }\n\n                  // Запускаем таймер для показа tooltip\n                  hoverTimerRef.current = setTimeout(() => {\n                    setHoveredAchievement({\n                      person,\n                      year: year,\n                      index\n                    });\n                    setAchievementTooltipPosition({\n                      x: e.clientX,\n                      y: e.clientY\n                    });\n                    setShowAchievementTooltip(true);\n                  }, 500);\n                },\n                onMouseLeave: e => {\n                  e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                  e.currentTarget.style.boxShadow = 'none';\n\n                  // Сбрасываем активный маркер\n                  setActiveAchievementMarker(null);\n\n                  // Очищаем таймер и скрываем tooltip\n                  if (hoverTimerRef.current) {\n                    clearTimeout(hoverTimerRef.current);\n                    hoverTimerRef.current = null;\n                  }\n                  setShowAchievementTooltip(false);\n                  setHoveredAchievement(null);\n                },\n                onMouseMove: e => {\n                  setAchievementTooltipPosition({\n                    x: e.clientX,\n                    y: e.clientY\n                  });\n                },\n                onKeyDown: e => {\n                  if (e.key === 'Enter' || e.key === ' ') {\n                    e.preventDefault();\n                    // Показываем tooltip при нажатии Enter или Space\n                    setHoveredAchievement({\n                      person,\n                      year: year,\n                      index\n                    });\n                    // Используем позицию элемента для tooltip при нажатии клавиши\n                    const rect = e.currentTarget.getBoundingClientRect();\n                    setAchievementTooltipPosition({\n                      x: rect.left + rect.width / 2,\n                      y: rect.top - 10\n                    });\n                    setShowAchievementTooltip(true);\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    position: 'absolute',\n                    top: '-12px',\n                    left: '50%',\n                    transform: 'translateX(-50%)',\n                    fontSize: '8px',\n                    color: getGroupColorDark(getPersonGroup(person)),\n                    fontWeight: 'bold',\n                    whiteSpace: 'nowrap',\n                    backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                    padding: '1px 3px',\n                    borderRadius: '2px',\n                    border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                    transition: 'all 0.2s ease'\n                  },\n                  children: year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 27\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 575,\n                columnNumber: 25\n              }, this);\n            }), person.reignStart && person.reignEnd && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reign-bar\",\n              id: `reign-bar-${person.id}`,\n              role: \"presentation\",\n              \"aria-label\": `Период правления: ${person.reignStart} - ${person.reignEnd}`,\n              style: {\n                position: 'absolute',\n                top: '-15px',\n                left: `${getAdjustedPosition(person.reignStart)}px`,\n                width: `${getAdjustedWidth(person.reignStart, person.reignEnd)}px`,\n                height: '65px',\n                backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                pointerEvents: 'none',\n                borderLeft: '2px solid #D32F2F',\n                borderRight: '2px solid #D32F2F',\n                borderRadius: '3px',\n                zIndex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"life-bar\",\n              id: `life-bar-${person.id}`,\n              role: \"button\",\n              \"aria-label\": `${person.name}, ${person.birthYear} - ${person.deathYear}, ${person.category}`,\n              tabIndex: 0,\n              style: {\n                position: 'absolute',\n                top: '10px',\n                left: `${getAdjustedPosition(person.birthYear)}px`,\n                width: `${getAdjustedWidth(person.birthYear, person.deathYear)}px`,\n                height: '40px',\n                background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                borderRadius: '6px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0 12px',\n                color: 'white',\n                fontSize: '14px',\n                fontWeight: 'bold',\n                minWidth: '60px',\n                boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                border: '1.5px solid #a8926a',\n                opacity: (selectedPerson === null || selectedPerson === void 0 ? void 0 : selectedPerson.id) === person.id ? 0.8 : 1,\n                zIndex: 5,\n                transform: (selectedPerson === null || selectedPerson === void 0 ? void 0 : selectedPerson.id) === person.id ? 'scale(1.05)' : 'scale(1)',\n                transition: 'all 0.2s ease'\n              },\n              onMouseEnter: e => {\n                if (!isMobile) {\n                  e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)';\n                  e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)';\n                  e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n                  setMousePosition({\n                    x: e.clientX,\n                    y: e.clientY\n                  });\n                  setHoveredPerson(person);\n                  setTimeout(() => setShowTooltip(true), 300);\n                }\n              },\n              onMouseLeave: e => {\n                if (!isMobile) {\n                  e.currentTarget.style.transform = (selectedPerson === null || selectedPerson === void 0 ? void 0 : selectedPerson.id) === person.id ? 'scale(1.05)' : 'translateY(0) scale(1)';\n                  e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)';\n                  e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)';\n                  setHoveredPerson(null);\n                  setShowTooltip(false);\n                }\n              },\n              onMouseMove: e => {\n                if (!isMobile) {\n                  setMousePosition({\n                    x: e.clientX,\n                    y: e.clientY\n                  });\n                }\n              },\n              onKeyDown: e => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault();\n                  if (isMobile) {\n                    setSelectedPerson(person);\n                  } else {\n                    setHoveredPerson(person);\n                    setShowTooltip(true);\n                  }\n                }\n              },\n              onClick: () => {\n                if (isMobile) {\n                  setSelectedPerson(person);\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  lineHeight: '1.2'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: person.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 38\n            }, this)]\n          }, person.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Timeline, \"mDTz/1/3lw+8ALGZO2u07zUf7H8=\", false, function () {\n  return [useMobile];\n});\n_c = Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useMobile","getPosition","getWidth","getCenturyColor","getCenturyNumber","toRomanNumeral","jsxDEV","_jsxDEV","Fragment","_Fragment","Timeline","isLoading","timelineWidth","totalHeight","centuryBoundaries","minYear","pixelsPerYear","LEFT_PADDING_PX","rowPlacement","filters","groupingType","categoryDividers","getGroupColor","getGroupColorDark","getGroupColorMuted","getPersonGroup","hoveredPerson","setHoveredPerson","mousePosition","setMousePosition","showTooltip","setShowTooltip","activeAchievementMarker","setActiveAchievementMarker","hoveredAchievement","setHoveredAchievement","achievementTooltipPosition","setAchievementTooltipPosition","showAchievementTooltip","setShowAchievementTooltip","hoverTimerRef","sortedData","selectedPerson","setSelectedPerson","_s","isMobile","getEmptyCenturies","length","Set","Math","min","map","p","birthYear","maxYear","max","deathYear","startCentury","floor","endCentury","ceil","emptyCenturies","centuryStart","centuryEnd","hasDataInCentury","some","person","add","getTimelineElements","hideEmptyCenturies","year","type","visibleCenturies","filter","has","elements","i","currentYear","prevYear","gapStart","gapEnd","hiddenCenturies","push","startYear","endYear","timelineElements","getAdjustedPosition","originalPosition","totalOffset","element","originalGapWidth","newGapWidth","getAdjustedWidth","startPos","endPos","getAdjustedTimelineWidth","totalWidth","children","className","role","fileName","_jsxFileName","lineNumber","columnNumber","id","style","position","height","overflow","padding","top","left","width","pointerEvents","zIndex","index","nextYear","centerYear","centuryNumber","isNegativeCentury","romanNumeral","abs","background","opacity","transform","fontSize","fontWeight","color","textShadow","fontFamily","_element$hiddenCentur","gapWidth","border","textAlign","marginTop","join","divider","category","borderRadius","whiteSpace","row","rowIndex","marginBottom","fontStyle","reignStart","reignEnd","showAchievements","achievementYear1","achievementYear2","achievementYear3","undefined","tabIndex","backgroundColor","personId","cursor","transition","onMouseEnter","e","currentTarget","boxShadow","current","clearTimeout","setTimeout","x","clientX","y","clientY","onMouseLeave","onMouseMove","onKeyDown","key","preventDefault","rect","getBoundingClientRect","borderLeft","borderRight","name","display","alignItems","minWidth","borderColor","onClick","flexDirection","lineHeight","_c","$RefreshReg$"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/components/Timeline.tsx"],"sourcesContent":["import React from 'react'\nimport { useMobile } from '../hooks/useMobile'\nimport { Person } from '../types'\nimport { \n  getPosition, \n  getWidth, \n  getCenturyColor, \n  getCenturyNumber, \n  toRomanNumeral\n} from '../utils/timelineUtils'\n\ninterface TimelineProps {\n  isLoading: boolean\n  timelineWidth: number\n  totalHeight: number\n  centuryBoundaries: number[]\n  minYear: number\n  pixelsPerYear: number\n  LEFT_PADDING_PX: number\n  rowPlacement: Person[][]\n  filters: {\n    showAchievements: boolean\n    hideEmptyCenturies: boolean\n  }\n  groupingType: 'category' | 'country' | 'none'\n  categoryDividers: { category: string; top: number }[]\n  getGroupColor: (groupName: string) => string\n  getGroupColorDark: (groupName: string) => string\n  getGroupColorMuted: (groupName: string) => string\n  getPersonGroup: (person: Person) => string\n  hoveredPerson: Person | null\n  setHoveredPerson: (person: Person | null) => void\n  mousePosition: { x: number; y: number }\n  setMousePosition: (position: { x: number; y: number }) => void\n  showTooltip: boolean\n  setShowTooltip: (show: boolean) => void\n  activeAchievementMarker: { personId: string; index: number } | null\n  setActiveAchievementMarker: (marker: { personId: string; index: number } | null) => void\n  hoveredAchievement: { person: Person; year: number; index: number } | null\n  setHoveredAchievement: (achievement: { person: Person; year: number; index: number } | null) => void\n  achievementTooltipPosition: { x: number; y: number }\n  setAchievementTooltipPosition: (position: { x: number; y: number }) => void\n  showAchievementTooltip: boolean\n  setShowAchievementTooltip: (show: boolean) => void\n  hoverTimerRef: React.MutableRefObject<NodeJS.Timeout | null>\n  sortedData: any[]\n  selectedPerson: Person | null\n  setSelectedPerson: (person: Person | null) => void\n}\n\n// Типы для элементов временной линии\ntype TimelineElement = \n  | { type: 'century'; year: number }\n  | { type: 'gap'; startYear: number; endYear: number; hiddenCenturies: number[] }\n\nexport const Timeline: React.FC<TimelineProps> = ({\n  isLoading,\n  timelineWidth,\n  totalHeight,\n  centuryBoundaries,\n  minYear,\n  pixelsPerYear,\n  LEFT_PADDING_PX,\n  rowPlacement,\n  filters,\n  groupingType,\n  categoryDividers,\n  getGroupColor,\n  getGroupColorDark,\n  getGroupColorMuted,\n  getPersonGroup,\n  hoveredPerson,\n  setHoveredPerson,\n  mousePosition,\n  setMousePosition,\n  showTooltip,\n  setShowTooltip,\n  activeAchievementMarker,\n  setActiveAchievementMarker,\n  hoveredAchievement,\n  setHoveredAchievement,\n  achievementTooltipPosition,\n  setAchievementTooltipPosition,\n  showAchievementTooltip,\n  setShowAchievementTooltip,\n  hoverTimerRef,\n  sortedData,\n  selectedPerson,\n  setSelectedPerson\n}) => {\n  const isMobile = useMobile()\n\n  // Функция для определения пустых веков на основе отфильтрованных данных\n  const getEmptyCenturies = () => {\n    if (!sortedData || sortedData.length === 0) return new Set();\n    \n    // Используем отфильтрованные данные для определения диапазона\n    const minYear = Math.min(...sortedData.map(p => p.birthYear));\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear));\n    \n    const startCentury = Math.floor(minYear / 100) * 100;\n    const endCentury = Math.ceil(maxYear / 100) * 100;\n    \n    const emptyCenturies = new Set<number>();\n    \n    for (let centuryStart = startCentury; centuryStart <= endCentury; centuryStart += 100) {\n      const centuryEnd = centuryStart + 99;\n      const hasDataInCentury = sortedData.some(person => \n        (person.birthYear <= centuryEnd && person.deathYear >= centuryStart)\n      );\n      \n      if (!hasDataInCentury) {\n        emptyCenturies.add(centuryStart);\n      }\n    }\n    \n    return emptyCenturies;\n  };\n\n  // Создаем массив для отображения веков с промежутками\n  const getTimelineElements = (): TimelineElement[] => {\n    if (!filters.hideEmptyCenturies) {\n      return centuryBoundaries.map(year => ({ type: 'century', year }));\n    }\n\n    const emptyCenturies = getEmptyCenturies();\n    const visibleCenturies = centuryBoundaries.filter(year => !emptyCenturies.has(year));\n    \n    const elements: TimelineElement[] = [];\n    \n    for (let i = 0; i < visibleCenturies.length; i++) {\n      const currentYear = visibleCenturies[i];\n      \n      // Добавляем промежуток перед веком (кроме первого)\n      if (i > 0) {\n        const prevYear = visibleCenturies[i - 1];\n        const gapStart = prevYear + 100;\n        const gapEnd = currentYear;\n        \n        // Находим все скрытые века в промежутке\n        const hiddenCenturies: number[] = [];\n        for (let year = gapStart; year < gapEnd; year += 100) {\n          if (emptyCenturies.has(year)) {\n            hiddenCenturies.push(year);\n          }\n        }\n        \n        if (hiddenCenturies.length > 0) {\n          elements.push({\n            type: 'gap',\n            startYear: gapStart,\n            endYear: gapEnd,\n            hiddenCenturies\n          });\n        }\n      }\n      \n      // Добавляем сам век\n      elements.push({ type: 'century', year: currentYear });\n    }\n    \n    return elements;\n  };\n\n  const timelineElements = getTimelineElements();\n\n  // Функция для вычисления позиции с учетом промежутков\n  const getAdjustedPosition = (year: number) => {\n    if (!filters.hideEmptyCenturies) {\n      return getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    }\n\n    // Находим позицию года в оригинальной шкале\n    const originalPosition = getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    \n    // Вычисляем смещение, проходя по всем промежуткам до этого года\n    let totalOffset = 0;\n    \n    for (const element of timelineElements) {\n      if (element.type === 'gap') {\n        const gapStart = getPosition(element.startYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const gapEnd = getPosition(element.endYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const originalGapWidth = gapEnd - gapStart;\n        const newGapWidth = pixelsPerYear * 10; // 10 лет\n        \n        // Если год находится после этого промежутка, добавляем смещение\n        if (year >= element.endYear) {\n          totalOffset += (originalGapWidth - newGapWidth);\n        }\n      }\n    }\n    \n    return originalPosition - totalOffset;\n  };\n\n  // Функция для вычисления ширины с учетом промежутков\n  const getAdjustedWidth = (startYear: number, endYear: number) => {\n    if (!filters.hideEmptyCenturies) {\n      return getWidth(startYear, endYear, pixelsPerYear);\n    }\n\n    const startPos = getAdjustedPosition(startYear);\n    const endPos = getAdjustedPosition(endYear);\n    return endPos - startPos;\n  };\n\n  // Функция для вычисления скорректированной ширины таймлайна\n  const getAdjustedTimelineWidth = () => {\n    if (!filters.hideEmptyCenturies) {\n      return timelineWidth;\n    }\n\n    // Вычисляем общую ширину, проходя по всем элементам\n    let totalWidth = 0;\n    \n    for (const element of timelineElements) {\n      if (element.type === 'century') {\n        // Век занимает 100 лет\n        totalWidth += pixelsPerYear * 100;\n      } else if (element.type === 'gap') {\n        // Промежуток занимает 10 лет\n        totalWidth += pixelsPerYear * 10;\n      }\n    }\n\n    return totalWidth + LEFT_PADDING_PX + 50; // Добавляем отступы\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <div className=\"loading-overlay\" role=\"status\" aria-live=\"polite\">\n          <div className=\"spinner\" aria-hidden=\"true\"></div>\n          <span>Загрузка данных...</span>\n        </div>\n      )}\n      \n      {/* Временная линия на весь экран */}\n      <div \n        className=\"timeline-content\" \n        id=\"timeline-content\"\n        role=\"presentation\" \n        aria-hidden=\"true\"\n        style={{ \n          position: 'relative', \n          height: '100%',\n          overflow: 'visible',\n          padding: isMobile ? '0' : '1rem 0 2rem 0'\n        }}\n      >\n        {/* Разноцветная заливка веков */}\n        <div \n          className=\"timeline-background\"\n          id=\"timeline-background\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${getAdjustedTimelineWidth()}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 1\n          }}\n        >\n          {timelineElements.map((element, index) => {\n                         if (element.type === 'century') {\n               const year = element.year;\n               // Каждый век занимает ровно 100 лет\n               const nextYear = year + 100\n               const startPos = getAdjustedPosition(year)\n               const endPos = getAdjustedPosition(nextYear)\n               const width = endPos - startPos\n\n              // Вычисляем век на основе центра года в столетии\n              const centerYear = year + 50\n              const centuryNumber = getCenturyNumber(centerYear)\n              // Для отрицательных веков добавляем знак минус\n              const isNegativeCentury = year < 0\n              const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber)\n              \n              return (\n                <div \n                  key={`century-bg-${year}`} \n                  className=\"century-background\"\n                  id={`century-${year}`}\n                  role=\"presentation\"\n                  aria-label={`Век ${romanNumeral}`}\n                  style={{\n                    position: 'absolute',\n                    left: `${startPos}px`,\n                    width: `${width}px`,\n                    height: '100%',\n                    background: getCenturyColor(year, minYear),\n                    opacity: 0.3,\n                    zIndex: 1\n                  }}\n                >\n                  {/* Римская цифра века в центре */}\n                  <div \n                    className=\"century-label\" \n                    id={`century-label-${year}`}\n                    aria-label={`Век ${romanNumeral}`}\n                    style={{\n                      position: 'absolute',\n                      top: '50%',\n                      left: '50%',\n                      transform: 'translate(-50%, -50%)',\n                      fontSize: '2rem',\n                      fontWeight: 'bold',\n                      color: 'rgba(244, 228, 193, 0.6)',\n                      textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n                      pointerEvents: 'none',\n                      zIndex: 2,\n                      fontFamily: 'serif'\n                    }}\n                  >\n                    {romanNumeral}\n                  </div>\n                </div>\n              )\n                                                   } else if (element.type === 'gap') {\n                // Промежуток между веками - компактный размер (1/10 века)\n                const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n                const startPos = getAdjustedPosition(element.startYear)\n               \n               return (\n                 <div key={`gap-${element.startYear}`} style={{\n                   position: 'absolute',\n                   left: `${startPos}px`,\n                   width: `${gapWidth}px`,\n                   height: '100%',\n                   background: 'rgba(139, 69, 19, 0.1)',\n                   border: '1px dashed rgba(139, 69, 19, 0.3)',\n                   zIndex: 1\n                 }}>\n                  {/* Информация о скрытых веках */}\n                  <div style={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    fontSize: '0.8rem',\n                    color: 'rgba(139, 69, 19, 0.7)',\n                    textAlign: 'center',\n                    pointerEvents: 'none',\n                    zIndex: 2,\n                    fontWeight: 'bold'\n                  }}>\n                                         <div>Скрыто:</div>\n                     <div style={{ fontSize: '0.7rem', marginTop: '2px' }}>\n                       {element.hiddenCenturies?.map(year => {\n                         const centuryNumber = getCenturyNumber(year + 50);\n                         const isNegativeCentury = year < 0;\n                         const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n                         return romanNumeral;\n                       }).join(', ') || ''}\n                     </div>\n                  </div>\n                </div>\n              )\n            }\n            return null;\n          })}\n        </div>\n\n                 {/* Границы веков и промежутков на всю высоту */}\n         <div style={{\n           position: 'absolute',\n           top: '0',\n           left: '0',\n           width: `${getAdjustedTimelineWidth()}px`,\n           height: `${totalHeight + 200}px`,\n           pointerEvents: 'none',\n           zIndex: 5\n         }}>\n                      {timelineElements.map((element) => {\n              if (element.type === 'century') {\n                return (\n                  <div key={`century-line-${element.year}`} style={{\n                    position: 'absolute',\n                    left: `${getAdjustedPosition(element.year)}px`,\n                    width: '2px',\n                    height: '100%',\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                    zIndex: 5\n                  }} />\n                );\n              } else if (element.type === 'gap') {\n                return (\n                  <div key={`gap-line-${element.startYear}`} style={{\n                    position: 'absolute',\n                    left: `${getAdjustedPosition(element.startYear)}px`,\n                    width: '2px',\n                    height: '100%',\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                    zIndex: 5\n                  }} />\n                );\n              }\n              return null;\n            })}\n         </div>\n\n                 {/* Разделители групп */}\n         <div \n           className=\"category-dividers\"\n           id=\"category-dividers\"\n           role=\"presentation\"\n           aria-hidden=\"true\"\n           style={{\n             position: 'absolute',\n             top: '0',\n             left: '0',\n             width: `${getAdjustedTimelineWidth()}px`,\n             height: `${totalHeight + 200}px`,\n             pointerEvents: 'none',\n             zIndex: 8\n           }}\n         >\n          {categoryDividers.map((divider) => (\n            <div \n              key={`category-divider-${divider.category}`} \n              className=\"category-divider\"\n              id={`divider-${divider.category}`}\n              role=\"separator\"\n              aria-label={`Разделитель группы: ${divider.category}`}\n              style={{\n                position: 'absolute',\n                top: `${divider.top}px`,\n                left: '0',\n                width: '100%',\n                height: '10px',\n                background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n                opacity: 0.6,\n                zIndex: 8\n              }}\n            >\n              <div \n                className=\"category-label\" \n                id={`category-label-${divider.category}`}\n                aria-label={`Группа: ${divider.category}`}\n                style={{\n                  position: 'absolute',\n                  left: '20px',\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: getGroupColor(divider.category),\n                  color: 'white',\n                  padding: '2px 8px',\n                  borderRadius: '4px',\n                  fontSize: '0.7rem',\n                  fontWeight: 'bold',\n                  whiteSpace: 'nowrap',\n                  zIndex: 9\n                }}\n              >\n                {divider.category}\n              </div>\n            </div>\n          ))}\n        </div>\n\n                 {/* Полоски жизни */}\n         <div \n           className=\"person-timeline\"\n           id=\"person-timeline\"\n           role=\"list\"\n           aria-label=\"Временные линии исторических личностей\"\n           style={{ \n             position: 'relative',\n             width: `${getAdjustedTimelineWidth()}px`,\n             height: `${totalHeight + 60}px`,\n             zIndex: 10\n           }}\n         >\n          {rowPlacement.map((row, rowIndex) => (\n            <div \n              key={rowIndex} \n              className=\"timeline-row\"\n              id={`timeline-row-${rowIndex}`}\n              role=\"listitem\"\n              aria-label={`Строка ${rowIndex + 1} временной линии`}\n              style={{\n                position: 'relative',\n                height: row.length === 0 ? '20px' : '60px',\n                marginBottom: row.length === 0 ? '0px' : '10px'\n              }}\n            >\n              {row.map((person) => (\n                <React.Fragment key={person.id}>\n                  {/* Годы жизни и правления над полоской */}\n                  <span \n                    className=\"birth-year-label\"\n                    id={`birth-year-${person.id}`}\n                    aria-label={`Год рождения: ${person.birthYear}`}\n                    style={{\n                      position: 'absolute',\n                      left: `${getAdjustedPosition(person.birthYear)}px`,\n                      top: 0,\n                      fontSize: '11px',\n                      color: 'rgba(244, 228, 193, 0.6)',\n                      fontStyle: 'italic',\n                      fontWeight: 400,\n                      transform: 'translateX(-100%) translateY(-10px)'\n                    }}\n                  >\n                    {person.birthYear}\n                  </span>\n\n                                     {person.reignStart && (\n                     <span \n                       className=\"reign-label\" \n                       id={`reign-start-${person.id}`}\n                       aria-label={`Начало правления: ${person.reignStart}`}\n                       style={{\n                         position: 'absolute',\n                         left: `${getAdjustedPosition(person.reignStart)}px`,\n                         top: 0,\n                         fontSize: '11px',\n                         color: '#E57373', // Темно-красный\n                         fontStyle: 'italic',\n                         fontWeight: 'bold',\n                         transform: 'translateX(-100%) translateY(-22px)'\n                       }}\n                     >\n                       👑 {person.reignStart}\n                     </span>\n                   )}\n\n                                     {person.reignEnd && (\n                     <span \n                       className=\"reign-label\" \n                       id={`reign-end-${person.id}`}\n                       aria-label={`Конец правления: ${person.reignEnd}`}\n                       style={{\n                         position: 'absolute',\n                         left: `${getAdjustedPosition(person.reignEnd)}px`,\n                         top: 0,\n                         fontSize: '11px',\n                         color: '#E57373', // Темно-красный\n                         fontStyle: 'italic',\n                         fontWeight: 'bold',\n                         transform: 'translateY(-22px)'\n                       }}\n                     >\n                       {person.reignEnd}\n                     </span>\n                   )}\n                  \n                                     <span \n                                       className=\"death-year-label\"\n                                       id={`death-year-${person.id}`}\n                                       aria-label={`Год смерти: ${person.deathYear}`}\n                                       style={{\n                                         position: 'absolute',\n                                         left: `${getAdjustedPosition(person.deathYear)}px`,\n                                         top: 0,\n                                         fontSize: '11px',\n                                         color: 'rgba(244, 228, 193, 0.6)',\n                                         fontStyle: 'italic',\n                                         fontWeight: 400,\n                                         transform: 'translateY(-10px)'\n                                       }}\n                                     >\n                                       {person.deathYear}\n                                     </span>\n\n                  {/* Маркеры ключевых достижений */}\n                  {filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3]\n                    .filter(year => year !== undefined && year !== null)\n                    .map((year, index) => {\n                      return (\n                        <div \n                          key={index} \n                          className=\"achievement-marker\"\n                          id={`achievement-${person.id}-${index}`}\n                          role=\"button\"\n                          aria-label={`Достижение ${index + 1} в ${year} году`}\n                          tabIndex={0}\n                          style={{\n                            position: 'absolute',\n                            left: `${getAdjustedPosition(year as number)}px`,\n                            top: '-4px',\n                            width: '2px',\n                            height: '15px',\n                            backgroundColor: getGroupColorDark(getPersonGroup(person)),\n                            zIndex: activeAchievementMarker?.personId === person.id && activeAchievementMarker?.index === index ? 10 : 3,\n                            transform: 'translateX(-50%)',\n                            cursor: 'pointer',\n                            transition: 'all 0.2s ease'\n                          }}\n                        onMouseEnter={(e) => {\n                          e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                          e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n                          \n                          // Устанавливаем активный маркер\n                          setActiveAchievementMarker({ personId: person.id, index });\n                          \n                          // Очищаем предыдущий таймер если он есть\n                          if (hoverTimerRef.current) {\n                            clearTimeout(hoverTimerRef.current);\n                          }\n                          \n                          // Запускаем таймер для показа tooltip\n                          hoverTimerRef.current = setTimeout(() => {\n                            setHoveredAchievement({ person, year: year as number, index });\n                            setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\n                            setShowAchievementTooltip(true);\n                          }, 500);\n                        }}\n                        onMouseLeave={(e) => {\n                          e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                          e.currentTarget.style.boxShadow = 'none';\n                          \n                          // Сбрасываем активный маркер\n                          setActiveAchievementMarker(null);\n                          \n                          // Очищаем таймер и скрываем tooltip\n                          if (hoverTimerRef.current) {\n                            clearTimeout(hoverTimerRef.current);\n                            hoverTimerRef.current = null;\n                          }\n                          setShowAchievementTooltip(false);\n                          setHoveredAchievement(null);\n                        }}\n                        onMouseMove={(e) => {\n                          setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\n                        }}\n                        onKeyDown={(e) => {\n                          if (e.key === 'Enter' || e.key === ' ') {\n                            e.preventDefault();\n                            // Показываем tooltip при нажатии Enter или Space\n                            setHoveredAchievement({ person, year: year as number, index });\n                            // Используем позицию элемента для tooltip при нажатии клавиши\n                            const rect = e.currentTarget.getBoundingClientRect();\n                            setAchievementTooltipPosition({ \n                              x: rect.left + rect.width / 2, \n                              y: rect.top - 10 \n                            });\n                            setShowAchievementTooltip(true);\n                          }\n                        }}\n                        >\n                          <span style={{\n                            position: 'absolute',\n                            top: '-12px',\n                            left: '50%',\n                            transform: 'translateX(-50%)',\n                            fontSize: '8px',\n                            color: getGroupColorDark(getPersonGroup(person)),\n                            fontWeight: 'bold',\n                            whiteSpace: 'nowrap',\n                            backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                            padding: '1px 3px',\n                            borderRadius: '2px',\n                            border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                            transition: 'all 0.2s ease'\n                          }}>\n                            {year}\n                          </span>\n                        </div>\n                      );\n                    })}\n\n                                     {/* полоса правления */}\n                   {person.reignStart && person.reignEnd && (\n                     <div \n                       className=\"reign-bar\"\n                       id={`reign-bar-${person.id}`}\n                       role=\"presentation\"\n                       aria-label={`Период правления: ${person.reignStart} - ${person.reignEnd}`}\n                       style={{\n                         position: 'absolute',\n                         top: '-15px',\n                         left: `${getAdjustedPosition(person.reignStart)}px`,\n                         width: `${getAdjustedWidth(person.reignStart, person.reignEnd)}px`,\n                         height: '65px',\n                         backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                         pointerEvents: 'none',\n                         borderLeft: '2px solid #D32F2F',\n                         borderRight: '2px solid #D32F2F',\n                         borderRadius: '3px',\n                         zIndex: 1\n                       }} \n                     />\n                   )}\n\n                                     <div\n                     className=\"life-bar\"\n                     id={`life-bar-${person.id}`}\n                     role=\"button\"\n                     aria-label={`${person.name}, ${person.birthYear} - ${person.deathYear}, ${person.category}`}\n                     tabIndex={0}\n                     style={{\n                       position: 'absolute',\n                       top: '10px',\n                       left: `${getAdjustedPosition(person.birthYear)}px`,\n                       width: `${getAdjustedWidth(person.birthYear, person.deathYear)}px`,\n                       height: '40px',\n                       background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                       borderRadius: '6px',\n                       cursor: 'pointer',\n                       display: 'flex',\n                       alignItems: 'center',\n                       padding: '0 12px',\n                       color: 'white',\n                       fontSize: '14px',\n                       fontWeight: 'bold',\n                       minWidth: '60px',\n                       boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                       border: '1.5px solid #a8926a',\n                       opacity: selectedPerson?.id === person.id ? 0.8 : 1,\n                       zIndex: 5,\n                       transform: selectedPerson?.id === person.id ? 'scale(1.05)' : 'scale(1)',\n                       transition: 'all 0.2s ease'\n                     }}\n                    onMouseEnter={(e) => {\n                      if (!isMobile) {\n                        e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)'\n                        e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)'\n                        setMousePosition({ x: e.clientX, y: e.clientY })\n                        setHoveredPerson(person)\n                        setTimeout(() => setShowTooltip(true), 300)\n                      }\n                    }}\n                    onMouseLeave={(e) => {\n                      if (!isMobile) {\n                        e.currentTarget.style.transform = selectedPerson?.id === person.id ? 'scale(1.05)' : 'translateY(0) scale(1)'\n                        e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)'\n                        setHoveredPerson(null)\n                        setShowTooltip(false)\n                      }\n                    }}\n                    onMouseMove={(e) => {\n                      if (!isMobile) {\n                        setMousePosition({ x: e.clientX, y: e.clientY })\n                      }\n                    }}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        if (isMobile) {\n                          setSelectedPerson(person);\n                        } else {\n                          setHoveredPerson(person);\n                          setShowTooltip(true);\n                        }\n                      }\n                    }}\n                    onClick={() => {\n                      if (isMobile) {\n                        setSelectedPerson(person)\n                      }\n                    }}\n                  >\n                    <div style={{ display: 'flex', flexDirection: 'column', lineHeight: '1.2' }}>\n                      <span>{person.name}</span>\n                    </div>\n                  </div>\n                </React.Fragment>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  )\n} "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,oBAAoB;AAE9C,SACEC,WAAW,EACXC,QAAQ,EACRC,eAAe,EACfC,gBAAgB,EAChBC,cAAc,QACT,wBAAwB;;AAyC/B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAKA,OAAO,MAAMC,QAAiC,GAAGA,CAAC;EAChDC,SAAS;EACTC,aAAa;EACbC,WAAW;EACXC,iBAAiB;EACjBC,OAAO;EACPC,aAAa;EACbC,eAAe;EACfC,YAAY;EACZC,OAAO;EACPC,YAAY;EACZC,gBAAgB;EAChBC,aAAa;EACbC,iBAAiB;EACjBC,kBAAkB;EAClBC,cAAc;EACdC,aAAa;EACbC,gBAAgB;EAChBC,aAAa;EACbC,gBAAgB;EAChBC,WAAW;EACXC,cAAc;EACdC,uBAAuB;EACvBC,0BAA0B;EAC1BC,kBAAkB;EAClBC,qBAAqB;EACrBC,0BAA0B;EAC1BC,6BAA6B;EAC7BC,sBAAsB;EACtBC,yBAAyB;EACzBC,aAAa;EACbC,UAAU;EACVC,cAAc;EACdC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,QAAQ,GAAG7C,SAAS,CAAC,CAAC;;EAE5B;EACA,MAAM8C,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAI,CAACL,UAAU,IAAIA,UAAU,CAACM,MAAM,KAAK,CAAC,EAAE,OAAO,IAAIC,GAAG,CAAC,CAAC;;IAE5D;IACA,MAAMjC,OAAO,GAAGkC,IAAI,CAACC,GAAG,CAAC,GAAGT,UAAU,CAACU,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,CAAC,CAAC;IAC7D,MAAMC,OAAO,GAAGL,IAAI,CAACM,GAAG,CAAC,GAAGd,UAAU,CAACU,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACI,SAAS,CAAC,CAAC;IAE7D,MAAMC,YAAY,GAAGR,IAAI,CAACS,KAAK,CAAC3C,OAAO,GAAG,GAAG,CAAC,GAAG,GAAG;IACpD,MAAM4C,UAAU,GAAGV,IAAI,CAACW,IAAI,CAACN,OAAO,GAAG,GAAG,CAAC,GAAG,GAAG;IAEjD,MAAMO,cAAc,GAAG,IAAIb,GAAG,CAAS,CAAC;IAExC,KAAK,IAAIc,YAAY,GAAGL,YAAY,EAAEK,YAAY,IAAIH,UAAU,EAAEG,YAAY,IAAI,GAAG,EAAE;MACrF,MAAMC,UAAU,GAAGD,YAAY,GAAG,EAAE;MACpC,MAAME,gBAAgB,GAAGvB,UAAU,CAACwB,IAAI,CAACC,MAAM,IAC5CA,MAAM,CAACb,SAAS,IAAIU,UAAU,IAAIG,MAAM,CAACV,SAAS,IAAIM,YACzD,CAAC;MAED,IAAI,CAACE,gBAAgB,EAAE;QACrBH,cAAc,CAACM,GAAG,CAACL,YAAY,CAAC;MAClC;IACF;IAEA,OAAOD,cAAc;EACvB,CAAC;;EAED;EACA,MAAMO,mBAAmB,GAAGA,CAAA,KAAyB;IACnD,IAAI,CAACjD,OAAO,CAACkD,kBAAkB,EAAE;MAC/B,OAAOvD,iBAAiB,CAACqC,GAAG,CAACmB,IAAI,KAAK;QAAEC,IAAI,EAAE,SAAS;QAAED;MAAK,CAAC,CAAC,CAAC;IACnE;IAEA,MAAMT,cAAc,GAAGf,iBAAiB,CAAC,CAAC;IAC1C,MAAM0B,gBAAgB,GAAG1D,iBAAiB,CAAC2D,MAAM,CAACH,IAAI,IAAI,CAACT,cAAc,CAACa,GAAG,CAACJ,IAAI,CAAC,CAAC;IAEpF,MAAMK,QAA2B,GAAG,EAAE;IAEtC,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,gBAAgB,CAACzB,MAAM,EAAE6B,CAAC,EAAE,EAAE;MAChD,MAAMC,WAAW,GAAGL,gBAAgB,CAACI,CAAC,CAAC;;MAEvC;MACA,IAAIA,CAAC,GAAG,CAAC,EAAE;QACT,MAAME,QAAQ,GAAGN,gBAAgB,CAACI,CAAC,GAAG,CAAC,CAAC;QACxC,MAAMG,QAAQ,GAAGD,QAAQ,GAAG,GAAG;QAC/B,MAAME,MAAM,GAAGH,WAAW;;QAE1B;QACA,MAAMI,eAAyB,GAAG,EAAE;QACpC,KAAK,IAAIX,IAAI,GAAGS,QAAQ,EAAET,IAAI,GAAGU,MAAM,EAAEV,IAAI,IAAI,GAAG,EAAE;UACpD,IAAIT,cAAc,CAACa,GAAG,CAACJ,IAAI,CAAC,EAAE;YAC5BW,eAAe,CAACC,IAAI,CAACZ,IAAI,CAAC;UAC5B;QACF;QAEA,IAAIW,eAAe,CAAClC,MAAM,GAAG,CAAC,EAAE;UAC9B4B,QAAQ,CAACO,IAAI,CAAC;YACZX,IAAI,EAAE,KAAK;YACXY,SAAS,EAAEJ,QAAQ;YACnBK,OAAO,EAAEJ,MAAM;YACfC;UACF,CAAC,CAAC;QACJ;MACF;;MAEA;MACAN,QAAQ,CAACO,IAAI,CAAC;QAAEX,IAAI,EAAE,SAAS;QAAED,IAAI,EAAEO;MAAY,CAAC,CAAC;IACvD;IAEA,OAAOF,QAAQ;EACjB,CAAC;EAED,MAAMU,gBAAgB,GAAGjB,mBAAmB,CAAC,CAAC;;EAE9C;EACA,MAAMkB,mBAAmB,GAAIhB,IAAY,IAAK;IAC5C,IAAI,CAACnD,OAAO,CAACkD,kBAAkB,EAAE;MAC/B,OAAOpE,WAAW,CAACqE,IAAI,EAAEvD,OAAO,EAAEC,aAAa,EAAEC,eAAe,CAAC;IACnE;;IAEA;IACA,MAAMsE,gBAAgB,GAAGtF,WAAW,CAACqE,IAAI,EAAEvD,OAAO,EAAEC,aAAa,EAAEC,eAAe,CAAC;;IAEnF;IACA,IAAIuE,WAAW,GAAG,CAAC;IAEnB,KAAK,MAAMC,OAAO,IAAIJ,gBAAgB,EAAE;MACtC,IAAII,OAAO,CAAClB,IAAI,KAAK,KAAK,EAAE;QAC1B,MAAMQ,QAAQ,GAAG9E,WAAW,CAACwF,OAAO,CAACN,SAAS,EAAEpE,OAAO,EAAEC,aAAa,EAAEC,eAAe,CAAC;QACxF,MAAM+D,MAAM,GAAG/E,WAAW,CAACwF,OAAO,CAACL,OAAO,EAAErE,OAAO,EAAEC,aAAa,EAAEC,eAAe,CAAC;QACpF,MAAMyE,gBAAgB,GAAGV,MAAM,GAAGD,QAAQ;QAC1C,MAAMY,WAAW,GAAG3E,aAAa,GAAG,EAAE,CAAC,CAAC;;QAExC;QACA,IAAIsD,IAAI,IAAImB,OAAO,CAACL,OAAO,EAAE;UAC3BI,WAAW,IAAKE,gBAAgB,GAAGC,WAAY;QACjD;MACF;IACF;IAEA,OAAOJ,gBAAgB,GAAGC,WAAW;EACvC,CAAC;;EAED;EACA,MAAMI,gBAAgB,GAAGA,CAACT,SAAiB,EAAEC,OAAe,KAAK;IAC/D,IAAI,CAACjE,OAAO,CAACkD,kBAAkB,EAAE;MAC/B,OAAOnE,QAAQ,CAACiF,SAAS,EAAEC,OAAO,EAAEpE,aAAa,CAAC;IACpD;IAEA,MAAM6E,QAAQ,GAAGP,mBAAmB,CAACH,SAAS,CAAC;IAC/C,MAAMW,MAAM,GAAGR,mBAAmB,CAACF,OAAO,CAAC;IAC3C,OAAOU,MAAM,GAAGD,QAAQ;EAC1B,CAAC;;EAED;EACA,MAAME,wBAAwB,GAAGA,CAAA,KAAM;IACrC,IAAI,CAAC5E,OAAO,CAACkD,kBAAkB,EAAE;MAC/B,OAAOzD,aAAa;IACtB;;IAEA;IACA,IAAIoF,UAAU,GAAG,CAAC;IAElB,KAAK,MAAMP,OAAO,IAAIJ,gBAAgB,EAAE;MACtC,IAAII,OAAO,CAAClB,IAAI,KAAK,SAAS,EAAE;QAC9B;QACAyB,UAAU,IAAIhF,aAAa,GAAG,GAAG;MACnC,CAAC,MAAM,IAAIyE,OAAO,CAAClB,IAAI,KAAK,KAAK,EAAE;QACjC;QACAyB,UAAU,IAAIhF,aAAa,GAAG,EAAE;MAClC;IACF;IAEA,OAAOgF,UAAU,GAAG/E,eAAe,GAAG,EAAE,CAAC,CAAC;EAC5C,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAwF,QAAA,GACGtF,SAAS,iBACRJ,OAAA;MAAK2F,SAAS,EAAC,iBAAiB;MAACC,IAAI,EAAC,QAAQ;MAAC,aAAU,QAAQ;MAAAF,QAAA,gBAC/D1F,OAAA;QAAK2F,SAAS,EAAC,SAAS;QAAC,eAAY;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClDhG,OAAA;QAAA0F,QAAA,EAAM;MAAkB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACN,eAGDhG,OAAA;MACE2F,SAAS,EAAC,kBAAkB;MAC5BM,EAAE,EAAC,kBAAkB;MACrBL,IAAI,EAAC,cAAc;MACnB,eAAY,MAAM;MAClBM,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBC,MAAM,EAAE,MAAM;QACdC,QAAQ,EAAE,SAAS;QACnBC,OAAO,EAAEhE,QAAQ,GAAG,GAAG,GAAG;MAC5B,CAAE;MAAAoD,QAAA,gBAGF1F,OAAA;QACE2F,SAAS,EAAC,qBAAqB;QAC/BM,EAAE,EAAC,qBAAqB;QACxBL,IAAI,EAAC,cAAc;QACnB,eAAY,MAAM;QAClBM,KAAK,EAAE;UACLC,QAAQ,EAAE,UAAU;UACpBI,GAAG,EAAE,GAAG;UACRC,IAAI,EAAE,GAAG;UACTC,KAAK,EAAE,GAAGjB,wBAAwB,CAAC,CAAC,IAAI;UACxCY,MAAM,EAAE,GAAG9F,WAAW,GAAG,GAAG,IAAI;UAChCoG,aAAa,EAAE,MAAM;UACrBC,MAAM,EAAE;QACV,CAAE;QAAAjB,QAAA,EAEDZ,gBAAgB,CAAClC,GAAG,CAAC,CAACsC,OAAO,EAAE0B,KAAK,KAAK;UAC3B,IAAI1B,OAAO,CAAClB,IAAI,KAAK,SAAS,EAAE;YAC1C,MAAMD,IAAI,GAAGmB,OAAO,CAACnB,IAAI;YACzB;YACA,MAAM8C,QAAQ,GAAG9C,IAAI,GAAG,GAAG;YAC3B,MAAMuB,QAAQ,GAAGP,mBAAmB,CAAChB,IAAI,CAAC;YAC1C,MAAMwB,MAAM,GAAGR,mBAAmB,CAAC8B,QAAQ,CAAC;YAC5C,MAAMJ,KAAK,GAAGlB,MAAM,GAAGD,QAAQ;;YAEhC;YACA,MAAMwB,UAAU,GAAG/C,IAAI,GAAG,EAAE;YAC5B,MAAMgD,aAAa,GAAGlH,gBAAgB,CAACiH,UAAU,CAAC;YAClD;YACA,MAAME,iBAAiB,GAAGjD,IAAI,GAAG,CAAC;YAClC,MAAMkD,YAAY,GAAGD,iBAAiB,GAAG,IAAIlH,cAAc,CAAC4C,IAAI,CAACwE,GAAG,CAACH,aAAa,CAAC,CAAC,EAAE,GAAGjH,cAAc,CAACiH,aAAa,CAAC;YAEtH,oBACE/G,OAAA;cAEE2F,SAAS,EAAC,oBAAoB;cAC9BM,EAAE,EAAE,WAAWlC,IAAI,EAAG;cACtB6B,IAAI,EAAC,cAAc;cACnB,cAAY,OAAOqB,YAAY,EAAG;cAClCf,KAAK,EAAE;gBACLC,QAAQ,EAAE,UAAU;gBACpBK,IAAI,EAAE,GAAGlB,QAAQ,IAAI;gBACrBmB,KAAK,EAAE,GAAGA,KAAK,IAAI;gBACnBL,MAAM,EAAE,MAAM;gBACde,UAAU,EAAEvH,eAAe,CAACmE,IAAI,EAAEvD,OAAO,CAAC;gBAC1C4G,OAAO,EAAE,GAAG;gBACZT,MAAM,EAAE;cACV,CAAE;cAAAjB,QAAA,eAGF1F,OAAA;gBACE2F,SAAS,EAAC,eAAe;gBACzBM,EAAE,EAAE,iBAAiBlC,IAAI,EAAG;gBAC5B,cAAY,OAAOkD,YAAY,EAAG;gBAClCf,KAAK,EAAE;kBACLC,QAAQ,EAAE,UAAU;kBACpBI,GAAG,EAAE,KAAK;kBACVC,IAAI,EAAE,KAAK;kBACXa,SAAS,EAAE,uBAAuB;kBAClCC,QAAQ,EAAE,MAAM;kBAChBC,UAAU,EAAE,MAAM;kBAClBC,KAAK,EAAE,0BAA0B;kBACjCC,UAAU,EAAE,gCAAgC;kBAC5Cf,aAAa,EAAE,MAAM;kBACrBC,MAAM,EAAE,CAAC;kBACTe,UAAU,EAAE;gBACd,CAAE;gBAAAhC,QAAA,EAEDuB;cAAY;gBAAApB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV;YAAC,GAnCD,cAAcjC,IAAI,EAAE;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAoCtB,CAAC;UAE6B,CAAC,MAAM,IAAId,OAAO,CAAClB,IAAI,KAAK,KAAK,EAAE;YAAA,IAAA2D,qBAAA;YACtE;YACA,MAAMC,QAAQ,GAAGnH,aAAa,GAAG,EAAE,CAAC,CAAC;YACrC,MAAM6E,QAAQ,GAAGP,mBAAmB,CAACG,OAAO,CAACN,SAAS,CAAC;YAExD,oBACE5E,OAAA;cAAsCkG,KAAK,EAAE;gBAC3CC,QAAQ,EAAE,UAAU;gBACpBK,IAAI,EAAE,GAAGlB,QAAQ,IAAI;gBACrBmB,KAAK,EAAE,GAAGmB,QAAQ,IAAI;gBACtBxB,MAAM,EAAE,MAAM;gBACde,UAAU,EAAE,wBAAwB;gBACpCU,MAAM,EAAE,mCAAmC;gBAC3ClB,MAAM,EAAE;cACV,CAAE;cAAAjB,QAAA,eAED1F,OAAA;gBAAKkG,KAAK,EAAE;kBACVC,QAAQ,EAAE,UAAU;kBACpBI,GAAG,EAAE,KAAK;kBACVC,IAAI,EAAE,KAAK;kBACXa,SAAS,EAAE,uBAAuB;kBAClCC,QAAQ,EAAE,QAAQ;kBAClBE,KAAK,EAAE,wBAAwB;kBAC/BM,SAAS,EAAE,QAAQ;kBACnBpB,aAAa,EAAE,MAAM;kBACrBC,MAAM,EAAE,CAAC;kBACTY,UAAU,EAAE;gBACd,CAAE;gBAAA7B,QAAA,gBACqB1F,OAAA;kBAAA0F,QAAA,EAAK;gBAAO;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAK,CAAC,eACtChG,OAAA;kBAAKkG,KAAK,EAAE;oBAAEoB,QAAQ,EAAE,QAAQ;oBAAES,SAAS,EAAE;kBAAM,CAAE;kBAAArC,QAAA,EAClD,EAAAiC,qBAAA,GAAAzC,OAAO,CAACR,eAAe,cAAAiD,qBAAA,uBAAvBA,qBAAA,CAAyB/E,GAAG,CAACmB,IAAI,IAAI;oBACpC,MAAMgD,aAAa,GAAGlH,gBAAgB,CAACkE,IAAI,GAAG,EAAE,CAAC;oBACjD,MAAMiD,iBAAiB,GAAGjD,IAAI,GAAG,CAAC;oBAClC,MAAMkD,YAAY,GAAGD,iBAAiB,GAAG,IAAIlH,cAAc,CAAC4C,IAAI,CAACwE,GAAG,CAACH,aAAa,CAAC,CAAC,EAAE,GAAGjH,cAAc,CAACiH,aAAa,CAAC;oBACtH,OAAOE,YAAY;kBACrB,CAAC,CAAC,CAACe,IAAI,CAAC,IAAI,CAAC,KAAI;gBAAE;kBAAAnC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAChB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ;YAAC,GA/BG,OAAOd,OAAO,CAACN,SAAS,EAAE;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAgChC,CAAC;UAEV;UACA,OAAO,IAAI;QACb,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGLhG,OAAA;QAAKkG,KAAK,EAAE;UACVC,QAAQ,EAAE,UAAU;UACpBI,GAAG,EAAE,GAAG;UACRC,IAAI,EAAE,GAAG;UACTC,KAAK,EAAE,GAAGjB,wBAAwB,CAAC,CAAC,IAAI;UACxCY,MAAM,EAAE,GAAG9F,WAAW,GAAG,GAAG,IAAI;UAChCoG,aAAa,EAAE,MAAM;UACrBC,MAAM,EAAE;QACV,CAAE;QAAAjB,QAAA,EACYZ,gBAAgB,CAAClC,GAAG,CAAEsC,OAAO,IAAK;UAC3C,IAAIA,OAAO,CAAClB,IAAI,KAAK,SAAS,EAAE;YAC9B,oBACEhE,OAAA;cAA0CkG,KAAK,EAAE;gBAC/CC,QAAQ,EAAE,UAAU;gBACpBK,IAAI,EAAE,GAAGzB,mBAAmB,CAACG,OAAO,CAACnB,IAAI,CAAC,IAAI;gBAC9C0C,KAAK,EAAE,KAAK;gBACZL,MAAM,EAAE,MAAM;gBACde,UAAU,EAAE,mFAAmF;gBAC/FR,MAAM,EAAE;cACV;YAAE,GAPQ,gBAAgBzB,OAAO,CAACnB,IAAI,EAAE;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOpC,CAAC;UAET,CAAC,MAAM,IAAId,OAAO,CAAClB,IAAI,KAAK,KAAK,EAAE;YACjC,oBACEhE,OAAA;cAA2CkG,KAAK,EAAE;gBAChDC,QAAQ,EAAE,UAAU;gBACpBK,IAAI,EAAE,GAAGzB,mBAAmB,CAACG,OAAO,CAACN,SAAS,CAAC,IAAI;gBACnD6B,KAAK,EAAE,KAAK;gBACZL,MAAM,EAAE,MAAM;gBACde,UAAU,EAAE,mFAAmF;gBAC/FR,MAAM,EAAE;cACV;YAAE,GAPQ,YAAYzB,OAAO,CAACN,SAAS,EAAE;cAAAiB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOrC,CAAC;UAET;UACA,OAAO,IAAI;QACb,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAGNhG,OAAA;QACE2F,SAAS,EAAC,mBAAmB;QAC7BM,EAAE,EAAC,mBAAmB;QACtBL,IAAI,EAAC,cAAc;QACnB,eAAY,MAAM;QAClBM,KAAK,EAAE;UACLC,QAAQ,EAAE,UAAU;UACpBI,GAAG,EAAE,GAAG;UACRC,IAAI,EAAE,GAAG;UACTC,KAAK,EAAE,GAAGjB,wBAAwB,CAAC,CAAC,IAAI;UACxCY,MAAM,EAAE,GAAG9F,WAAW,GAAG,GAAG,IAAI;UAChCoG,aAAa,EAAE,MAAM;UACrBC,MAAM,EAAE;QACV,CAAE;QAAAjB,QAAA,EAEF5E,gBAAgB,CAAC8B,GAAG,CAAEqF,OAAO,iBAC5BjI,OAAA;UAEE2F,SAAS,EAAC,kBAAkB;UAC5BM,EAAE,EAAE,WAAWgC,OAAO,CAACC,QAAQ,EAAG;UAClCtC,IAAI,EAAC,WAAW;UAChB,cAAY,uBAAuBqC,OAAO,CAACC,QAAQ,EAAG;UACtDhC,KAAK,EAAE;YACLC,QAAQ,EAAE,UAAU;YACpBI,GAAG,EAAE,GAAG0B,OAAO,CAAC1B,GAAG,IAAI;YACvBC,IAAI,EAAE,GAAG;YACTC,KAAK,EAAE,MAAM;YACbL,MAAM,EAAE,MAAM;YACde,UAAU,EAAE,6CAA6CpG,aAAa,CAACkH,OAAO,CAACC,QAAQ,CAAC,SAASnH,aAAa,CAACkH,OAAO,CAACC,QAAQ,CAAC,yBAAyB;YACzJd,OAAO,EAAE,GAAG;YACZT,MAAM,EAAE;UACV,CAAE;UAAAjB,QAAA,eAEF1F,OAAA;YACE2F,SAAS,EAAC,gBAAgB;YAC1BM,EAAE,EAAE,kBAAkBgC,OAAO,CAACC,QAAQ,EAAG;YACzC,cAAY,WAAWD,OAAO,CAACC,QAAQ,EAAG;YAC1ChC,KAAK,EAAE;cACLC,QAAQ,EAAE,UAAU;cACpBK,IAAI,EAAE,MAAM;cACZD,GAAG,EAAE,KAAK;cACVc,SAAS,EAAE,kBAAkB;cAC7BF,UAAU,EAAEpG,aAAa,CAACkH,OAAO,CAACC,QAAQ,CAAC;cAC3CV,KAAK,EAAE,OAAO;cACdlB,OAAO,EAAE,SAAS;cAClB6B,YAAY,EAAE,KAAK;cACnBb,QAAQ,EAAE,QAAQ;cAClBC,UAAU,EAAE,MAAM;cAClBa,UAAU,EAAE,QAAQ;cACpBzB,MAAM,EAAE;YACV,CAAE;YAAAjB,QAAA,EAEDuC,OAAO,CAACC;UAAQ;YAAArC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC,GApCD,oBAAoBiC,OAAO,CAACC,QAAQ,EAAE;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqCxC,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAGLhG,OAAA;QACE2F,SAAS,EAAC,iBAAiB;QAC3BM,EAAE,EAAC,iBAAiB;QACpBL,IAAI,EAAC,MAAM;QACX,cAAW,uNAAwC;QACnDM,KAAK,EAAE;UACLC,QAAQ,EAAE,UAAU;UACpBM,KAAK,EAAE,GAAGjB,wBAAwB,CAAC,CAAC,IAAI;UACxCY,MAAM,EAAE,GAAG9F,WAAW,GAAG,EAAE,IAAI;UAC/BqG,MAAM,EAAE;QACV,CAAE;QAAAjB,QAAA,EAEF/E,YAAY,CAACiC,GAAG,CAAC,CAACyF,GAAG,EAAEC,QAAQ,kBAC9BtI,OAAA;UAEE2F,SAAS,EAAC,cAAc;UACxBM,EAAE,EAAE,gBAAgBqC,QAAQ,EAAG;UAC/B1C,IAAI,EAAC,UAAU;UACf,cAAY,UAAU0C,QAAQ,GAAG,CAAC,kBAAmB;UACrDpC,KAAK,EAAE;YACLC,QAAQ,EAAE,UAAU;YACpBC,MAAM,EAAEiC,GAAG,CAAC7F,MAAM,KAAK,CAAC,GAAG,MAAM,GAAG,MAAM;YAC1C+F,YAAY,EAAEF,GAAG,CAAC7F,MAAM,KAAK,CAAC,GAAG,KAAK,GAAG;UAC3C,CAAE;UAAAkD,QAAA,EAED2C,GAAG,CAACzF,GAAG,CAAEe,MAAM,iBACd3D,OAAA,CAACR,KAAK,CAACS,QAAQ;YAAAyF,QAAA,gBAEb1F,OAAA;cACE2F,SAAS,EAAC,kBAAkB;cAC5BM,EAAE,EAAE,cAActC,MAAM,CAACsC,EAAE,EAAG;cAC9B,cAAY,iBAAiBtC,MAAM,CAACb,SAAS,EAAG;cAChDoD,KAAK,EAAE;gBACLC,QAAQ,EAAE,UAAU;gBACpBK,IAAI,EAAE,GAAGzB,mBAAmB,CAACpB,MAAM,CAACb,SAAS,CAAC,IAAI;gBAClDyD,GAAG,EAAE,CAAC;gBACNe,QAAQ,EAAE,MAAM;gBAChBE,KAAK,EAAE,0BAA0B;gBACjCgB,SAAS,EAAE,QAAQ;gBACnBjB,UAAU,EAAE,GAAG;gBACfF,SAAS,EAAE;cACb,CAAE;cAAA3B,QAAA,EAED/B,MAAM,CAACb;YAAS;cAAA+C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CAAC,EAEarC,MAAM,CAAC8E,UAAU,iBAClCzI,OAAA;cACE2F,SAAS,EAAC,aAAa;cACvBM,EAAE,EAAE,eAAetC,MAAM,CAACsC,EAAE,EAAG;cAC/B,cAAY,qBAAqBtC,MAAM,CAAC8E,UAAU,EAAG;cACrDvC,KAAK,EAAE;gBACLC,QAAQ,EAAE,UAAU;gBACpBK,IAAI,EAAE,GAAGzB,mBAAmB,CAACpB,MAAM,CAAC8E,UAAU,CAAC,IAAI;gBACnDlC,GAAG,EAAE,CAAC;gBACNe,QAAQ,EAAE,MAAM;gBAChBE,KAAK,EAAE,SAAS;gBAAE;gBAClBgB,SAAS,EAAE,QAAQ;gBACnBjB,UAAU,EAAE,MAAM;gBAClBF,SAAS,EAAE;cACb,CAAE;cAAA3B,QAAA,GACH,eACI,EAAC/B,MAAM,CAAC8E,UAAU;YAAA;cAAA5C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CACP,EAEkBrC,MAAM,CAAC+E,QAAQ,iBAChC1I,OAAA;cACE2F,SAAS,EAAC,aAAa;cACvBM,EAAE,EAAE,aAAatC,MAAM,CAACsC,EAAE,EAAG;cAC7B,cAAY,oBAAoBtC,MAAM,CAAC+E,QAAQ,EAAG;cAClDxC,KAAK,EAAE;gBACLC,QAAQ,EAAE,UAAU;gBACpBK,IAAI,EAAE,GAAGzB,mBAAmB,CAACpB,MAAM,CAAC+E,QAAQ,CAAC,IAAI;gBACjDnC,GAAG,EAAE,CAAC;gBACNe,QAAQ,EAAE,MAAM;gBAChBE,KAAK,EAAE,SAAS;gBAAE;gBAClBgB,SAAS,EAAE,QAAQ;gBACnBjB,UAAU,EAAE,MAAM;gBAClBF,SAAS,EAAE;cACb,CAAE;cAAA3B,QAAA,EAED/B,MAAM,CAAC+E;YAAQ;cAAA7C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CACP,eAEiBhG,OAAA;cACE2F,SAAS,EAAC,kBAAkB;cAC5BM,EAAE,EAAE,cAActC,MAAM,CAACsC,EAAE,EAAG;cAC9B,cAAY,eAAetC,MAAM,CAACV,SAAS,EAAG;cAC9CiD,KAAK,EAAE;gBACLC,QAAQ,EAAE,UAAU;gBACpBK,IAAI,EAAE,GAAGzB,mBAAmB,CAACpB,MAAM,CAACV,SAAS,CAAC,IAAI;gBAClDsD,GAAG,EAAE,CAAC;gBACNe,QAAQ,EAAE,MAAM;gBAChBE,KAAK,EAAE,0BAA0B;gBACjCgB,SAAS,EAAE,QAAQ;gBACnBjB,UAAU,EAAE,GAAG;gBACfF,SAAS,EAAE;cACb,CAAE;cAAA3B,QAAA,EAED/B,MAAM,CAACV;YAAS;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CAAC,EAGzBpF,OAAO,CAAC+H,gBAAgB,IAAI,CAAChF,MAAM,CAACiF,gBAAgB,EAAEjF,MAAM,CAACkF,gBAAgB,EAAElF,MAAM,CAACmF,gBAAgB,CAAC,CACrG5E,MAAM,CAACH,IAAI,IAAIA,IAAI,KAAKgF,SAAS,IAAIhF,IAAI,KAAK,IAAI,CAAC,CACnDnB,GAAG,CAAC,CAACmB,IAAI,EAAE6C,KAAK,KAAK;cACpB,oBACE5G,OAAA;gBAEE2F,SAAS,EAAC,oBAAoB;gBAC9BM,EAAE,EAAE,eAAetC,MAAM,CAACsC,EAAE,IAAIW,KAAK,EAAG;gBACxChB,IAAI,EAAC,QAAQ;gBACb,cAAY,cAAcgB,KAAK,GAAG,CAAC,MAAM7C,IAAI,OAAQ;gBACrDiF,QAAQ,EAAE,CAAE;gBACZ9C,KAAK,EAAE;kBACLC,QAAQ,EAAE,UAAU;kBACpBK,IAAI,EAAE,GAAGzB,mBAAmB,CAAChB,IAAc,CAAC,IAAI;kBAChDwC,GAAG,EAAE,MAAM;kBACXE,KAAK,EAAE,KAAK;kBACZL,MAAM,EAAE,MAAM;kBACd6C,eAAe,EAAEjI,iBAAiB,CAACE,cAAc,CAACyC,MAAM,CAAC,CAAC;kBAC1DgD,MAAM,EAAE,CAAAlF,uBAAuB,aAAvBA,uBAAuB,uBAAvBA,uBAAuB,CAAEyH,QAAQ,MAAKvF,MAAM,CAACsC,EAAE,IAAI,CAAAxE,uBAAuB,aAAvBA,uBAAuB,uBAAvBA,uBAAuB,CAAEmF,KAAK,MAAKA,KAAK,GAAG,EAAE,GAAG,CAAC;kBAC5GS,SAAS,EAAE,kBAAkB;kBAC7B8B,MAAM,EAAE,SAAS;kBACjBC,UAAU,EAAE;gBACd,CAAE;gBACJC,YAAY,EAAGC,CAAC,IAAK;kBACnBA,CAAC,CAACC,aAAa,CAACrD,KAAK,CAAC+C,eAAe,GAAGlI,aAAa,CAACG,cAAc,CAACyC,MAAM,CAAC,CAAC;kBAC7E2F,CAAC,CAACC,aAAa,CAACrD,KAAK,CAACsD,SAAS,GAAG,WAAWzI,aAAa,CAACG,cAAc,CAACyC,MAAM,CAAC,CAAC,EAAE;;kBAEpF;kBACAjC,0BAA0B,CAAC;oBAAEwH,QAAQ,EAAEvF,MAAM,CAACsC,EAAE;oBAAEW;kBAAM,CAAC,CAAC;;kBAE1D;kBACA,IAAI3E,aAAa,CAACwH,OAAO,EAAE;oBACzBC,YAAY,CAACzH,aAAa,CAACwH,OAAO,CAAC;kBACrC;;kBAEA;kBACAxH,aAAa,CAACwH,OAAO,GAAGE,UAAU,CAAC,MAAM;oBACvC/H,qBAAqB,CAAC;sBAAE+B,MAAM;sBAAEI,IAAI,EAAEA,IAAc;sBAAE6C;oBAAM,CAAC,CAAC;oBAC9D9E,6BAA6B,CAAC;sBAAE8H,CAAC,EAAEN,CAAC,CAACO,OAAO;sBAAEC,CAAC,EAAER,CAAC,CAACS;oBAAQ,CAAC,CAAC;oBAC7D/H,yBAAyB,CAAC,IAAI,CAAC;kBACjC,CAAC,EAAE,GAAG,CAAC;gBACT,CAAE;gBACFgI,YAAY,EAAGV,CAAC,IAAK;kBACnBA,CAAC,CAACC,aAAa,CAACrD,KAAK,CAAC+C,eAAe,GAAGjI,iBAAiB,CAACE,cAAc,CAACyC,MAAM,CAAC,CAAC;kBACjF2F,CAAC,CAACC,aAAa,CAACrD,KAAK,CAACsD,SAAS,GAAG,MAAM;;kBAExC;kBACA9H,0BAA0B,CAAC,IAAI,CAAC;;kBAEhC;kBACA,IAAIO,aAAa,CAACwH,OAAO,EAAE;oBACzBC,YAAY,CAACzH,aAAa,CAACwH,OAAO,CAAC;oBACnCxH,aAAa,CAACwH,OAAO,GAAG,IAAI;kBAC9B;kBACAzH,yBAAyB,CAAC,KAAK,CAAC;kBAChCJ,qBAAqB,CAAC,IAAI,CAAC;gBAC7B,CAAE;gBACFqI,WAAW,EAAGX,CAAC,IAAK;kBAClBxH,6BAA6B,CAAC;oBAAE8H,CAAC,EAAEN,CAAC,CAACO,OAAO;oBAAEC,CAAC,EAAER,CAAC,CAACS;kBAAQ,CAAC,CAAC;gBAC/D,CAAE;gBACFG,SAAS,EAAGZ,CAAC,IAAK;kBAChB,IAAIA,CAAC,CAACa,GAAG,KAAK,OAAO,IAAIb,CAAC,CAACa,GAAG,KAAK,GAAG,EAAE;oBACtCb,CAAC,CAACc,cAAc,CAAC,CAAC;oBAClB;oBACAxI,qBAAqB,CAAC;sBAAE+B,MAAM;sBAAEI,IAAI,EAAEA,IAAc;sBAAE6C;oBAAM,CAAC,CAAC;oBAC9D;oBACA,MAAMyD,IAAI,GAAGf,CAAC,CAACC,aAAa,CAACe,qBAAqB,CAAC,CAAC;oBACpDxI,6BAA6B,CAAC;sBAC5B8H,CAAC,EAAES,IAAI,CAAC7D,IAAI,GAAG6D,IAAI,CAAC5D,KAAK,GAAG,CAAC;sBAC7BqD,CAAC,EAAEO,IAAI,CAAC9D,GAAG,GAAG;oBAChB,CAAC,CAAC;oBACFvE,yBAAyB,CAAC,IAAI,CAAC;kBACjC;gBACF,CAAE;gBAAA0D,QAAA,eAEA1F,OAAA;kBAAMkG,KAAK,EAAE;oBACXC,QAAQ,EAAE,UAAU;oBACpBI,GAAG,EAAE,OAAO;oBACZC,IAAI,EAAE,KAAK;oBACXa,SAAS,EAAE,kBAAkB;oBAC7BC,QAAQ,EAAE,KAAK;oBACfE,KAAK,EAAExG,iBAAiB,CAACE,cAAc,CAACyC,MAAM,CAAC,CAAC;oBAChD4D,UAAU,EAAE,MAAM;oBAClBa,UAAU,EAAE,QAAQ;oBACpBa,eAAe,EAAE,uBAAuB;oBACxC3C,OAAO,EAAE,SAAS;oBAClB6B,YAAY,EAAE,KAAK;oBACnBN,MAAM,EAAE,aAAa7G,iBAAiB,CAACE,cAAc,CAACyC,MAAM,CAAC,CAAC,EAAE;oBAChEyF,UAAU,EAAE;kBACd,CAAE;kBAAA1D,QAAA,EACC3B;gBAAI;kBAAA8B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACD;cAAC,GAtFFY,KAAK;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAuFP,CAAC;YAEV,CAAC,CAAC,EAGFrC,MAAM,CAAC8E,UAAU,IAAI9E,MAAM,CAAC+E,QAAQ,iBACnC1I,OAAA;cACE2F,SAAS,EAAC,WAAW;cACrBM,EAAE,EAAE,aAAatC,MAAM,CAACsC,EAAE,EAAG;cAC7BL,IAAI,EAAC,cAAc;cACnB,cAAY,qBAAqBjC,MAAM,CAAC8E,UAAU,MAAM9E,MAAM,CAAC+E,QAAQ,EAAG;cAC1ExC,KAAK,EAAE;gBACLC,QAAQ,EAAE,UAAU;gBACpBI,GAAG,EAAE,OAAO;gBACZC,IAAI,EAAE,GAAGzB,mBAAmB,CAACpB,MAAM,CAAC8E,UAAU,CAAC,IAAI;gBACnDhC,KAAK,EAAE,GAAGpB,gBAAgB,CAAC1B,MAAM,CAAC8E,UAAU,EAAE9E,MAAM,CAAC+E,QAAQ,CAAC,IAAI;gBAClEtC,MAAM,EAAE,MAAM;gBACd6C,eAAe,EAAE,yBAAyB;gBAC1CvC,aAAa,EAAE,MAAM;gBACrB6D,UAAU,EAAE,mBAAmB;gBAC/BC,WAAW,EAAE,mBAAmB;gBAChCrC,YAAY,EAAE,KAAK;gBACnBxB,MAAM,EAAE;cACV;YAAE;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CACF,eAEiBhG,OAAA;cAChB2F,SAAS,EAAC,UAAU;cACpBM,EAAE,EAAE,YAAYtC,MAAM,CAACsC,EAAE,EAAG;cAC5BL,IAAI,EAAC,QAAQ;cACb,cAAY,GAAGjC,MAAM,CAAC8G,IAAI,KAAK9G,MAAM,CAACb,SAAS,MAAMa,MAAM,CAACV,SAAS,KAAKU,MAAM,CAACuE,QAAQ,EAAG;cAC5Fc,QAAQ,EAAE,CAAE;cACZ9C,KAAK,EAAE;gBACLC,QAAQ,EAAE,UAAU;gBACpBI,GAAG,EAAE,MAAM;gBACXC,IAAI,EAAE,GAAGzB,mBAAmB,CAACpB,MAAM,CAACb,SAAS,CAAC,IAAI;gBAClD2D,KAAK,EAAE,GAAGpB,gBAAgB,CAAC1B,MAAM,CAACb,SAAS,EAAEa,MAAM,CAACV,SAAS,CAAC,IAAI;gBAClEmD,MAAM,EAAE,MAAM;gBACde,UAAU,EAAE,2BAA2BlG,kBAAkB,CAACC,cAAc,CAACyC,MAAM,CAAC,CAAC,oBAAoB;gBACrGwE,YAAY,EAAE,KAAK;gBACnBgB,MAAM,EAAE,SAAS;gBACjBuB,OAAO,EAAE,MAAM;gBACfC,UAAU,EAAE,QAAQ;gBACpBrE,OAAO,EAAE,QAAQ;gBACjBkB,KAAK,EAAE,OAAO;gBACdF,QAAQ,EAAE,MAAM;gBAChBC,UAAU,EAAE,MAAM;gBAClBqD,QAAQ,EAAE,MAAM;gBAChBpB,SAAS,EAAE,4BAA4B;gBACvC3B,MAAM,EAAE,qBAAqB;gBAC7BT,OAAO,EAAE,CAAAjF,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE8D,EAAE,MAAKtC,MAAM,CAACsC,EAAE,GAAG,GAAG,GAAG,CAAC;gBACnDU,MAAM,EAAE,CAAC;gBACTU,SAAS,EAAE,CAAAlF,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE8D,EAAE,MAAKtC,MAAM,CAACsC,EAAE,GAAG,aAAa,GAAG,UAAU;gBACxEmD,UAAU,EAAE;cACd,CAAE;cACHC,YAAY,EAAGC,CAAC,IAAK;gBACnB,IAAI,CAAChH,QAAQ,EAAE;kBACbgH,CAAC,CAACC,aAAa,CAACrD,KAAK,CAACmB,SAAS,GAAG,8BAA8B;kBAChEiC,CAAC,CAACC,aAAa,CAACrD,KAAK,CAACsD,SAAS,GAAG,+BAA+B;kBACjEF,CAAC,CAACC,aAAa,CAACrD,KAAK,CAAC2E,WAAW,GAAG,0BAA0B;kBAC9DvJ,gBAAgB,CAAC;oBAAEsI,CAAC,EAAEN,CAAC,CAACO,OAAO;oBAAEC,CAAC,EAAER,CAAC,CAACS;kBAAQ,CAAC,CAAC;kBAChD3I,gBAAgB,CAACuC,MAAM,CAAC;kBACxBgG,UAAU,CAAC,MAAMnI,cAAc,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;gBAC7C;cACF,CAAE;cACFwI,YAAY,EAAGV,CAAC,IAAK;gBACnB,IAAI,CAAChH,QAAQ,EAAE;kBACbgH,CAAC,CAACC,aAAa,CAACrD,KAAK,CAACmB,SAAS,GAAG,CAAAlF,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE8D,EAAE,MAAKtC,MAAM,CAACsC,EAAE,GAAG,aAAa,GAAG,wBAAwB;kBAC7GqD,CAAC,CAACC,aAAa,CAACrD,KAAK,CAACsD,SAAS,GAAG,+BAA+B;kBACjEF,CAAC,CAACC,aAAa,CAACrD,KAAK,CAAC2E,WAAW,GAAG,0BAA0B;kBAC9DzJ,gBAAgB,CAAC,IAAI,CAAC;kBACtBI,cAAc,CAAC,KAAK,CAAC;gBACvB;cACF,CAAE;cACFyI,WAAW,EAAGX,CAAC,IAAK;gBAClB,IAAI,CAAChH,QAAQ,EAAE;kBACbhB,gBAAgB,CAAC;oBAAEsI,CAAC,EAAEN,CAAC,CAACO,OAAO;oBAAEC,CAAC,EAAER,CAAC,CAACS;kBAAQ,CAAC,CAAC;gBAClD;cACF,CAAE;cACFG,SAAS,EAAGZ,CAAC,IAAK;gBAChB,IAAIA,CAAC,CAACa,GAAG,KAAK,OAAO,IAAIb,CAAC,CAACa,GAAG,KAAK,GAAG,EAAE;kBACtCb,CAAC,CAACc,cAAc,CAAC,CAAC;kBAClB,IAAI9H,QAAQ,EAAE;oBACZF,iBAAiB,CAACuB,MAAM,CAAC;kBAC3B,CAAC,MAAM;oBACLvC,gBAAgB,CAACuC,MAAM,CAAC;oBACxBnC,cAAc,CAAC,IAAI,CAAC;kBACtB;gBACF;cACF,CAAE;cACFsJ,OAAO,EAAEA,CAAA,KAAM;gBACb,IAAIxI,QAAQ,EAAE;kBACZF,iBAAiB,CAACuB,MAAM,CAAC;gBAC3B;cACF,CAAE;cAAA+B,QAAA,eAEF1F,OAAA;gBAAKkG,KAAK,EAAE;kBAAEwE,OAAO,EAAE,MAAM;kBAAEK,aAAa,EAAE,QAAQ;kBAAEC,UAAU,EAAE;gBAAM,CAAE;gBAAAtF,QAAA,eAC1E1F,OAAA;kBAAA0F,QAAA,EAAO/B,MAAM,CAAC8G;gBAAI;kBAAA5E,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA,GA/QarC,MAAM,CAACsC,EAAE;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAgRd,CACjB;QAAC,GA7RGsC,QAAQ;UAAAzC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA8RV,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAAA3D,EAAA,CA5sBYlC,QAAiC;EAAA,QAmC3BV,SAAS;AAAA;AAAAwL,EAAA,GAnCf9K,QAAiC;AAAA,IAAA8K,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}