{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selecty\\\\Documents\\\\PetProjects\\\\chronoline-frontend\\\\src\\\\components\\\\Timeline.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useMobile } from '../hooks/useMobile';\nimport { getPosition, getWidth, getCenturyColor, getCenturyNumber, toRomanNumeral } from '../utils/timelineUtils';\n\n// Типы для элементов временной линии\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Timeline = ({\n  isLoading,\n  timelineWidth,\n  totalHeight,\n  centuryBoundaries,\n  minYear,\n  pixelsPerYear,\n  LEFT_PADDING_PX,\n  rowPlacement,\n  filters,\n  groupingType,\n  categoryDividers,\n  getGroupColor,\n  getGroupColorDark,\n  getGroupColorMuted,\n  getPersonGroup,\n  hoveredPerson,\n  setHoveredPerson,\n  mousePosition,\n  setMousePosition,\n  showTooltip,\n  setShowTooltip,\n  handlePersonHover,\n  handleAchievementHover,\n  activeAchievementMarker,\n  setActiveAchievementMarker,\n  hoveredAchievement,\n  setHoveredAchievement,\n  achievementTooltipPosition,\n  setAchievementTooltipPosition,\n  showAchievementTooltip,\n  setShowAchievementTooltip,\n  hoverTimerRef,\n  sortedData,\n  selectedPerson,\n  setSelectedPerson\n}) => {\n  _s();\n  const isMobile = useMobile();\n\n  // Функция для определения пустых веков на основе отфильтрованных данных\n  const getEmptyCenturies = () => {\n    if (!sortedData || sortedData.length === 0) return new Set();\n\n    // Используем отфильтрованные данные для определения диапазона\n    const minYear = Math.min(...sortedData.map(p => p.birthYear));\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear));\n    const startCentury = Math.floor(minYear / 100) * 100;\n    const endCentury = Math.ceil(maxYear / 100) * 100;\n    const emptyCenturies = new Set();\n    for (let centuryStart = startCentury; centuryStart <= endCentury; centuryStart += 100) {\n      const centuryEnd = centuryStart + 99;\n      const hasDataInCentury = sortedData.some(person => person.birthYear <= centuryEnd && person.deathYear >= centuryStart);\n      if (!hasDataInCentury) {\n        emptyCenturies.add(centuryStart);\n      }\n    }\n    return emptyCenturies;\n  };\n\n  // Создаем массив для отображения веков с промежутками\n  const getTimelineElements = () => {\n    if (!filters.hideEmptyCenturies) {\n      return centuryBoundaries.map(year => ({\n        type: 'century',\n        year\n      }));\n    }\n    const emptyCenturies = getEmptyCenturies();\n    const visibleCenturies = centuryBoundaries.filter(year => !emptyCenturies.has(year));\n    const elements = [];\n    for (let i = 0; i < visibleCenturies.length; i++) {\n      const currentYear = visibleCenturies[i];\n\n      // Добавляем промежуток перед веком (кроме первого)\n      if (i > 0) {\n        const prevYear = visibleCenturies[i - 1];\n        const gapStart = prevYear + 100;\n        const gapEnd = currentYear;\n\n        // Находим все скрытые века в промежутке\n        const hiddenCenturies = [];\n        for (let year = gapStart; year < gapEnd; year += 100) {\n          if (emptyCenturies.has(year)) {\n            hiddenCenturies.push(year);\n          }\n        }\n        if (hiddenCenturies.length > 0) {\n          elements.push({\n            type: 'gap',\n            startYear: gapStart,\n            endYear: gapEnd,\n            hiddenCenturies\n          });\n        }\n      }\n\n      // Добавляем сам век\n      elements.push({\n        type: 'century',\n        year: currentYear\n      });\n    }\n    return elements;\n  };\n  const timelineElements = getTimelineElements();\n\n  // Функция для вычисления позиции с учетом промежутков\n  const getAdjustedPosition = year => {\n    if (!filters.hideEmptyCenturies) {\n      return getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    }\n\n    // Находим позицию года в оригинальной шкале\n    const originalPosition = getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n\n    // Вычисляем смещение, проходя по всем промежуткам до этого года\n    let totalOffset = 0;\n    for (const element of timelineElements) {\n      if (element.type === 'gap') {\n        const gapStart = getPosition(element.startYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const gapEnd = getPosition(element.endYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const originalGapWidth = gapEnd - gapStart;\n        const newGapWidth = pixelsPerYear * 10; // 10 лет\n\n        // Если год находится после этого промежутка, добавляем смещение\n        if (year >= element.endYear) {\n          totalOffset += originalGapWidth - newGapWidth;\n        }\n      }\n    }\n    return originalPosition - totalOffset;\n  };\n\n  // Функция для вычисления ширины с учетом промежутков\n  const getAdjustedWidth = (startYear, endYear) => {\n    if (!filters.hideEmptyCenturies) {\n      return getWidth(startYear, endYear, pixelsPerYear);\n    }\n    const startPos = getAdjustedPosition(startYear);\n    const endPos = getAdjustedPosition(endYear);\n    return endPos - startPos;\n  };\n\n  // Функция для вычисления скорректированной ширины таймлайна\n  const getAdjustedTimelineWidth = () => {\n    if (!filters.hideEmptyCenturies) {\n      return timelineWidth;\n    }\n\n    // Вычисляем общую ширину, проходя по всем элементам\n    let totalWidth = 0;\n    for (const element of timelineElements) {\n      if (element.type === 'century') {\n        // Век занимает 100 лет\n        totalWidth += pixelsPerYear * 100;\n      } else if (element.type === 'gap') {\n        // Промежуток занимает 10 лет\n        totalWidth += pixelsPerYear * 10;\n      }\n    }\n    return totalWidth + LEFT_PADDING_PX + 50; // Добавляем отступы\n  };\n\n  // Функция для точного позиционирования achievement tooltip\n  const getAchievementTooltipPosition = (element, personId, index) => {\n    let targetElement = element;\n    const expectedId = `achievement-${personId}-${index}`;\n    if (!targetElement) {\n      targetElement = document.getElementById(expectedId);\n    }\n    if (!targetElement) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n    const rect = targetElement.getBoundingClientRect();\n    if (rect.width === 0 || rect.height === 0) {\n      return {\n        x: 0,\n        y: 0\n      };\n    }\n\n    // Базовые размеры tooltip\n    const tooltipWidth = 250;\n    const tooltipHeight = 150;\n\n    // Начальная позиция - справа от маркера\n    let tooltipX = rect.right + 10;\n    let tooltipY = rect.top - tooltipHeight / 2;\n\n    // Проверяем границы экрана\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n\n    // Если tooltip выходит за правую границу, показываем слева от маркера\n    if (tooltipX + tooltipWidth > viewportWidth) {\n      tooltipX = rect.left - tooltipWidth - 10;\n    }\n\n    // Если tooltip выходит за левую границу, показываем справа с отступом\n    if (tooltipX < 10) {\n      tooltipX = 10;\n    }\n\n    // Если tooltip выходит за верхнюю границу, показываем снизу\n    if (tooltipY < 10) {\n      tooltipY = rect.bottom + 10;\n    }\n\n    // Если tooltip выходит за нижнюю границу, показываем сверху\n    if (tooltipY + tooltipHeight > viewportHeight - 10) {\n      tooltipY = rect.top - tooltipHeight - 10;\n    }\n\n    // Убеждаемся, что tooltip не выходит за границы\n    tooltipX = Math.max(10, Math.min(tooltipX, viewportWidth - tooltipWidth - 10));\n    tooltipY = Math.max(10, Math.min(tooltipY, viewportHeight - tooltipHeight - 10));\n    return {\n      x: tooltipX,\n      y: tooltipY\n    };\n  };\n\n  // Функция для создания повторяющихся меток веков через каждые 90vh\n  const createRepeatingCenturyLabels = () => {\n    const viewportHeight = window.innerHeight;\n    const labels = [];\n\n    // Создаем метки для каждого века\n    timelineElements.forEach(element => {\n      if (element.type === 'century') {\n        const year = element.year;\n        const centerYear = year + 50;\n        const centuryNumber = getCenturyNumber(centerYear);\n        const isNegativeCentury = year < 0;\n        const romanNumeral = isNegativeCentury ? `${toRomanNumeral(Math.abs(centuryNumber))} в. до н.э` : `${toRomanNumeral(centuryNumber)} в.`;\n        const startPos = getAdjustedPosition(year);\n        const nextYear = year + 100;\n        const endPos = getAdjustedPosition(nextYear);\n        const centerPos = startPos + (endPos - startPos) / 2; // Центр века\n\n        // Создаем метки через каждые 90vh\n        for (let top = 0; top < totalHeight; top += viewportHeight * 0.9) {\n          labels.push({\n            id: `century-label-${year}-${top}`,\n            year,\n            romanNumeral,\n            left: centerPos,\n            top: top + viewportHeight / 2,\n            // Центрируем по вертикали в каждом экране\n            type: 'century'\n          });\n        }\n      } else if (element.type === 'gap') {\n        var _element$hiddenCentur;\n        const startPos = getAdjustedPosition(element.startYear);\n        const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n        const centerPos = startPos + gapWidth / 2; // Центр промежутка\n        const hiddenCenturiesText = ((_element$hiddenCentur = element.hiddenCenturies) === null || _element$hiddenCentur === void 0 ? void 0 : _element$hiddenCentur.map(year => {\n          const centuryNumber = getCenturyNumber(year + 50);\n          const isNegativeCentury = year < 0;\n          const romanNumeral = isNegativeCentury ? `${toRomanNumeral(Math.abs(centuryNumber))} в. до н.э` : `${toRomanNumeral(centuryNumber)} в.`;\n          return romanNumeral;\n        }).join(', ')) || '';\n\n        // Создаем метки для промежутков через каждые 90vh\n        for (let top = 0; top < totalHeight; top += viewportHeight * 0.9) {\n          labels.push({\n            id: `gap-label-${element.startYear}-${top}`,\n            year: element.startYear,\n            romanNumeral: hiddenCenturiesText,\n            left: centerPos,\n            top: top + viewportHeight / 2,\n            type: 'gap'\n          });\n        }\n      }\n    });\n    return labels;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-content\",\n      id: \"timeline-content\",\n      role: \"presentation\",\n      \"aria-hidden\": \"true\",\n      style: {\n        position: 'relative',\n        height: '100%',\n        overflow: 'visible',\n        padding: isMobile ? '0' : '1rem 0 2rem 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-background\",\n        id: \"timeline-background\",\n        role: \"presentation\",\n        \"aria-hidden\": \"true\",\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 1\n        },\n        children: timelineElements.map((element, index) => {\n          if (element.type === 'century') {\n            const year = element.year;\n            // Каждый век занимает ровно 100 лет\n            const nextYear = year + 100;\n            const startPos = getAdjustedPosition(year);\n            const endPos = getAdjustedPosition(nextYear);\n            const width = endPos - startPos;\n\n            // Вычисляем век на основе центра года в столетии\n            const centerYear = year + 50;\n            const centuryNumber = getCenturyNumber(centerYear);\n            // Для отрицательных веков добавляем знак минус\n            const isNegativeCentury = year < 0;\n            const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"century-background\",\n              id: `century-${year}`,\n              role: \"presentation\",\n              \"aria-label\": `Век ${romanNumeral}`,\n              style: {\n                position: 'absolute',\n                left: `${startPos}px`,\n                width: `${width}px`,\n                height: '100%',\n                background: getCenturyColor(year, minYear),\n                opacity: 0.3,\n                zIndex: 1\n              }\n            }, `century-bg-${year}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 17\n            }, this);\n          } else if (element.type === 'gap') {\n            // Промежуток между веками - компактный размер (1/10 века)\n            const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n            const startPos = getAdjustedPosition(element.startYear);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${startPos}px`,\n                width: `${gapWidth}px`,\n                height: '100%',\n                background: 'rgba(139, 69, 19, 0.1)',\n                border: '1px dashed rgba(139, 69, 19, 0.3)',\n                zIndex: 1\n              }\n            }, `gap-${element.startYear}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 18\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 5\n        },\n        children: timelineElements.map(element => {\n          if (element.type === 'century') {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(element.year)}px`,\n                width: '2px',\n                height: '100%',\n                background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                zIndex: 5\n              }\n            }, `century-line-${element.year}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 19\n            }, this);\n          } else if (element.type === 'gap') {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(element.startYear)}px`,\n                width: '2px',\n                height: '100%',\n                background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                zIndex: 5\n              }\n            }, `gap-line-${element.startYear}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 19\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 6\n        },\n        children: createRepeatingCenturyLabels().map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            left: `${label.left}px`,\n            top: `${label.top}px`,\n            transform: 'translate(-50%, -50%)',\n            fontSize: label.type === 'century' ? '1.5rem' : '0.8rem',\n            fontWeight: 'bold',\n            color: label.type === 'century' ? 'rgba(244, 228, 193, 0.4)' : 'rgba(139, 69, 19, 0.5)',\n            textShadow: '1px 1px 2px rgba(0, 0, 0, 0.6)',\n            pointerEvents: 'none',\n            fontFamily: label.type === 'century' ? 'serif' : 'sans-serif',\n            textAlign: 'center',\n            maxWidth: '200px',\n            wordWrap: 'break-word'\n          },\n          children: label.type === 'century' ? label.romanNumeral : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u043E:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '0.7rem',\n                marginTop: '2px'\n              },\n              children: label.romanNumeral\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true)\n        }, label.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 14\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-dividers\",\n        id: \"category-dividers\",\n        role: \"presentation\",\n        \"aria-hidden\": \"true\",\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 8\n        },\n        children: categoryDividers.map(divider => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-divider\",\n          id: `divider-${divider.category}`,\n          role: \"separator\",\n          \"aria-label\": `Разделитель группы: ${divider.category}`,\n          style: {\n            position: 'absolute',\n            top: `${divider.top}px`,\n            left: '0',\n            width: '100%',\n            height: '10px',\n            background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n            opacity: 0.6,\n            zIndex: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-label\",\n            id: `category-label-${divider.category}`,\n            \"aria-label\": `Группа: ${divider.category}`,\n            style: {\n              position: 'absolute',\n              left: '20px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              background: getGroupColor(divider.category),\n              color: 'white',\n              padding: '2px 8px',\n              borderRadius: '4px',\n              fontSize: '0.7rem',\n              fontWeight: 'bold',\n              whiteSpace: 'nowrap',\n              zIndex: 9\n            },\n            children: divider.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 15\n          }, this)\n        }, `category-divider-${divider.category}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"person-timeline\",\n        id: \"person-timeline\",\n        role: \"list\",\n        \"aria-label\": \"\\u0412\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043B\\u0438\\u043D\\u0438\\u0438 \\u0438\\u0441\\u0442\\u043E\\u0440\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0445 \\u043B\\u0438\\u0447\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\",\n        style: {\n          position: 'relative',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 60}px`,\n          zIndex: 10\n        },\n        children: rowPlacement.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-row\",\n          id: `timeline-row-${rowIndex}`,\n          role: \"listitem\",\n          \"aria-label\": `Строка ${rowIndex + 1} временной линии`,\n          style: {\n            position: 'relative',\n            height: row.length === 0 ? '20px' : '60px',\n            marginBottom: row.length === 0 ? '0px' : '10px'\n          },\n          children: row.map(person => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"birth-year-label\",\n              id: `birth-year-${person.id}`,\n              \"aria-label\": `Год рождения: ${person.birthYear}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.birthYear)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: 'rgba(244, 228, 193, 0.6)',\n                fontStyle: 'italic',\n                fontWeight: 400,\n                transform: 'translateX(-100%) translateY(-10px)'\n              },\n              children: person.birthYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 614,\n              columnNumber: 19\n            }, this), person.reignStart && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reign-label\",\n              id: `reign-start-${person.id}`,\n              \"aria-label\": `Начало правления: ${person.reignStart}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.reignStart)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: '#E57373',\n                // Темно-красный\n                fontStyle: 'italic',\n                fontWeight: 'bold',\n                transform: 'translateX(-100%) translateY(-22px)'\n              },\n              children: [\"\\uD83D\\uDC51 \", person.reignStart]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 22\n            }, this), person.reignEnd && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reign-label\",\n              id: `reign-end-${person.id}`,\n              \"aria-label\": `Конец правления: ${person.reignEnd}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.reignEnd)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: '#E57373',\n                // Темно-красный\n                fontStyle: 'italic',\n                fontWeight: 'bold',\n                transform: 'translateY(-22px)'\n              },\n              children: person.reignEnd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"death-year-label\",\n              id: `death-year-${person.id}`,\n              \"aria-label\": `Год смерти: ${person.deathYear}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.deathYear)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: 'rgba(244, 228, 193, 0.6)',\n                fontStyle: 'italic',\n                fontWeight: 400,\n                transform: 'translateY(-10px)'\n              },\n              children: person.deathYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 38\n            }, this), filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3].filter(year => year !== undefined && year !== null).map((year, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"achievement-marker\",\n                id: `achievement-${person.id}-${index}`,\n                role: \"button\",\n                \"aria-label\": `Достижение ${index + 1} в ${year} году`,\n                tabIndex: 0,\n                style: {\n                  position: 'absolute',\n                  left: `${getAdjustedPosition(year)}px`,\n                  top: '-4px',\n                  width: '2px',\n                  // Возвращаем стандартную ширину\n                  height: '15px',\n                  // Возвращаем стандартную высоту\n                  backgroundColor: getGroupColorDark(getPersonGroup(person)),\n                  zIndex: (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.personId) === person.id && (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.index) === index ? 10 : 3,\n                  transform: 'translateX(-50%)',\n                  cursor: 'pointer',\n                  transition: 'all 0.2s ease'\n                  // Убираем псевдоэлементы, так как они не работают в inline стилях\n                },\n                onMouseEnter: e => {\n                  if (!isMobile) {\n                    console.log(`Mouse enter for ${person.id}-${index}`);\n\n                    // Визуальные эффекты\n                    e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n\n                    // Устанавливаем активный маркер\n                    setActiveAchievementMarker({\n                      personId: person.id,\n                      index\n                    });\n\n                    // Скрываем tooltip человека\n                    if ((hoveredPerson === null || hoveredPerson === void 0 ? void 0 : hoveredPerson.id) === person.id) {\n                      handlePersonHover(null, 0, 0);\n                    }\n\n                    // Очищаем предыдущий таймер\n                    if (hoverTimerRef.current) {\n                      clearTimeout(hoverTimerRef.current);\n                      hoverTimerRef.current = null;\n                    }\n\n                    // Используем позицию мыши\n                    const position = {\n                      x: e.clientX + 15,\n                      y: e.clientY - 10\n                    };\n                    console.log(`Mouse position for ${person.id}-${index}:`, position);\n\n                    // Устанавливаем новый tooltip через handleAchievementHover\n                    console.log(`Setting achievement tooltip state for ${person.id}-${index}`);\n                    const achievement = {\n                      person,\n                      year: year,\n                      index\n                    };\n                    handleAchievementHover(achievement, position.x, position.y);\n                    console.log(`Tooltip state updated for ${person.id}-${index}:`, {\n                      person: person.name,\n                      year: year,\n                      index: index,\n                      position: position,\n                      showAchievementTooltip: true\n                    });\n                  }\n                },\n                onMouseMove: e => {\n                  if (!isMobile && hoveredAchievement && hoveredAchievement.person.id === person.id && hoveredAchievement.index === index) {\n                    // Обновляем позицию tooltip'а за мышкой\n                    const position = {\n                      x: e.clientX + 15,\n                      y: e.clientY - 10\n                    };\n                    setAchievementTooltipPosition(position);\n                  }\n                },\n                onMouseLeave: e => {\n                  if (!isMobile) {\n                    console.log(`Mouse leave for ${person.id}-${index}`);\n\n                    // Убираем визуальные эффекты\n                    e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = 'none';\n\n                    // Сбрасываем активный маркер\n                    setActiveAchievementMarker(null);\n\n                    // Очищаем таймер\n                    if (hoverTimerRef.current) {\n                      clearTimeout(hoverTimerRef.current);\n                      hoverTimerRef.current = null;\n                    }\n\n                    // Скрываем achievement tooltip\n                    handleAchievementHover(null, 0, 0);\n\n                    // Проверяем, нужно ли показать person tooltip\n                    // Если мышь находится над lifebar того же человека, показываем person tooltip\n                    const relatedTo = e.relatedTarget;\n                    if (relatedTo && relatedTo.closest && relatedTo.closest(`#life-bar-${person.id}`)) {\n                      console.log(`Mouse moved to lifebar for ${person.id}, showing person tooltip`);\n                      handlePersonHover(person, e.clientX, e.clientY);\n                    }\n                    console.log(`Tooltip state cleared for ${person.id}-${index}`);\n                  }\n                },\n                onTouchStart: e => {\n                  if (isMobile) {\n                    e.preventDefault();\n                    e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n\n                    // Устанавливаем активный маркер\n                    setActiveAchievementMarker({\n                      personId: person.id,\n                      index\n                    });\n\n                    // Скрываем tooltip человека при касании маркера достижения\n                    if ((hoveredPerson === null || hoveredPerson === void 0 ? void 0 : hoveredPerson.id) === person.id) {\n                      handlePersonHover(null, 0, 0);\n                    }\n\n                    // Показываем tooltip сразу на мобильных через handleAchievementHover\n                    const position = getAchievementTooltipPosition(e.currentTarget, person.id, index);\n                    console.log(`Setting tooltip position for ${person.id}-${index} (mobile):`, position);\n                    if (position.x !== 0 || position.y !== 0) {\n                      const achievement = {\n                        person,\n                        year: year,\n                        index\n                      };\n                      handleAchievementHover(achievement, position.x, position.y);\n                    } else {\n                      console.warn(`Failed to position tooltip for ${person.id}-${index} (mobile)`);\n                    }\n                  }\n                },\n                onTouchEnd: e => {\n                  if (isMobile) {\n                    // Убираем визуальные эффекты при отпускании, но НЕ скрываем tooltip\n                    e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = 'none';\n\n                    // Сбрасываем активный маркер\n                    setActiveAchievementMarker(null);\n\n                    // НЕ скрываем tooltip достижения - он будет скрыт только по клику вне или по кнопке закрытия\n                    // Но скрываем tooltip человека, если он был показан\n                    if ((hoveredPerson === null || hoveredPerson === void 0 ? void 0 : hoveredPerson.id) === person.id) {\n                      handlePersonHover(null, 0, 0);\n                    }\n                  }\n                },\n                onKeyDown: e => {\n                  if (e.key === 'Enter' || e.key === ' ') {\n                    e.preventDefault();\n                    // Устанавливаем активный маркер\n                    setActiveAchievementMarker({\n                      personId: person.id,\n                      index\n                    });\n\n                    // Показываем tooltip при нажатии Enter или Space через handleAchievementHover\n                    const position = getAchievementTooltipPosition(e.currentTarget, person.id, index);\n                    console.log(`Setting tooltip position for ${person.id}-${index} (keyboard):`, position);\n                    if (position.x !== 0 || position.y !== 0) {\n                      const achievement = {\n                        person,\n                        year: year,\n                        index\n                      };\n                      handleAchievementHover(achievement, position.x, position.y);\n                    } else {\n                      console.warn(`Failed to position tooltip for ${person.id}-${index} (keyboard)`);\n                    }\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    position: 'absolute',\n                    top: '-12px',\n                    left: '50%',\n                    transform: 'translateX(-50%)',\n                    fontSize: '8px',\n                    color: getGroupColorDark(getPersonGroup(person)),\n                    fontWeight: 'bold',\n                    whiteSpace: 'nowrap',\n                    backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                    padding: '1px 3px',\n                    borderRadius: '2px',\n                    border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                    transition: 'all 0.2s ease'\n                  },\n                  children: year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 855,\n                  columnNumber: 27\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 695,\n                columnNumber: 25\n              }, this);\n            }), person.reignStart && person.reignEnd && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reign-bar\",\n              id: `reign-bar-${person.id}`,\n              role: \"presentation\",\n              \"aria-label\": `Период правления: ${person.reignStart} - ${person.reignEnd}`,\n              style: {\n                position: 'absolute',\n                top: '-15px',\n                left: `${getAdjustedPosition(person.reignStart)}px`,\n                width: `${getAdjustedWidth(person.reignStart, person.reignEnd)}px`,\n                height: '65px',\n                backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                pointerEvents: 'none',\n                borderLeft: '2px solid #D32F2F',\n                borderRight: '2px solid #D32F2F',\n                borderRadius: '3px',\n                zIndex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"life-bar\",\n              id: `life-bar-${person.id}`,\n              role: \"button\",\n              \"aria-label\": `${person.name}, ${person.birthYear} - ${person.deathYear}, ${person.category}`,\n              tabIndex: 0,\n              style: {\n                position: 'absolute',\n                top: '10px',\n                left: `${getAdjustedPosition(person.birthYear)}px`,\n                width: `${getAdjustedWidth(person.birthYear, person.deathYear)}px`,\n                height: '40px',\n                background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                borderRadius: '6px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0 12px',\n                color: 'white',\n                fontSize: '14px',\n                fontWeight: 'bold',\n                minWidth: '60px',\n                boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                border: '1.5px solid #a8926a',\n                opacity: (selectedPerson === null || selectedPerson === void 0 ? void 0 : selectedPerson.id) === person.id ? 0.8 : 1,\n                zIndex: 5,\n                transform: (selectedPerson === null || selectedPerson === void 0 ? void 0 : selectedPerson.id) === person.id ? 'scale(1.05)' : 'scale(1)',\n                transition: 'all 0.2s ease'\n              },\n              onMouseEnter: e => {\n                if (!isMobile) {\n                  e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)';\n                  e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)';\n                  e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n\n                  // Скрываем tooltip достижения при наведении на lifebar\n                  if ((hoveredAchievement === null || hoveredAchievement === void 0 ? void 0 : hoveredAchievement.person.id) === person.id) {\n                    setShowAchievementTooltip(false);\n                    setHoveredAchievement(null);\n                    setActiveAchievementMarker(null);\n                  }\n\n                  // Используем handlePersonHover для правильной обработки\n                  handlePersonHover(person, e.clientX, e.clientY);\n                }\n              },\n              onMouseLeave: e => {\n                if (!isMobile) {\n                  e.currentTarget.style.transform = (selectedPerson === null || selectedPerson === void 0 ? void 0 : selectedPerson.id) === person.id ? 'scale(1.05)' : 'translateY(0) scale(1)';\n                  e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)';\n                  e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)';\n                  // Используем handlePersonHover для правильной обработки с задержкой\n                  handlePersonHover(null, 0, 0);\n                }\n              },\n              onMouseMove: e => {\n                if (!isMobile && (hoveredPerson === null || hoveredPerson === void 0 ? void 0 : hoveredPerson.id) === person.id) {\n                  setMousePosition({\n                    x: e.clientX,\n                    y: e.clientY\n                  });\n                }\n              },\n              onKeyDown: e => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault();\n                  if (isMobile) {\n                    setSelectedPerson(person);\n                  } else {\n                    setHoveredPerson(person);\n                    setShowTooltip(true);\n                  }\n                }\n              },\n              onTouchStart: e => {\n                if (isMobile) {\n                  // Скрываем tooltip достижения при касании lifebar\n                  if ((hoveredAchievement === null || hoveredAchievement === void 0 ? void 0 : hoveredAchievement.person.id) === person.id) {\n                    setShowAchievementTooltip(false);\n                    setHoveredAchievement(null);\n                    setActiveAchievementMarker(null);\n                  }\n                }\n              },\n              onClick: () => {\n                if (isMobile) {\n                  setSelectedPerson(person);\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  lineHeight: '1.2'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: person.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 987,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 986,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 899,\n              columnNumber: 38\n            }, this)]\n          }, person.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Timeline, \"mDTz/1/3lw+8ALGZO2u07zUf7H8=\", false, function () {\n  return [useMobile];\n});\n_c = Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useMobile","getPosition","getWidth","getCenturyColor","getCenturyNumber","toRomanNumeral","jsxDEV","_jsxDEV","Fragment","_Fragment","Timeline","isLoading","timelineWidth","totalHeight","centuryBoundaries","minYear","pixelsPerYear","LEFT_PADDING_PX","rowPlacement","filters","groupingType","categoryDividers","getGroupColor","getGroupColorDark","getGroupColorMuted","getPersonGroup","hoveredPerson","setHoveredPerson","mousePosition","setMousePosition","showTooltip","setShowTooltip","handlePersonHover","handleAchievementHover","activeAchievementMarker","setActiveAchievementMarker","hoveredAchievement","setHoveredAchievement","achievementTooltipPosition","setAchievementTooltipPosition","showAchievementTooltip","setShowAchievementTooltip","hoverTimerRef","sortedData","selectedPerson","setSelectedPerson","_s","isMobile","getEmptyCenturies","length","Set","Math","min","map","p","birthYear","maxYear","max","deathYear","startCentury","floor","endCentury","ceil","emptyCenturies","centuryStart","centuryEnd","hasDataInCentury","some","person","add","getTimelineElements","hideEmptyCenturies","year","type","visibleCenturies","filter","has","elements","i","currentYear","prevYear","gapStart","gapEnd","hiddenCenturies","push","startYear","endYear","timelineElements","getAdjustedPosition","originalPosition","totalOffset","element","originalGapWidth","newGapWidth","getAdjustedWidth","startPos","endPos","getAdjustedTimelineWidth","totalWidth","getAchievementTooltipPosition","personId","index","targetElement","expectedId","document","getElementById","x","y","rect","getBoundingClientRect","width","height","tooltipWidth","tooltipHeight","tooltipX","right","tooltipY","top","viewportWidth","window","innerWidth","viewportHeight","innerHeight","left","bottom","createRepeatingCenturyLabels","labels","forEach","centerYear","centuryNumber","isNegativeCentury","romanNumeral","abs","nextYear","centerPos","id","_element$hiddenCentur","gapWidth","hiddenCenturiesText","join","children","className","role","style","position","overflow","padding","pointerEvents","zIndex","background","opacity","fileName","_jsxFileName","lineNumber","columnNumber","border","label","transform","fontSize","fontWeight","color","textShadow","fontFamily","textAlign","maxWidth","wordWrap","marginTop","divider","category","borderRadius","whiteSpace","row","rowIndex","marginBottom","fontStyle","reignStart","reignEnd","showAchievements","achievementYear1","achievementYear2","achievementYear3","undefined","tabIndex","backgroundColor","cursor","transition","onMouseEnter","e","console","log","currentTarget","boxShadow","current","clearTimeout","clientX","clientY","achievement","name","onMouseMove","onMouseLeave","relatedTo","relatedTarget","closest","onTouchStart","preventDefault","warn","onTouchEnd","onKeyDown","key","borderLeft","borderRight","display","alignItems","minWidth","borderColor","onClick","flexDirection","lineHeight","_c","$RefreshReg$"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/components/Timeline.tsx"],"sourcesContent":["import React from 'react'\nimport { useMobile } from '../hooks/useMobile'\nimport { Person } from '../types'\nimport { \n  getPosition, \n  getWidth, \n  getCenturyColor, \n  getCenturyNumber, \n  toRomanNumeral\n} from '../utils/timelineUtils'\n\ninterface TimelineProps {\n  isLoading: boolean\n  timelineWidth: number\n  totalHeight: number\n  centuryBoundaries: number[]\n  minYear: number\n  pixelsPerYear: number\n  LEFT_PADDING_PX: number\n  rowPlacement: Person[][]\n  filters: {\n    showAchievements: boolean\n    hideEmptyCenturies: boolean\n  }\n  groupingType: 'category' | 'country' | 'none'\n  categoryDividers: { category: string; top: number }[]\n  getGroupColor: (groupName: string) => string\n  getGroupColorDark: (groupName: string) => string\n  getGroupColorMuted: (groupName: string) => string\n  getPersonGroup: (person: Person) => string\n  hoveredPerson: Person | null\n  setHoveredPerson: (person: Person | null) => void\n  mousePosition: { x: number; y: number }\n  setMousePosition: (position: { x: number; y: number }) => void\n  showTooltip: boolean\n  setShowTooltip: (show: boolean) => void\n  handlePersonHover: (person: Person | null, x: number, y: number) => void\n  handleAchievementHover: (achievement: { person: Person; year: number; index: number } | null, x: number, y: number) => void\n  activeAchievementMarker: { personId: string; index: number } | null\n  setActiveAchievementMarker: (marker: { personId: string; index: number } | null) => void\n  hoveredAchievement: { person: Person; year: number; index: number } | null\n  setHoveredAchievement: (achievement: { person: Person; year: number; index: number } | null) => void\n  achievementTooltipPosition: { x: number; y: number }\n  setAchievementTooltipPosition: (position: { x: number; y: number }) => void\n  showAchievementTooltip: boolean\n  setShowAchievementTooltip: (show: boolean) => void\n  hoverTimerRef: React.MutableRefObject<NodeJS.Timeout | null>\n  sortedData: Person[]\n  selectedPerson: Person | null\n  setSelectedPerson: (person: Person | null) => void\n}\n\n// Типы для элементов временной линии\ntype TimelineElement = \n  | { type: 'century'; year: number }\n  | { type: 'gap'; startYear: number; endYear: number; hiddenCenturies: number[] }\n\nexport const Timeline: React.FC<TimelineProps> = ({\n  isLoading,\n  timelineWidth,\n  totalHeight,\n  centuryBoundaries,\n  minYear,\n  pixelsPerYear,\n  LEFT_PADDING_PX,\n  rowPlacement,\n  filters,\n  groupingType,\n  categoryDividers,\n  getGroupColor,\n  getGroupColorDark,\n  getGroupColorMuted,\n  getPersonGroup,\n  hoveredPerson,\n  setHoveredPerson,\n  mousePosition,\n  setMousePosition,\n  showTooltip,\n  setShowTooltip,\n  handlePersonHover,\n  handleAchievementHover,\n  activeAchievementMarker,\n  setActiveAchievementMarker,\n  hoveredAchievement,\n  setHoveredAchievement,\n  achievementTooltipPosition,\n  setAchievementTooltipPosition,\n  showAchievementTooltip,\n  setShowAchievementTooltip,\n  hoverTimerRef,\n  sortedData,\n  selectedPerson,\n  setSelectedPerson\n}) => {\n  const isMobile = useMobile()\n\n  // Функция для определения пустых веков на основе отфильтрованных данных\n  const getEmptyCenturies = () => {\n    if (!sortedData || sortedData.length === 0) return new Set();\n    \n    // Используем отфильтрованные данные для определения диапазона\n    const minYear = Math.min(...sortedData.map(p => p.birthYear));\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear));\n    \n    const startCentury = Math.floor(minYear / 100) * 100;\n    const endCentury = Math.ceil(maxYear / 100) * 100;\n    \n    const emptyCenturies = new Set<number>();\n    \n    for (let centuryStart = startCentury; centuryStart <= endCentury; centuryStart += 100) {\n      const centuryEnd = centuryStart + 99;\n      const hasDataInCentury = sortedData.some(person => \n        (person.birthYear <= centuryEnd && person.deathYear >= centuryStart)\n      );\n      \n      if (!hasDataInCentury) {\n        emptyCenturies.add(centuryStart);\n      }\n    }\n    \n    return emptyCenturies;\n  };\n\n  // Создаем массив для отображения веков с промежутками\n  const getTimelineElements = (): TimelineElement[] => {\n    if (!filters.hideEmptyCenturies) {\n      return centuryBoundaries.map(year => ({ type: 'century', year }));\n    }\n\n    const emptyCenturies = getEmptyCenturies();\n    const visibleCenturies = centuryBoundaries.filter(year => !emptyCenturies.has(year));\n    \n    const elements: TimelineElement[] = [];\n    \n    for (let i = 0; i < visibleCenturies.length; i++) {\n      const currentYear = visibleCenturies[i];\n      \n      // Добавляем промежуток перед веком (кроме первого)\n      if (i > 0) {\n        const prevYear = visibleCenturies[i - 1];\n        const gapStart = prevYear + 100;\n        const gapEnd = currentYear;\n        \n        // Находим все скрытые века в промежутке\n        const hiddenCenturies: number[] = [];\n        for (let year = gapStart; year < gapEnd; year += 100) {\n          if (emptyCenturies.has(year)) {\n            hiddenCenturies.push(year);\n          }\n        }\n        \n        if (hiddenCenturies.length > 0) {\n          elements.push({\n            type: 'gap',\n            startYear: gapStart,\n            endYear: gapEnd,\n            hiddenCenturies\n          });\n        }\n      }\n      \n      // Добавляем сам век\n      elements.push({ type: 'century', year: currentYear });\n    }\n    \n    return elements;\n  };\n\n  const timelineElements = getTimelineElements();\n\n  // Функция для вычисления позиции с учетом промежутков\n  const getAdjustedPosition = (year: number) => {\n    if (!filters.hideEmptyCenturies) {\n      return getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    }\n\n    // Находим позицию года в оригинальной шкале\n    const originalPosition = getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    \n    // Вычисляем смещение, проходя по всем промежуткам до этого года\n    let totalOffset = 0;\n    \n    for (const element of timelineElements) {\n      if (element.type === 'gap') {\n        const gapStart = getPosition(element.startYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const gapEnd = getPosition(element.endYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const originalGapWidth = gapEnd - gapStart;\n        const newGapWidth = pixelsPerYear * 10; // 10 лет\n        \n        // Если год находится после этого промежутка, добавляем смещение\n        if (year >= element.endYear) {\n          totalOffset += (originalGapWidth - newGapWidth);\n        }\n      }\n    }\n    \n    return originalPosition - totalOffset;\n  };\n\n  // Функция для вычисления ширины с учетом промежутков\n  const getAdjustedWidth = (startYear: number, endYear: number) => {\n    if (!filters.hideEmptyCenturies) {\n      return getWidth(startYear, endYear, pixelsPerYear);\n    }\n\n    const startPos = getAdjustedPosition(startYear);\n    const endPos = getAdjustedPosition(endYear);\n    return endPos - startPos;\n  };\n\n  // Функция для вычисления скорректированной ширины таймлайна\n  const getAdjustedTimelineWidth = () => {\n    if (!filters.hideEmptyCenturies) {\n      return timelineWidth;\n    }\n\n    // Вычисляем общую ширину, проходя по всем элементам\n    let totalWidth = 0;\n    \n    for (const element of timelineElements) {\n      if (element.type === 'century') {\n        // Век занимает 100 лет\n        totalWidth += pixelsPerYear * 100;\n      } else if (element.type === 'gap') {\n        // Промежуток занимает 10 лет\n        totalWidth += pixelsPerYear * 10;\n      }\n    }\n\n    return totalWidth + LEFT_PADDING_PX + 50; // Добавляем отступы\n  };\n\n  // Функция для точного позиционирования achievement tooltip\n  const getAchievementTooltipPosition = (element: HTMLElement | null, personId: string, index: number): { x: number; y: number } => {\n    let targetElement = element;\n    const expectedId = `achievement-${personId}-${index}`;\n    \n    if (!targetElement) {\n      targetElement = document.getElementById(expectedId);\n    }\n    \n    if (!targetElement) {\n      return { x: 0, y: 0 };\n    }\n    \n    const rect = targetElement.getBoundingClientRect();\n    \n    if (rect.width === 0 || rect.height === 0) {\n      return { x: 0, y: 0 };\n    }\n    \n    // Базовые размеры tooltip\n    const tooltipWidth = 250;\n    const tooltipHeight = 150;\n    \n    // Начальная позиция - справа от маркера\n    let tooltipX = rect.right + 10;\n    let tooltipY = rect.top - tooltipHeight / 2;\n    \n    // Проверяем границы экрана\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    \n    // Если tooltip выходит за правую границу, показываем слева от маркера\n    if (tooltipX + tooltipWidth > viewportWidth) {\n      tooltipX = rect.left - tooltipWidth - 10;\n    }\n    \n    // Если tooltip выходит за левую границу, показываем справа с отступом\n    if (tooltipX < 10) {\n      tooltipX = 10;\n    }\n    \n    // Если tooltip выходит за верхнюю границу, показываем снизу\n    if (tooltipY < 10) {\n      tooltipY = rect.bottom + 10;\n    }\n    \n    // Если tooltip выходит за нижнюю границу, показываем сверху\n    if (tooltipY + tooltipHeight > viewportHeight - 10) {\n      tooltipY = rect.top - tooltipHeight - 10;\n    }\n    \n    // Убеждаемся, что tooltip не выходит за границы\n    tooltipX = Math.max(10, Math.min(tooltipX, viewportWidth - tooltipWidth - 10));\n    tooltipY = Math.max(10, Math.min(tooltipY, viewportHeight - tooltipHeight - 10));\n    \n    return { x: tooltipX, y: tooltipY };\n  };\n\n  // Функция для создания повторяющихся меток веков через каждые 90vh\n  const createRepeatingCenturyLabels = () => {\n    const viewportHeight = window.innerHeight;\n    const labels: Array<{\n      id: string;\n      year: number;\n      romanNumeral: string;\n      left: number;\n      top: number;\n      type: 'century' | 'gap';\n    }> = [];\n    \n    // Создаем метки для каждого века\n    timelineElements.forEach((element) => {\n      if (element.type === 'century') {\n        const year = element.year;\n        const centerYear = year + 50;\n        const centuryNumber = getCenturyNumber(centerYear);\n        const isNegativeCentury = year < 0;\n        const romanNumeral = isNegativeCentury ? `${toRomanNumeral(Math.abs(centuryNumber))} в. до н.э` : `${toRomanNumeral(centuryNumber)} в.`;\n        const startPos = getAdjustedPosition(year);\n        const nextYear = year + 100;\n        const endPos = getAdjustedPosition(nextYear);\n        const centerPos = startPos + (endPos - startPos) / 2; // Центр века\n        \n        // Создаем метки через каждые 90vh\n        for (let top = 0; top < totalHeight; top += viewportHeight * 0.9) {\n          labels.push({\n            id: `century-label-${year}-${top}`,\n            year,\n            romanNumeral,\n            left: centerPos,\n            top: top + viewportHeight / 2, // Центрируем по вертикали в каждом экране\n            type: 'century'\n          });\n        }\n      } else if (element.type === 'gap') {\n        const startPos = getAdjustedPosition(element.startYear);\n        const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n        const centerPos = startPos + gapWidth / 2; // Центр промежутка\n        const hiddenCenturiesText = element.hiddenCenturies?.map(year => {\n          const centuryNumber = getCenturyNumber(year + 50);\n          const isNegativeCentury = year < 0;\n          const romanNumeral = isNegativeCentury ? `${toRomanNumeral(Math.abs(centuryNumber))} в. до н.э` : `${toRomanNumeral(centuryNumber)} в.`;\n          return romanNumeral;\n        }).join(', ') || '';\n        \n        // Создаем метки для промежутков через каждые 90vh\n        for (let top = 0; top < totalHeight; top += viewportHeight * 0.9) {\n          labels.push({\n            id: `gap-label-${element.startYear}-${top}`,\n            year: element.startYear,\n            romanNumeral: hiddenCenturiesText,\n            left: centerPos,\n            top: top + viewportHeight / 2,\n            type: 'gap'\n          });\n        }\n      }\n    });\n    \n    return labels;\n  };\n\n  return (\n    <>\n      {/* Временная линия на весь экран */}\n      <div \n        className=\"timeline-content\" \n        id=\"timeline-content\"\n        role=\"presentation\" \n        aria-hidden=\"true\"\n        style={{ \n          position: 'relative', \n          height: '100%',\n          overflow: 'visible',\n          padding: isMobile ? '0' : '1rem 0 2rem 0'\n        }}\n      >\n        {/* Разноцветная заливка веков */}\n        <div \n          className=\"timeline-background\"\n          id=\"timeline-background\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${getAdjustedTimelineWidth()}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 1\n          }}\n        >\n          {timelineElements.map((element, index) => {\n                         if (element.type === 'century') {\n               const year = element.year;\n               // Каждый век занимает ровно 100 лет\n               const nextYear = year + 100\n               const startPos = getAdjustedPosition(year)\n               const endPos = getAdjustedPosition(nextYear)\n               const width = endPos - startPos\n\n              // Вычисляем век на основе центра года в столетии\n              const centerYear = year + 50\n              const centuryNumber = getCenturyNumber(centerYear)\n              // Для отрицательных веков добавляем знак минус\n              const isNegativeCentury = year < 0\n              const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber)\n              \n              return (\n                <div \n                  key={`century-bg-${year}`} \n                  className=\"century-background\"\n                  id={`century-${year}`}\n                  role=\"presentation\"\n                  aria-label={`Век ${romanNumeral}`}\n                  style={{\n                    position: 'absolute',\n                    left: `${startPos}px`,\n                    width: `${width}px`,\n                    height: '100%',\n                    background: getCenturyColor(year, minYear),\n                    opacity: 0.3,\n                    zIndex: 1\n                  }}\n                >\n                </div>\n              )\n                                                   } else if (element.type === 'gap') {\n                // Промежуток между веками - компактный размер (1/10 века)\n                const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n                const startPos = getAdjustedPosition(element.startYear)\n               \n               return (\n                 <div key={`gap-${element.startYear}`} style={{\n                   position: 'absolute',\n                   left: `${startPos}px`,\n                   width: `${gapWidth}px`,\n                   height: '100%',\n                   background: 'rgba(139, 69, 19, 0.1)',\n                   border: '1px dashed rgba(139, 69, 19, 0.3)',\n                   zIndex: 1\n                 }}>\n                </div>\n              )\n            }\n            return null;\n          })}\n        </div>\n\n                 {/* Границы веков и промежутков на всю высоту */}\n         <div style={{\n           position: 'absolute',\n           top: '0',\n           left: '0',\n           width: `${getAdjustedTimelineWidth()}px`,\n           height: `${totalHeight + 200}px`,\n           pointerEvents: 'none',\n           zIndex: 5\n         }}>\n                      {timelineElements.map((element) => {\n              if (element.type === 'century') {\n                return (\n                  <div key={`century-line-${element.year}`} style={{\n                    position: 'absolute',\n                    left: `${getAdjustedPosition(element.year)}px`,\n                    width: '2px',\n                    height: '100%',\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                    zIndex: 5\n                  }} />\n                );\n              } else if (element.type === 'gap') {\n                return (\n                  <div key={`gap-line-${element.startYear}`} style={{\n                    position: 'absolute',\n                    left: `${getAdjustedPosition(element.startYear)}px`,\n                    width: '2px',\n                    height: '100%',\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                    zIndex: 5\n                  }} />\n                );\n              }\n              return null;\n            })}\n         </div>\n\n         {/* Повторяющиеся метки веков через каждые 90vh */}\n         <div style={{\n           position: 'absolute',\n           top: '0',\n           left: '0',\n           width: `${getAdjustedTimelineWidth()}px`,\n           height: `${totalHeight + 200}px`,\n           pointerEvents: 'none',\n           zIndex: 6\n         }}>\n           {createRepeatingCenturyLabels().map((label) => (\n             <div\n               key={label.id}\n               style={{\n                 position: 'absolute',\n                 left: `${label.left}px`,\n                 top: `${label.top}px`,\n                 transform: 'translate(-50%, -50%)',\n                 fontSize: label.type === 'century' ? '1.5rem' : '0.8rem',\n                 fontWeight: 'bold',\n                 color: label.type === 'century' \n                   ? 'rgba(244, 228, 193, 0.4)' \n                   : 'rgba(139, 69, 19, 0.5)',\n                 textShadow: '1px 1px 2px rgba(0, 0, 0, 0.6)',\n                 pointerEvents: 'none',\n                 fontFamily: label.type === 'century' ? 'serif' : 'sans-serif',\n                 textAlign: 'center',\n                 maxWidth: '200px',\n                 wordWrap: 'break-word'\n               }}\n             >\n               {label.type === 'century' ? (\n                 label.romanNumeral\n               ) : (\n                 <>\n                   <div>Скрыто:</div>\n                   <div style={{ fontSize: '0.7rem', marginTop: '2px' }}>\n                     {label.romanNumeral}\n                   </div>\n                 </>\n               )}\n             </div>\n           ))}\n         </div>\n\n         {/* Разделители групп */}\n         <div \n           className=\"category-dividers\"\n           id=\"category-dividers\"\n           role=\"presentation\"\n           aria-hidden=\"true\"\n           style={{\n             position: 'absolute',\n             top: '0',\n             left: '0',\n             width: `${getAdjustedTimelineWidth()}px`,\n             height: `${totalHeight + 200}px`,\n             pointerEvents: 'none',\n             zIndex: 8\n           }}\n         >\n          {categoryDividers.map((divider) => (\n            <div \n              key={`category-divider-${divider.category}`} \n              className=\"category-divider\"\n              id={`divider-${divider.category}`}\n              role=\"separator\"\n              aria-label={`Разделитель группы: ${divider.category}`}\n              style={{\n                position: 'absolute',\n                top: `${divider.top}px`,\n                left: '0',\n                width: '100%',\n                height: '10px',\n                background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n                opacity: 0.6,\n                zIndex: 8\n              }}\n            >\n              <div \n                className=\"category-label\" \n                id={`category-label-${divider.category}`}\n                aria-label={`Группа: ${divider.category}`}\n                style={{\n                  position: 'absolute',\n                  left: '20px',\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: getGroupColor(divider.category),\n                  color: 'white',\n                  padding: '2px 8px',\n                  borderRadius: '4px',\n                  fontSize: '0.7rem',\n                  fontWeight: 'bold',\n                  whiteSpace: 'nowrap',\n                  zIndex: 9\n                }}\n              >\n                {divider.category}\n              </div>\n            </div>\n          ))}\n        </div>\n\n                 {/* Полоски жизни */}\n         <div \n           className=\"person-timeline\"\n           id=\"person-timeline\"\n           role=\"list\"\n           aria-label=\"Временные линии исторических личностей\"\n           style={{ \n             position: 'relative',\n             width: `${getAdjustedTimelineWidth()}px`,\n             height: `${totalHeight + 60}px`,\n             zIndex: 10\n           }}\n         >\n          {rowPlacement.map((row, rowIndex) => (\n            <div \n              key={rowIndex} \n              className=\"timeline-row\"\n              id={`timeline-row-${rowIndex}`}\n              role=\"listitem\"\n              aria-label={`Строка ${rowIndex + 1} временной линии`}\n              style={{\n                position: 'relative',\n                height: row.length === 0 ? '20px' : '60px',\n                marginBottom: row.length === 0 ? '0px' : '10px'\n              }}\n            >\n              {row.map((person) => (\n                <React.Fragment key={person.id}>\n                  {/* Годы жизни и правления над полоской */}\n                  <span \n                    className=\"birth-year-label\"\n                    id={`birth-year-${person.id}`}\n                    aria-label={`Год рождения: ${person.birthYear}`}\n                    style={{\n                      position: 'absolute',\n                      left: `${getAdjustedPosition(person.birthYear)}px`,\n                      top: 0,\n                      fontSize: '11px',\n                      color: 'rgba(244, 228, 193, 0.6)',\n                      fontStyle: 'italic',\n                      fontWeight: 400,\n                      transform: 'translateX(-100%) translateY(-10px)'\n                    }}\n                  >\n                    {person.birthYear}\n                  </span>\n\n                                     {person.reignStart && (\n                     <span \n                       className=\"reign-label\" \n                       id={`reign-start-${person.id}`}\n                       aria-label={`Начало правления: ${person.reignStart}`}\n                       style={{\n                         position: 'absolute',\n                         left: `${getAdjustedPosition(person.reignStart)}px`,\n                         top: 0,\n                         fontSize: '11px',\n                         color: '#E57373', // Темно-красный\n                         fontStyle: 'italic',\n                         fontWeight: 'bold',\n                         transform: 'translateX(-100%) translateY(-22px)'\n                       }}\n                     >\n                       👑 {person.reignStart}\n                     </span>\n                   )}\n\n                                     {person.reignEnd && (\n                     <span \n                       className=\"reign-label\" \n                       id={`reign-end-${person.id}`}\n                       aria-label={`Конец правления: ${person.reignEnd}`}\n                       style={{\n                         position: 'absolute',\n                         left: `${getAdjustedPosition(person.reignEnd)}px`,\n                         top: 0,\n                         fontSize: '11px',\n                         color: '#E57373', // Темно-красный\n                         fontStyle: 'italic',\n                         fontWeight: 'bold',\n                         transform: 'translateY(-22px)'\n                       }}\n                     >\n                       {person.reignEnd}\n                     </span>\n                   )}\n                  \n                                     <span \n                                       className=\"death-year-label\"\n                                       id={`death-year-${person.id}`}\n                                       aria-label={`Год смерти: ${person.deathYear}`}\n                                       style={{\n                                         position: 'absolute',\n                                         left: `${getAdjustedPosition(person.deathYear)}px`,\n                                         top: 0,\n                                         fontSize: '11px',\n                                         color: 'rgba(244, 228, 193, 0.6)',\n                                         fontStyle: 'italic',\n                                         fontWeight: 400,\n                                         transform: 'translateY(-10px)'\n                                       }}\n                                     >\n                                       {person.deathYear}\n                                     </span>\n\n                  {/* Маркеры ключевых достижений */}\n                  {filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3]\n                    .filter(year => year !== undefined && year !== null)\n                    .map((year, index) => {\n                      return (\n                        <div \n                          key={index} \n                          className=\"achievement-marker\"\n                          id={`achievement-${person.id}-${index}`}\n                          role=\"button\"\n                          aria-label={`Достижение ${index + 1} в ${year} году`}\n                          tabIndex={0}\n                          style={{\n                            position: 'absolute',\n                            left: `${getAdjustedPosition(year as number)}px`,\n                            top: '-4px',\n                            width: '2px', // Возвращаем стандартную ширину\n                            height: '15px', // Возвращаем стандартную высоту\n                            backgroundColor: getGroupColorDark(getPersonGroup(person)),\n                            zIndex: activeAchievementMarker?.personId === person.id && activeAchievementMarker?.index === index ? 10 : 3,\n                            transform: 'translateX(-50%)',\n                            cursor: 'pointer',\n                            transition: 'all 0.2s ease',\n                            // Убираем псевдоэлементы, так как они не работают в inline стилях\n                          }}\n                        onMouseEnter={(e) => {\n                          if (!isMobile) {\n                            console.log(`Mouse enter for ${person.id}-${index}`);\n                            \n                            // Визуальные эффекты\n                            e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n                            \n                            // Устанавливаем активный маркер\n                            setActiveAchievementMarker({ personId: person.id, index });\n                            \n                            // Скрываем tooltip человека\n                            if (hoveredPerson?.id === person.id) {\n                              handlePersonHover(null, 0, 0);\n                            }\n                            \n                            // Очищаем предыдущий таймер\n                            if (hoverTimerRef.current) {\n                              clearTimeout(hoverTimerRef.current);\n                              hoverTimerRef.current = null;\n                            }\n                            \n                            // Используем позицию мыши\n                            const position = { x: e.clientX + 15, y: e.clientY - 10 };\n                            console.log(`Mouse position for ${person.id}-${index}:`, position);\n                            \n                            // Устанавливаем новый tooltip через handleAchievementHover\n                            console.log(`Setting achievement tooltip state for ${person.id}-${index}`);\n                            const achievement = { person, year: year as number, index };\n                            handleAchievementHover(achievement, position.x, position.y);\n                            \n                            console.log(`Tooltip state updated for ${person.id}-${index}:`, {\n                              person: person.name,\n                              year: year,\n                              index: index,\n                              position: position,\n                              showAchievementTooltip: true\n                            });\n                          }\n                        }}\n                        onMouseMove={(e) => {\n                          if (!isMobile && hoveredAchievement && \n                              hoveredAchievement.person.id === person.id && \n                              hoveredAchievement.index === index) {\n                            // Обновляем позицию tooltip'а за мышкой\n                            const position = { x: e.clientX + 15, y: e.clientY - 10 };\n                            setAchievementTooltipPosition(position);\n                          }\n                        }}\n                        onMouseLeave={(e) => {\n                          if (!isMobile) {\n                            console.log(`Mouse leave for ${person.id}-${index}`);\n                            \n                            // Убираем визуальные эффекты\n                            e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = 'none';\n                            \n                            // Сбрасываем активный маркер\n                            setActiveAchievementMarker(null);\n                            \n                            // Очищаем таймер\n                            if (hoverTimerRef.current) {\n                              clearTimeout(hoverTimerRef.current);\n                              hoverTimerRef.current = null;\n                            }\n                            \n                            // Скрываем achievement tooltip\n                            handleAchievementHover(null, 0, 0);\n                            \n                            // Проверяем, нужно ли показать person tooltip\n                            // Если мышь находится над lifebar того же человека, показываем person tooltip\n                            const relatedTo = e.relatedTarget as Element;\n                            if (relatedTo && relatedTo.closest && relatedTo.closest(`#life-bar-${person.id}`)) {\n                              console.log(`Mouse moved to lifebar for ${person.id}, showing person tooltip`);\n                              handlePersonHover(person, e.clientX, e.clientY);\n                            }\n                            \n                            console.log(`Tooltip state cleared for ${person.id}-${index}`);\n                          }\n                        }}\n\n                        onTouchStart={(e) => {\n                          if (isMobile) {\n                            e.preventDefault();\n                            e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n                            \n                            // Устанавливаем активный маркер\n                            setActiveAchievementMarker({ personId: person.id, index });\n                            \n                            // Скрываем tooltip человека при касании маркера достижения\n                            if (hoveredPerson?.id === person.id) {\n                              handlePersonHover(null, 0, 0);\n                            }\n                            \n                            // Показываем tooltip сразу на мобильных через handleAchievementHover\n                            const position = getAchievementTooltipPosition(e.currentTarget, person.id, index);\n                            console.log(`Setting tooltip position for ${person.id}-${index} (mobile):`, position);\n                            if (position.x !== 0 || position.y !== 0) {\n                              const achievement = { person, year: year as number, index };\n                              handleAchievementHover(achievement, position.x, position.y);\n                            } else {\n                              console.warn(`Failed to position tooltip for ${person.id}-${index} (mobile)`);\n                            }\n                          }\n                        }}\n                        onTouchEnd={(e) => {\n                          if (isMobile) {\n                            // Убираем визуальные эффекты при отпускании, но НЕ скрываем tooltip\n                            e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = 'none';\n                            \n                            // Сбрасываем активный маркер\n                            setActiveAchievementMarker(null);\n                            \n                            // НЕ скрываем tooltip достижения - он будет скрыт только по клику вне или по кнопке закрытия\n                            // Но скрываем tooltip человека, если он был показан\n                            if (hoveredPerson?.id === person.id) {\n                              handlePersonHover(null, 0, 0);\n                            }\n                          }\n                        }}\n                        onKeyDown={(e) => {\n                          if (e.key === 'Enter' || e.key === ' ') {\n                            e.preventDefault();\n                            // Устанавливаем активный маркер\n                            setActiveAchievementMarker({ personId: person.id, index });\n                            \n                            // Показываем tooltip при нажатии Enter или Space через handleAchievementHover\n                            const position = getAchievementTooltipPosition(e.currentTarget, person.id, index);\n                            console.log(`Setting tooltip position for ${person.id}-${index} (keyboard):`, position);\n                            if (position.x !== 0 || position.y !== 0) {\n                              const achievement = { person, year: year as number, index };\n                              handleAchievementHover(achievement, position.x, position.y);\n                            } else {\n                              console.warn(`Failed to position tooltip for ${person.id}-${index} (keyboard)`);\n                            }\n                          }\n                        }}\n                        >\n                          <span style={{\n                            position: 'absolute',\n                            top: '-12px',\n                            left: '50%',\n                            transform: 'translateX(-50%)',\n                            fontSize: '8px',\n                            color: getGroupColorDark(getPersonGroup(person)),\n                            fontWeight: 'bold',\n                            whiteSpace: 'nowrap',\n                            backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                            padding: '1px 3px',\n                            borderRadius: '2px',\n                            border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                            transition: 'all 0.2s ease'\n                          }}>\n                            {year}\n                          </span>\n                        </div>\n                      );\n                    })}\n\n                                     {/* полоса правления */}\n                   {person.reignStart && person.reignEnd && (\n                     <div \n                       className=\"reign-bar\"\n                       id={`reign-bar-${person.id}`}\n                       role=\"presentation\"\n                       aria-label={`Период правления: ${person.reignStart} - ${person.reignEnd}`}\n                       style={{\n                         position: 'absolute',\n                         top: '-15px',\n                         left: `${getAdjustedPosition(person.reignStart)}px`,\n                         width: `${getAdjustedWidth(person.reignStart, person.reignEnd)}px`,\n                         height: '65px',\n                         backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                         pointerEvents: 'none',\n                         borderLeft: '2px solid #D32F2F',\n                         borderRight: '2px solid #D32F2F',\n                         borderRadius: '3px',\n                         zIndex: 1\n                       }} \n                     />\n                   )}\n\n                                     <div\n                     className=\"life-bar\"\n                     id={`life-bar-${person.id}`}\n                     role=\"button\"\n                     aria-label={`${person.name}, ${person.birthYear} - ${person.deathYear}, ${person.category}`}\n                     tabIndex={0}\n                     style={{\n                       position: 'absolute',\n                       top: '10px',\n                       left: `${getAdjustedPosition(person.birthYear)}px`,\n                       width: `${getAdjustedWidth(person.birthYear, person.deathYear)}px`,\n                       height: '40px',\n                       background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                       borderRadius: '6px',\n                       cursor: 'pointer',\n                       display: 'flex',\n                       alignItems: 'center',\n                       padding: '0 12px',\n                       color: 'white',\n                       fontSize: '14px',\n                       fontWeight: 'bold',\n                       minWidth: '60px',\n                       boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                       border: '1.5px solid #a8926a',\n                       opacity: selectedPerson?.id === person.id ? 0.8 : 1,\n                       zIndex: 5,\n                       transform: selectedPerson?.id === person.id ? 'scale(1.05)' : 'scale(1)',\n                       transition: 'all 0.2s ease'\n                     }}\n                    onMouseEnter={(e) => {\n                      if (!isMobile) {\n                        e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)'\n                        e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)'\n                        \n                        // Скрываем tooltip достижения при наведении на lifebar\n                        if (hoveredAchievement?.person.id === person.id) {\n                          setShowAchievementTooltip(false);\n                          setHoveredAchievement(null);\n                          setActiveAchievementMarker(null);\n                        }\n                        \n                        // Используем handlePersonHover для правильной обработки\n                        handlePersonHover(person, e.clientX, e.clientY)\n                      }\n                    }}\n                    onMouseLeave={(e) => {\n                      if (!isMobile) {\n                        e.currentTarget.style.transform = selectedPerson?.id === person.id ? 'scale(1.05)' : 'translateY(0) scale(1)'\n                        e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)'\n                        // Используем handlePersonHover для правильной обработки с задержкой\n                        handlePersonHover(null, 0, 0)\n                      }\n                    }}\n                    onMouseMove={(e) => {\n                      if (!isMobile && hoveredPerson?.id === person.id) {\n                        setMousePosition({ x: e.clientX, y: e.clientY })\n                      }\n                    }}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        if (isMobile) {\n                          setSelectedPerson(person);\n                        } else {\n                          setHoveredPerson(person);\n                          setShowTooltip(true);\n                        }\n                      }\n                    }}\n                    onTouchStart={(e) => {\n                      if (isMobile) {\n                        // Скрываем tooltip достижения при касании lifebar\n                        if (hoveredAchievement?.person.id === person.id) {\n                          setShowAchievementTooltip(false);\n                          setHoveredAchievement(null);\n                          setActiveAchievementMarker(null);\n                        }\n                      }\n                    }}\n                    onClick={() => {\n                      if (isMobile) {\n                        setSelectedPerson(person)\n                      }\n                    }}\n                  >\n                    <div style={{ display: 'flex', flexDirection: 'column', lineHeight: '1.2' }}>\n                      <span>{person.name}</span>\n                    </div>\n                  </div>\n                </React.Fragment>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  )\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}