{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selecty\\\\Documents\\\\PetProjects\\\\chronoline-frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useMemo, useState, useCallback } from 'react';\nimport * as authApi from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  user: null,\n  accessToken: null,\n  refreshToken: null\n};\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [state, setState] = useState(() => authApi.authStorage.load());\n  const login = useCallback(async (email, password) => {\n    const newState = await authApi.login({\n      email,\n      password\n    });\n    setState(newState);\n  }, []);\n  const logout = useCallback(async () => {\n    try {\n      await authApi.logout(state);\n    } finally {\n      setState(defaultState);\n    }\n  }, [state]);\n  const refresh = useCallback(async () => {\n    const newState = await authApi.refresh(state);\n    setState(newState);\n  }, [state]);\n  const value = useMemo(() => ({\n    user: state.user,\n    isAuthenticated: Boolean(state.user && state.accessToken),\n    state,\n    login,\n    logout,\n    refresh\n  }), [state, login, logout, refresh]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"VGONkVZsYSrzTCDwuLGG8NFlf1w=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const ctx = useContext(AuthContext);\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\n  return ctx;\n}\n_s2(useAuth, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useMemo","useState","useCallback","authApi","jsxDEV","_jsxDEV","defaultState","user","accessToken","refreshToken","AuthContext","undefined","AuthProvider","children","_s","state","setState","authStorage","load","login","email","password","newState","logout","refresh","value","isAuthenticated","Boolean","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","ctx","Error","$RefreshReg$"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useMemo, useState, useCallback } from 'react';\r\nimport type { AuthState, AuthUser } from '../services/auth';\r\nimport * as authApi from '../services/auth';\r\n\r\ntype AuthContextValue = {\r\n  user: AuthUser | null;\r\n  isAuthenticated: boolean;\r\n  state: AuthState;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  refresh: () => Promise<void>;\r\n};\r\n\r\nconst defaultState: AuthState = { user: null, accessToken: null, refreshToken: null };\r\n\r\nconst AuthContext = createContext<AuthContextValue | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [state, setState] = useState<AuthState>(() => authApi.authStorage.load());\r\n\r\n  const login = useCallback(async (email: string, password: string) => {\r\n    const newState = await authApi.login({ email, password });\r\n    setState(newState);\r\n  }, []);\r\n\r\n  const logout = useCallback(async () => {\r\n    try {\r\n      await authApi.logout(state);\r\n    } finally {\r\n      setState(defaultState);\r\n    }\r\n  }, [state]);\r\n\r\n  const refresh = useCallback(async () => {\r\n    const newState = await authApi.refresh(state);\r\n    setState(newState);\r\n  }, [state]);\r\n\r\n  const value: AuthContextValue = useMemo(() => ({\r\n    user: state.user,\r\n    isAuthenticated: Boolean(state.user && state.accessToken),\r\n    state,\r\n    login,\r\n    logout,\r\n    refresh,\r\n  }), [state, login, logout, refresh]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth(): AuthContextValue {\r\n  const ctx = useContext(AuthContext);\r\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\r\n  return ctx;\r\n}\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAExF,OAAO,KAAKC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW5C,MAAMC,YAAuB,GAAG;EAAEC,IAAI,EAAE,IAAI;EAAEC,WAAW,EAAE,IAAI;EAAEC,YAAY,EAAE;AAAK,CAAC;AAErF,MAAMC,WAAW,gBAAGZ,aAAa,CAA+Ba,SAAS,CAAC;AAE1E,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAwC,CAAC,EAAE;EAAAC,EAAA;EACxE,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAY,MAAME,OAAO,CAACc,WAAW,CAACC,IAAI,CAAC,CAAC,CAAC;EAE/E,MAAMC,KAAK,GAAGjB,WAAW,CAAC,OAAOkB,KAAa,EAAEC,QAAgB,KAAK;IACnE,MAAMC,QAAQ,GAAG,MAAMnB,OAAO,CAACgB,KAAK,CAAC;MAAEC,KAAK;MAAEC;IAAS,CAAC,CAAC;IACzDL,QAAQ,CAACM,QAAQ,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,MAAM,GAAGrB,WAAW,CAAC,YAAY;IACrC,IAAI;MACF,MAAMC,OAAO,CAACoB,MAAM,CAACR,KAAK,CAAC;IAC7B,CAAC,SAAS;MACRC,QAAQ,CAACV,YAAY,CAAC;IACxB;EACF,CAAC,EAAE,CAACS,KAAK,CAAC,CAAC;EAEX,MAAMS,OAAO,GAAGtB,WAAW,CAAC,YAAY;IACtC,MAAMoB,QAAQ,GAAG,MAAMnB,OAAO,CAACqB,OAAO,CAACT,KAAK,CAAC;IAC7CC,QAAQ,CAACM,QAAQ,CAAC;EACpB,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,MAAMU,KAAuB,GAAGzB,OAAO,CAAC,OAAO;IAC7CO,IAAI,EAAEQ,KAAK,CAACR,IAAI;IAChBmB,eAAe,EAAEC,OAAO,CAACZ,KAAK,CAACR,IAAI,IAAIQ,KAAK,CAACP,WAAW,CAAC;IACzDO,KAAK;IACLI,KAAK;IACLI,MAAM;IACNC;EACF,CAAC,CAAC,EAAE,CAACT,KAAK,EAAEI,KAAK,EAAEI,MAAM,EAAEC,OAAO,CAAC,CAAC;EAEpC,oBACEnB,OAAA,CAACK,WAAW,CAACkB,QAAQ;IAACH,KAAK,EAAEA,KAAM;IAAAZ,QAAA,EAChCA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B;AAAClB,EAAA,CAnCeF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAqC5B,OAAO,SAASsB,OAAOA,CAAA,EAAqB;EAAAC,GAAA;EAC1C,MAAMC,GAAG,GAAGrC,UAAU,CAACW,WAAW,CAAC;EACnC,IAAI,CAAC0B,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EACrE,OAAOD,GAAG;AACZ;AAACD,GAAA,CAJeD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}