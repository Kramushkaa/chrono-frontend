{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selecty\\\\Documents\\\\PetProjects\\\\chronoline-frontend\\\\src\\\\components\\\\Timeline.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useMobile } from '../hooks/useMobile';\nimport { getPosition, getWidth, getCenturyColor, getCenturyNumber, toRomanNumeral } from '../utils/timelineUtils';\n\n// Типы для элементов временной линии\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// Новый компонент для отображения информации о веках в центре экрана\nconst CenturyInfoOverlay = ({\n  timelineElements,\n  getAdjustedPosition,\n  getCenturyNumber,\n  toRomanNumeral,\n  minYear,\n  getCenturyColor,\n  pixelsPerYear,\n  getAdjustedTimelineWidth\n}) => {\n  _s();\n  const [scrollY, setScrollY] = useState(0);\n  const [viewportCenter, setViewportCenter] = useState(0);\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrollY(window.scrollY);\n      setViewportCenter(window.innerHeight / 2);\n    };\n    const handleResize = () => {\n      setViewportCenter(window.innerHeight / 2);\n    };\n    window.addEventListener('scroll', handleScroll);\n    window.addEventListener('resize', handleResize);\n\n    // Инициализация\n    handleScroll();\n    handleResize();\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Находим элемент века, который находится в центре экрана\n  const getCenturyAtCenter = () => {\n    const timelineContainer = document.querySelector('.timeline-container');\n    if (!timelineContainer) return null;\n    const containerRect = timelineContainer.getBoundingClientRect();\n    const centerX = containerRect.left + containerRect.width / 2;\n\n    // Находим элемент века, который находится ближе всего к центру\n    let closestElement = null;\n    let minDistance = Infinity;\n    timelineElements.forEach(element => {\n      if (element.type === 'century') {\n        const elementLeft = getAdjustedPosition(element.year);\n        const elementCenter = elementLeft + pixelsPerYear * 100 / 2; // 100 лет = 1 век\n        const distance = Math.abs(elementCenter - centerX);\n        if (distance < minDistance) {\n          minDistance = distance;\n          closestElement = element;\n        }\n      }\n    });\n    return closestElement;\n  };\n  const currentCentury = getCenturyAtCenter();\n  if (!currentCentury || currentCentury.type !== 'century') {\n    return null;\n  }\n  const year = currentCentury.year;\n  const centerYear = year + 50; // Центр века\n  const centuryNumber = getCenturyNumber(centerYear);\n  const isNegativeCentury = year < 0;\n  const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: '50%',\n      left: '50%',\n      transform: 'translate(-50%, -50%)',\n      zIndex: 1000,\n      pointerEvents: 'none',\n      background: 'rgba(44, 24, 16, 0.9)',\n      border: '2px solid rgba(244, 228, 193, 0.3)',\n      borderRadius: '12px',\n      padding: '1rem 1.5rem',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.5)',\n      backdropFilter: 'blur(8px)',\n      minWidth: '120px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '2.5rem',\n        fontWeight: 'bold',\n        color: 'rgba(244, 228, 193, 0.9)',\n        textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n        fontFamily: 'serif',\n        marginBottom: '0.5rem'\n      },\n      children: romanNumeral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '0.9rem',\n        color: 'rgba(244, 228, 193, 0.7)',\n        fontWeight: 'normal'\n      },\n      children: [year, \" - \", year + 99, \" \\u0433\\u0433.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(CenturyInfoOverlay, \"+rrNy+LqbkX/+EFk5VDJpBHhclM=\");\n_c = CenturyInfoOverlay;\nexport const Timeline = ({\n  isLoading,\n  timelineWidth,\n  totalHeight,\n  centuryBoundaries,\n  minYear,\n  pixelsPerYear,\n  LEFT_PADDING_PX,\n  rowPlacement,\n  filters,\n  groupingType,\n  categoryDividers,\n  getGroupColor,\n  getGroupColorDark,\n  getGroupColorMuted,\n  getPersonGroup,\n  hoveredPerson,\n  setHoveredPerson,\n  mousePosition,\n  setMousePosition,\n  showTooltip,\n  setShowTooltip,\n  handlePersonHover,\n  activeAchievementMarker,\n  setActiveAchievementMarker,\n  hoveredAchievement,\n  setHoveredAchievement,\n  achievementTooltipPosition,\n  setAchievementTooltipPosition,\n  showAchievementTooltip,\n  setShowAchievementTooltip,\n  hoverTimerRef,\n  sortedData,\n  selectedPerson,\n  setSelectedPerson\n}) => {\n  _s2();\n  const isMobile = useMobile();\n\n  // Функция для определения пустых веков на основе отфильтрованных данных\n  const getEmptyCenturies = () => {\n    if (!sortedData || sortedData.length === 0) return new Set();\n\n    // Используем отфильтрованные данные для определения диапазона\n    const minYear = Math.min(...sortedData.map(p => p.birthYear));\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear));\n    const startCentury = Math.floor(minYear / 100) * 100;\n    const endCentury = Math.ceil(maxYear / 100) * 100;\n    const emptyCenturies = new Set();\n    for (let centuryStart = startCentury; centuryStart <= endCentury; centuryStart += 100) {\n      const centuryEnd = centuryStart + 99;\n      const hasDataInCentury = sortedData.some(person => person.birthYear <= centuryEnd && person.deathYear >= centuryStart);\n      if (!hasDataInCentury) {\n        emptyCenturies.add(centuryStart);\n      }\n    }\n    return emptyCenturies;\n  };\n\n  // Создаем массив для отображения веков с промежутками\n  const getTimelineElements = () => {\n    if (!filters.hideEmptyCenturies) {\n      return centuryBoundaries.map(year => ({\n        type: 'century',\n        year\n      }));\n    }\n    const emptyCenturies = getEmptyCenturies();\n    const visibleCenturies = centuryBoundaries.filter(year => !emptyCenturies.has(year));\n    const elements = [];\n    for (let i = 0; i < visibleCenturies.length; i++) {\n      const currentYear = visibleCenturies[i];\n\n      // Добавляем промежуток перед веком (кроме первого)\n      if (i > 0) {\n        const prevYear = visibleCenturies[i - 1];\n        const gapStart = prevYear + 100;\n        const gapEnd = currentYear;\n\n        // Находим все скрытые века в промежутке\n        const hiddenCenturies = [];\n        for (let year = gapStart; year < gapEnd; year += 100) {\n          if (emptyCenturies.has(year)) {\n            hiddenCenturies.push(year);\n          }\n        }\n        if (hiddenCenturies.length > 0) {\n          elements.push({\n            type: 'gap',\n            startYear: gapStart,\n            endYear: gapEnd,\n            hiddenCenturies\n          });\n        }\n      }\n\n      // Добавляем сам век\n      elements.push({\n        type: 'century',\n        year: currentYear\n      });\n    }\n    return elements;\n  };\n  const timelineElements = getTimelineElements();\n\n  // Функция для вычисления позиции с учетом промежутков\n  const getAdjustedPosition = year => {\n    if (!filters.hideEmptyCenturies) {\n      return getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    }\n\n    // Находим позицию года в оригинальной шкале\n    const originalPosition = getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n\n    // Вычисляем смещение, проходя по всем промежуткам до этого года\n    let totalOffset = 0;\n    for (const element of timelineElements) {\n      if (element.type === 'gap') {\n        const gapStart = getPosition(element.startYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const gapEnd = getPosition(element.endYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const originalGapWidth = gapEnd - gapStart;\n        const newGapWidth = pixelsPerYear * 10; // 10 лет\n\n        // Если год находится после этого промежутка, добавляем смещение\n        if (year >= element.endYear) {\n          totalOffset += originalGapWidth - newGapWidth;\n        }\n      }\n    }\n    return originalPosition - totalOffset;\n  };\n\n  // Функция для вычисления ширины с учетом промежутков\n  const getAdjustedWidth = (startYear, endYear) => {\n    if (!filters.hideEmptyCenturies) {\n      return getWidth(startYear, endYear, pixelsPerYear);\n    }\n    const startPos = getAdjustedPosition(startYear);\n    const endPos = getAdjustedPosition(endYear);\n    return endPos - startPos;\n  };\n\n  // Функция для вычисления скорректированной ширины таймлайна\n  const getAdjustedTimelineWidth = () => {\n    if (!filters.hideEmptyCenturies) {\n      return timelineWidth;\n    }\n\n    // Вычисляем общую ширину, проходя по всем элементам\n    let totalWidth = 0;\n    for (const element of timelineElements) {\n      if (element.type === 'century') {\n        // Век занимает 100 лет\n        totalWidth += pixelsPerYear * 100;\n      } else if (element.type === 'gap') {\n        // Промежуток занимает 10 лет\n        totalWidth += pixelsPerYear * 10;\n      }\n    }\n    return totalWidth + LEFT_PADDING_PX + 50; // Добавляем отступы\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      role: \"status\",\n      \"aria-live\": \"polite\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\",\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-content\",\n      id: \"timeline-content\",\n      role: \"presentation\",\n      \"aria-hidden\": \"true\",\n      style: {\n        position: 'relative',\n        height: '100%',\n        overflow: 'visible',\n        padding: isMobile ? '0' : '1rem 0 2rem 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-background\",\n        id: \"timeline-background\",\n        role: \"presentation\",\n        \"aria-hidden\": \"true\",\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 1\n        },\n        children: timelineElements.map((element, index) => {\n          if (element.type === 'century') {\n            const year = element.year;\n            // Каждый век занимает ровно 100 лет\n            const nextYear = year + 100;\n            const startPos = getAdjustedPosition(year);\n            const endPos = getAdjustedPosition(nextYear);\n            const width = endPos - startPos;\n\n            // Вычисляем век на основе центра года в столетии\n            const centerYear = year + 50;\n            const centuryNumber = getCenturyNumber(centerYear);\n            // Для отрицательных веков добавляем знак минус\n            const isNegativeCentury = year < 0;\n            const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"century-background\",\n              id: `century-${year}`,\n              role: \"presentation\",\n              \"aria-label\": `Век ${romanNumeral}`,\n              style: {\n                position: 'absolute',\n                left: `${startPos}px`,\n                width: `${width}px`,\n                height: '100%',\n                background: getCenturyColor(year, minYear),\n                opacity: 0.3,\n                zIndex: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"century-label\",\n                id: `century-label-${year}`,\n                \"aria-label\": `Век ${romanNumeral}`,\n                style: {\n                  position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  fontSize: '2rem',\n                  fontWeight: 'bold',\n                  color: 'rgba(244, 228, 193, 0.6)',\n                  textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n                  pointerEvents: 'none',\n                  zIndex: 2,\n                  fontFamily: 'serif'\n                },\n                children: romanNumeral\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 19\n              }, this)\n            }, `century-bg-${year}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this);\n          } else if (element.type === 'gap') {\n            var _element$hiddenCentur;\n            // Промежуток между веками - компактный размер (1/10 века)\n            const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n            const startPos = getAdjustedPosition(element.startYear);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${startPos}px`,\n                width: `${gapWidth}px`,\n                height: '100%',\n                background: 'rgba(139, 69, 19, 0.1)',\n                border: '1px dashed rgba(139, 69, 19, 0.3)',\n                zIndex: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  fontSize: '0.8rem',\n                  color: 'rgba(139, 69, 19, 0.7)',\n                  textAlign: 'center',\n                  pointerEvents: 'none',\n                  zIndex: 2,\n                  fontWeight: 'bold'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u043E:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 479,\n                  columnNumber: 42\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '0.7rem',\n                    marginTop: '2px'\n                  },\n                  children: ((_element$hiddenCentur = element.hiddenCenturies) === null || _element$hiddenCentur === void 0 ? void 0 : _element$hiddenCentur.map(year => {\n                    const centuryNumber = getCenturyNumber(year + 50);\n                    const isNegativeCentury = year < 0;\n                    const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n                    return romanNumeral;\n                  }).join(', ')) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 22\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this)\n            }, `gap-${element.startYear}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 18\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 5\n        },\n        children: timelineElements.map(element => {\n          if (element.type === 'century') {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(element.year)}px`,\n                width: '2px',\n                height: '100%',\n                background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                zIndex: 5\n              }\n            }, `century-line-${element.year}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 19\n            }, this);\n          } else if (element.type === 'gap') {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(element.startYear)}px`,\n                width: '2px',\n                height: '100%',\n                background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                zIndex: 5\n              }\n            }, `gap-line-${element.startYear}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 19\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-dividers\",\n        id: \"category-dividers\",\n        role: \"presentation\",\n        \"aria-hidden\": \"true\",\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 8\n        },\n        children: categoryDividers.map(divider => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-divider\",\n          id: `divider-${divider.category}`,\n          role: \"separator\",\n          \"aria-label\": `Разделитель группы: ${divider.category}`,\n          style: {\n            position: 'absolute',\n            top: `${divider.top}px`,\n            left: '0',\n            width: '100%',\n            height: '10px',\n            background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n            opacity: 0.6,\n            zIndex: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-label\",\n            id: `category-label-${divider.category}`,\n            \"aria-label\": `Группа: ${divider.category}`,\n            style: {\n              position: 'absolute',\n              left: '20px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              background: getGroupColor(divider.category),\n              color: 'white',\n              padding: '2px 8px',\n              borderRadius: '4px',\n              fontSize: '0.7rem',\n              fontWeight: 'bold',\n              whiteSpace: 'nowrap',\n              zIndex: 9\n            },\n            children: divider.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 15\n          }, this)\n        }, `category-divider-${divider.category}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"person-timeline\",\n        id: \"person-timeline\",\n        role: \"list\",\n        \"aria-label\": \"\\u0412\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043B\\u0438\\u043D\\u0438\\u0438 \\u0438\\u0441\\u0442\\u043E\\u0440\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0445 \\u043B\\u0438\\u0447\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\",\n        style: {\n          position: 'relative',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 60}px`,\n          zIndex: 10\n        },\n        children: rowPlacement.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-row\",\n          id: `timeline-row-${rowIndex}`,\n          role: \"listitem\",\n          \"aria-label\": `Строка ${rowIndex + 1} временной линии`,\n          style: {\n            position: 'relative',\n            height: row.length === 0 ? '20px' : '60px',\n            marginBottom: row.length === 0 ? '0px' : '10px'\n          },\n          children: row.map(person => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"birth-year-label\",\n              id: `birth-year-${person.id}`,\n              \"aria-label\": `Год рождения: ${person.birthYear}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.birthYear)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: 'rgba(244, 228, 193, 0.6)',\n                fontStyle: 'italic',\n                fontWeight: 400,\n                transform: 'translateX(-100%) translateY(-10px)'\n              },\n              children: person.birthYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 19\n            }, this), person.reignStart && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reign-label\",\n              id: `reign-start-${person.id}`,\n              \"aria-label\": `Начало правления: ${person.reignStart}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.reignStart)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: '#E57373',\n                // Темно-красный\n                fontStyle: 'italic',\n                fontWeight: 'bold',\n                transform: 'translateX(-100%) translateY(-22px)'\n              },\n              children: [\"\\uD83D\\uDC51 \", person.reignStart]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 22\n            }, this), person.reignEnd && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reign-label\",\n              id: `reign-end-${person.id}`,\n              \"aria-label\": `Конец правления: ${person.reignEnd}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.reignEnd)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: '#E57373',\n                // Темно-красный\n                fontStyle: 'italic',\n                fontWeight: 'bold',\n                transform: 'translateY(-22px)'\n              },\n              children: person.reignEnd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"death-year-label\",\n              id: `death-year-${person.id}`,\n              \"aria-label\": `Год смерти: ${person.deathYear}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.deathYear)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: 'rgba(244, 228, 193, 0.6)',\n                fontStyle: 'italic',\n                fontWeight: 400,\n                transform: 'translateY(-10px)'\n              },\n              children: person.deathYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 38\n            }, this), filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3].filter(year => year !== undefined && year !== null).map((year, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"achievement-marker\",\n                id: `achievement-${person.id}-${index}`,\n                role: \"button\",\n                \"aria-label\": `Достижение ${index + 1} в ${year} году`,\n                tabIndex: 0,\n                style: {\n                  position: 'absolute',\n                  left: `${getAdjustedPosition(year)}px`,\n                  top: '-4px',\n                  width: '2px',\n                  // Возвращаем стандартную ширину\n                  height: '15px',\n                  // Возвращаем стандартную высоту\n                  backgroundColor: getGroupColorDark(getPersonGroup(person)),\n                  zIndex: (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.personId) === person.id && (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.index) === index ? 10 : 3,\n                  transform: 'translateX(-50%)',\n                  cursor: 'pointer',\n                  transition: 'all 0.2s ease'\n                  // Убираем псевдоэлементы, так как они не работают в inline стилях\n                },\n                onMouseEnter: e => {\n                  if (!isMobile) {\n                    e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n\n                    // Устанавливаем активный маркер\n                    setActiveAchievementMarker({\n                      personId: person.id,\n                      index\n                    });\n\n                    // Очищаем предыдущий таймер если он есть\n                    if (hoverTimerRef.current) {\n                      clearTimeout(hoverTimerRef.current);\n                    }\n\n                    // Запускаем таймер для показа tooltip\n                    hoverTimerRef.current = setTimeout(() => {\n                      setAchievementTooltipPosition({\n                        x: e.clientX,\n                        y: e.clientY\n                      });\n                      setHoveredAchievement({\n                        person,\n                        year: year,\n                        index\n                      });\n                      setShowAchievementTooltip(true);\n                    }, 500);\n                  }\n                },\n                onMouseLeave: e => {\n                  if (!isMobile) {\n                    e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = 'none';\n\n                    // Сбрасываем активный маркер\n                    setActiveAchievementMarker(null);\n\n                    // Очищаем таймер и скрываем tooltip\n                    if (hoverTimerRef.current) {\n                      clearTimeout(hoverTimerRef.current);\n                      hoverTimerRef.current = null;\n                    }\n                    setShowAchievementTooltip(false);\n                    setHoveredAchievement(null);\n                  }\n                },\n                onMouseMove: e => {\n                  if (!isMobile && hoveredAchievement && hoveredAchievement.person.id === person.id && hoveredAchievement.index === index) {\n                    setAchievementTooltipPosition({\n                      x: e.clientX,\n                      y: e.clientY\n                    });\n                  }\n                },\n                onTouchStart: e => {\n                  if (isMobile) {\n                    e.preventDefault();\n                    e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n\n                    // Устанавливаем активный маркер\n                    setActiveAchievementMarker({\n                      personId: person.id,\n                      index\n                    });\n\n                    // Показываем tooltip сразу на мобильных\n                    const touch = e.touches[0];\n                    setAchievementTooltipPosition({\n                      x: touch.clientX,\n                      y: touch.clientY\n                    });\n                    setHoveredAchievement({\n                      person,\n                      year: year,\n                      index\n                    });\n                    setShowAchievementTooltip(true);\n                  }\n                },\n                onTouchEnd: e => {\n                  if (isMobile) {\n                    // Убираем визуальные эффекты при отпускании, но НЕ скрываем tooltip\n                    e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = 'none';\n\n                    // Сбрасываем активный маркер\n                    setActiveAchievementMarker(null);\n\n                    // НЕ скрываем tooltip - он будет скрыт только по клику вне или по кнопке закрытия\n                  }\n                },\n                onKeyDown: e => {\n                  if (e.key === 'Enter' || e.key === ' ') {\n                    e.preventDefault();\n                    // Показываем tooltip при нажатии Enter или Space\n                    setHoveredAchievement({\n                      person,\n                      year: year,\n                      index\n                    });\n                    // Используем позицию элемента для tooltip при нажатии клавиши\n                    const rect = e.currentTarget.getBoundingClientRect();\n                    setAchievementTooltipPosition({\n                      x: rect.left + rect.width / 2,\n                      y: rect.top - 10\n                    });\n                    setShowAchievementTooltip(true);\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    position: 'absolute',\n                    top: '-12px',\n                    left: '50%',\n                    transform: 'translateX(-50%)',\n                    fontSize: '8px',\n                    color: getGroupColorDark(getPersonGroup(person)),\n                    fontWeight: 'bold',\n                    whiteSpace: 'nowrap',\n                    backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                    padding: '1px 3px',\n                    borderRadius: '2px',\n                    border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                    transition: 'all 0.2s ease'\n                  },\n                  children: year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 809,\n                  columnNumber: 27\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 703,\n                columnNumber: 25\n              }, this);\n            }), person.reignStart && person.reignEnd && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reign-bar\",\n              id: `reign-bar-${person.id}`,\n              role: \"presentation\",\n              \"aria-label\": `Период правления: ${person.reignStart} - ${person.reignEnd}`,\n              style: {\n                position: 'absolute',\n                top: '-15px',\n                left: `${getAdjustedPosition(person.reignStart)}px`,\n                width: `${getAdjustedWidth(person.reignStart, person.reignEnd)}px`,\n                height: '65px',\n                backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                pointerEvents: 'none',\n                borderLeft: '2px solid #D32F2F',\n                borderRight: '2px solid #D32F2F',\n                borderRadius: '3px',\n                zIndex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 832,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"life-bar\",\n              id: `life-bar-${person.id}`,\n              role: \"button\",\n              \"aria-label\": `${person.name}, ${person.birthYear} - ${person.deathYear}, ${person.category}`,\n              tabIndex: 0,\n              style: {\n                position: 'absolute',\n                top: '10px',\n                left: `${getAdjustedPosition(person.birthYear)}px`,\n                width: `${getAdjustedWidth(person.birthYear, person.deathYear)}px`,\n                height: '40px',\n                background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                borderRadius: '6px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0 12px',\n                color: 'white',\n                fontSize: '14px',\n                fontWeight: 'bold',\n                minWidth: '60px',\n                boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                border: '1.5px solid #a8926a',\n                opacity: (selectedPerson === null || selectedPerson === void 0 ? void 0 : selectedPerson.id) === person.id ? 0.8 : 1,\n                zIndex: 5,\n                transform: (selectedPerson === null || selectedPerson === void 0 ? void 0 : selectedPerson.id) === person.id ? 'scale(1.05)' : 'scale(1)',\n                transition: 'all 0.2s ease'\n              },\n              onMouseEnter: e => {\n                if (!isMobile) {\n                  e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)';\n                  e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)';\n                  e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n                  // Используем handlePersonHover для правильной обработки\n                  handlePersonHover(person, e.clientX, e.clientY);\n                }\n              },\n              onMouseLeave: e => {\n                if (!isMobile) {\n                  e.currentTarget.style.transform = (selectedPerson === null || selectedPerson === void 0 ? void 0 : selectedPerson.id) === person.id ? 'scale(1.05)' : 'translateY(0) scale(1)';\n                  e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)';\n                  e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)';\n                  // Используем handlePersonHover для правильной обработки с задержкой\n                  handlePersonHover(null, 0, 0);\n                }\n              },\n              onMouseMove: e => {\n                if (!isMobile && (hoveredPerson === null || hoveredPerson === void 0 ? void 0 : hoveredPerson.id) === person.id) {\n                  setMousePosition({\n                    x: e.clientX,\n                    y: e.clientY\n                  });\n                }\n              },\n              onKeyDown: e => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault();\n                  if (isMobile) {\n                    setSelectedPerson(person);\n                  } else {\n                    setHoveredPerson(person);\n                    setShowTooltip(true);\n                  }\n                }\n              },\n              onClick: () => {\n                if (isMobile) {\n                  setSelectedPerson(person);\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  lineHeight: '1.2'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: person.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 923,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 922,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 38\n            }, this)]\n          }, person.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 594,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CenturyInfoOverlay, {\n      timelineElements: timelineElements,\n      getAdjustedPosition: getAdjustedPosition,\n      getCenturyNumber: getCenturyNumber,\n      toRomanNumeral: toRomanNumeral,\n      minYear: minYear,\n      getCenturyColor: getCenturyColor,\n      pixelsPerYear: pixelsPerYear,\n      getAdjustedTimelineWidth: getAdjustedTimelineWidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s2(Timeline, \"mDTz/1/3lw+8ALGZO2u07zUf7H8=\", false, function () {\n  return [useMobile];\n});\n_c2 = Timeline;\nvar _c, _c2;\n$RefreshReg$(_c, \"CenturyInfoOverlay\");\n$RefreshReg$(_c2, \"Timeline\");","map":{"version":3,"names":["React","useEffect","useState","useMobile","getPosition","getWidth","getCenturyColor","getCenturyNumber","toRomanNumeral","jsxDEV","_jsxDEV","Fragment","_Fragment","CenturyInfoOverlay","timelineElements","getAdjustedPosition","minYear","pixelsPerYear","getAdjustedTimelineWidth","_s","scrollY","setScrollY","viewportCenter","setViewportCenter","handleScroll","window","innerHeight","handleResize","addEventListener","removeEventListener","getCenturyAtCenter","timelineContainer","document","querySelector","containerRect","getBoundingClientRect","centerX","left","width","closestElement","minDistance","Infinity","forEach","element","type","elementLeft","year","elementCenter","distance","Math","abs","currentCentury","centerYear","centuryNumber","isNegativeCentury","romanNumeral","style","position","top","transform","zIndex","pointerEvents","background","border","borderRadius","padding","boxShadow","backdropFilter","minWidth","textAlign","children","fontSize","fontWeight","color","textShadow","fontFamily","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","Timeline","isLoading","timelineWidth","totalHeight","centuryBoundaries","LEFT_PADDING_PX","rowPlacement","filters","groupingType","categoryDividers","getGroupColor","getGroupColorDark","getGroupColorMuted","getPersonGroup","hoveredPerson","setHoveredPerson","mousePosition","setMousePosition","showTooltip","setShowTooltip","handlePersonHover","activeAchievementMarker","setActiveAchievementMarker","hoveredAchievement","setHoveredAchievement","achievementTooltipPosition","setAchievementTooltipPosition","showAchievementTooltip","setShowAchievementTooltip","hoverTimerRef","sortedData","selectedPerson","setSelectedPerson","_s2","isMobile","getEmptyCenturies","length","Set","min","map","p","birthYear","maxYear","max","deathYear","startCentury","floor","endCentury","ceil","emptyCenturies","centuryStart","centuryEnd","hasDataInCentury","some","person","add","getTimelineElements","hideEmptyCenturies","visibleCenturies","filter","has","elements","i","currentYear","prevYear","gapStart","gapEnd","hiddenCenturies","push","startYear","endYear","originalPosition","totalOffset","originalGapWidth","newGapWidth","getAdjustedWidth","startPos","endPos","totalWidth","className","role","id","height","overflow","index","nextYear","opacity","_element$hiddenCentur","gapWidth","marginTop","join","divider","category","whiteSpace","row","rowIndex","fontStyle","reignStart","reignEnd","showAchievements","achievementYear1","achievementYear2","achievementYear3","undefined","tabIndex","backgroundColor","personId","cursor","transition","onMouseEnter","e","currentTarget","current","clearTimeout","setTimeout","x","clientX","y","clientY","onMouseLeave","onMouseMove","onTouchStart","preventDefault","touch","touches","onTouchEnd","onKeyDown","key","rect","borderLeft","borderRight","name","display","alignItems","borderColor","onClick","flexDirection","lineHeight","_c2","$RefreshReg$"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/components/Timeline.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMobile } from '../hooks/useMobile'\nimport { Person } from '../types'\nimport { \n  getPosition, \n  getWidth, \n  getCenturyColor, \n  getCenturyNumber, \n  toRomanNumeral\n} from '../utils/timelineUtils'\n\ninterface TimelineProps {\n  isLoading: boolean\n  timelineWidth: number\n  totalHeight: number\n  centuryBoundaries: number[]\n  minYear: number\n  pixelsPerYear: number\n  LEFT_PADDING_PX: number\n  rowPlacement: Person[][]\n  filters: {\n    showAchievements: boolean\n    hideEmptyCenturies: boolean\n  }\n  groupingType: 'category' | 'country' | 'none'\n  categoryDividers: { category: string; top: number }[]\n  getGroupColor: (groupName: string) => string\n  getGroupColorDark: (groupName: string) => string\n  getGroupColorMuted: (groupName: string) => string\n  getPersonGroup: (person: Person) => string\n  hoveredPerson: Person | null\n  setHoveredPerson: (person: Person | null) => void\n  mousePosition: { x: number; y: number }\n  setMousePosition: (position: { x: number; y: number }) => void\n  showTooltip: boolean\n  setShowTooltip: (show: boolean) => void\n  handlePersonHover: (person: Person | null, x: number, y: number) => void\n  activeAchievementMarker: { personId: string; index: number } | null\n  setActiveAchievementMarker: (marker: { personId: string; index: number } | null) => void\n  hoveredAchievement: { person: Person; year: number; index: number } | null\n  setHoveredAchievement: (achievement: { person: Person; year: number; index: number } | null) => void\n  achievementTooltipPosition: { x: number; y: number }\n  setAchievementTooltipPosition: (position: { x: number; y: number }) => void\n  showAchievementTooltip: boolean\n  setShowAchievementTooltip: (show: boolean) => void\n  hoverTimerRef: React.MutableRefObject<NodeJS.Timeout | null>\n  sortedData: any[]\n  selectedPerson: Person | null\n  setSelectedPerson: (person: Person | null) => void\n}\n\n// Типы для элементов временной линии\ntype TimelineElement = \n  | { type: 'century'; year: number }\n  | { type: 'gap'; startYear: number; endYear: number; hiddenCenturies: number[] }\n\n// Новый компонент для отображения информации о веках в центре экрана\nconst CenturyInfoOverlay: React.FC<{\n  timelineElements: TimelineElement[]\n  getAdjustedPosition: (year: number) => number\n  getCenturyNumber: (year: number) => number\n  toRomanNumeral: (num: number) => string\n  minYear: number\n  getCenturyColor: (year: number, minYear: number) => string\n  pixelsPerYear: number\n  getAdjustedTimelineWidth: () => number\n}> = ({ \n  timelineElements, \n  getAdjustedPosition, \n  getCenturyNumber, \n  toRomanNumeral, \n  minYear, \n  getCenturyColor,\n  pixelsPerYear,\n  getAdjustedTimelineWidth\n}) => {\n  const [scrollY, setScrollY] = useState(0);\n  const [viewportCenter, setViewportCenter] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      setScrollY(window.scrollY);\n      setViewportCenter(window.innerHeight / 2);\n    };\n\n    const handleResize = () => {\n      setViewportCenter(window.innerHeight / 2);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    window.addEventListener('resize', handleResize);\n    \n    // Инициализация\n    handleScroll();\n    handleResize();\n\n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Находим элемент века, который находится в центре экрана\n  const getCenturyAtCenter = (): TimelineElement | null => {\n    const timelineContainer = document.querySelector('.timeline-container');\n    if (!timelineContainer) return null;\n\n    const containerRect = timelineContainer.getBoundingClientRect();\n    const centerX = containerRect.left + containerRect.width / 2;\n    \n    // Находим элемент века, который находится ближе всего к центру\n    let closestElement: TimelineElement | null = null;\n    let minDistance = Infinity;\n\n    timelineElements.forEach(element => {\n      if (element.type === 'century') {\n        const elementLeft = getAdjustedPosition(element.year);\n        const elementCenter = elementLeft + (pixelsPerYear * 100) / 2; // 100 лет = 1 век\n        const distance = Math.abs(elementCenter - centerX);\n        \n        if (distance < minDistance) {\n          minDistance = distance;\n          closestElement = element;\n        }\n      }\n    });\n\n    return closestElement;\n  };\n\n  const currentCentury = getCenturyAtCenter();\n\n  if (!currentCentury || currentCentury.type !== 'century') {\n    return null;\n  }\n\n  const year = currentCentury.year;\n  const centerYear = year + 50; // Центр века\n  const centuryNumber = getCenturyNumber(centerYear);\n  const isNegativeCentury = year < 0;\n  const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        zIndex: 1000,\n        pointerEvents: 'none',\n        background: 'rgba(44, 24, 16, 0.9)',\n        border: '2px solid rgba(244, 228, 193, 0.3)',\n        borderRadius: '12px',\n        padding: '1rem 1.5rem',\n        boxShadow: '0 8px 32px rgba(0, 0, 0, 0.5)',\n        backdropFilter: 'blur(8px)',\n        minWidth: '120px',\n        textAlign: 'center'\n      }}\n    >\n      <div style={{\n        fontSize: '2.5rem',\n        fontWeight: 'bold',\n        color: 'rgba(244, 228, 193, 0.9)',\n        textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n        fontFamily: 'serif',\n        marginBottom: '0.5rem'\n      }}>\n        {romanNumeral}\n      </div>\n      <div style={{\n        fontSize: '0.9rem',\n        color: 'rgba(244, 228, 193, 0.7)',\n        fontWeight: 'normal'\n      }}>\n        {year} - {year + 99} гг.\n      </div>\n    </div>\n  );\n};\n\nexport const Timeline: React.FC<TimelineProps> = ({\n  isLoading,\n  timelineWidth,\n  totalHeight,\n  centuryBoundaries,\n  minYear,\n  pixelsPerYear,\n  LEFT_PADDING_PX,\n  rowPlacement,\n  filters,\n  groupingType,\n  categoryDividers,\n  getGroupColor,\n  getGroupColorDark,\n  getGroupColorMuted,\n  getPersonGroup,\n  hoveredPerson,\n  setHoveredPerson,\n  mousePosition,\n  setMousePosition,\n  showTooltip,\n  setShowTooltip,\n  handlePersonHover,\n  activeAchievementMarker,\n  setActiveAchievementMarker,\n  hoveredAchievement,\n  setHoveredAchievement,\n  achievementTooltipPosition,\n  setAchievementTooltipPosition,\n  showAchievementTooltip,\n  setShowAchievementTooltip,\n  hoverTimerRef,\n  sortedData,\n  selectedPerson,\n  setSelectedPerson\n}) => {\n  const isMobile = useMobile()\n\n  // Функция для определения пустых веков на основе отфильтрованных данных\n  const getEmptyCenturies = () => {\n    if (!sortedData || sortedData.length === 0) return new Set();\n    \n    // Используем отфильтрованные данные для определения диапазона\n    const minYear = Math.min(...sortedData.map(p => p.birthYear));\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear));\n    \n    const startCentury = Math.floor(minYear / 100) * 100;\n    const endCentury = Math.ceil(maxYear / 100) * 100;\n    \n    const emptyCenturies = new Set<number>();\n    \n    for (let centuryStart = startCentury; centuryStart <= endCentury; centuryStart += 100) {\n      const centuryEnd = centuryStart + 99;\n      const hasDataInCentury = sortedData.some(person => \n        (person.birthYear <= centuryEnd && person.deathYear >= centuryStart)\n      );\n      \n      if (!hasDataInCentury) {\n        emptyCenturies.add(centuryStart);\n      }\n    }\n    \n    return emptyCenturies;\n  };\n\n  // Создаем массив для отображения веков с промежутками\n  const getTimelineElements = (): TimelineElement[] => {\n    if (!filters.hideEmptyCenturies) {\n      return centuryBoundaries.map(year => ({ type: 'century', year }));\n    }\n\n    const emptyCenturies = getEmptyCenturies();\n    const visibleCenturies = centuryBoundaries.filter(year => !emptyCenturies.has(year));\n    \n    const elements: TimelineElement[] = [];\n    \n    for (let i = 0; i < visibleCenturies.length; i++) {\n      const currentYear = visibleCenturies[i];\n      \n      // Добавляем промежуток перед веком (кроме первого)\n      if (i > 0) {\n        const prevYear = visibleCenturies[i - 1];\n        const gapStart = prevYear + 100;\n        const gapEnd = currentYear;\n        \n        // Находим все скрытые века в промежутке\n        const hiddenCenturies: number[] = [];\n        for (let year = gapStart; year < gapEnd; year += 100) {\n          if (emptyCenturies.has(year)) {\n            hiddenCenturies.push(year);\n          }\n        }\n        \n        if (hiddenCenturies.length > 0) {\n          elements.push({\n            type: 'gap',\n            startYear: gapStart,\n            endYear: gapEnd,\n            hiddenCenturies\n          });\n        }\n      }\n      \n      // Добавляем сам век\n      elements.push({ type: 'century', year: currentYear });\n    }\n    \n    return elements;\n  };\n\n  const timelineElements = getTimelineElements();\n\n  // Функция для вычисления позиции с учетом промежутков\n  const getAdjustedPosition = (year: number) => {\n    if (!filters.hideEmptyCenturies) {\n      return getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    }\n\n    // Находим позицию года в оригинальной шкале\n    const originalPosition = getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    \n    // Вычисляем смещение, проходя по всем промежуткам до этого года\n    let totalOffset = 0;\n    \n    for (const element of timelineElements) {\n      if (element.type === 'gap') {\n        const gapStart = getPosition(element.startYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const gapEnd = getPosition(element.endYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const originalGapWidth = gapEnd - gapStart;\n        const newGapWidth = pixelsPerYear * 10; // 10 лет\n        \n        // Если год находится после этого промежутка, добавляем смещение\n        if (year >= element.endYear) {\n          totalOffset += (originalGapWidth - newGapWidth);\n        }\n      }\n    }\n    \n    return originalPosition - totalOffset;\n  };\n\n  // Функция для вычисления ширины с учетом промежутков\n  const getAdjustedWidth = (startYear: number, endYear: number) => {\n    if (!filters.hideEmptyCenturies) {\n      return getWidth(startYear, endYear, pixelsPerYear);\n    }\n\n    const startPos = getAdjustedPosition(startYear);\n    const endPos = getAdjustedPosition(endYear);\n    return endPos - startPos;\n  };\n\n  // Функция для вычисления скорректированной ширины таймлайна\n  const getAdjustedTimelineWidth = () => {\n    if (!filters.hideEmptyCenturies) {\n      return timelineWidth;\n    }\n\n    // Вычисляем общую ширину, проходя по всем элементам\n    let totalWidth = 0;\n    \n    for (const element of timelineElements) {\n      if (element.type === 'century') {\n        // Век занимает 100 лет\n        totalWidth += pixelsPerYear * 100;\n      } else if (element.type === 'gap') {\n        // Промежуток занимает 10 лет\n        totalWidth += pixelsPerYear * 10;\n      }\n    }\n\n    return totalWidth + LEFT_PADDING_PX + 50; // Добавляем отступы\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <div className=\"loading-overlay\" role=\"status\" aria-live=\"polite\">\n          <div className=\"spinner\" aria-hidden=\"true\"></div>\n          <span>Загрузка данных...</span>\n        </div>\n      )}\n      \n      {/* Временная линия на весь экран */}\n      <div \n        className=\"timeline-content\" \n        id=\"timeline-content\"\n        role=\"presentation\" \n        aria-hidden=\"true\"\n        style={{ \n          position: 'relative', \n          height: '100%',\n          overflow: 'visible',\n          padding: isMobile ? '0' : '1rem 0 2rem 0'\n        }}\n      >\n        {/* Разноцветная заливка веков */}\n        <div \n          className=\"timeline-background\"\n          id=\"timeline-background\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${getAdjustedTimelineWidth()}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 1\n          }}\n        >\n          {timelineElements.map((element, index) => {\n                         if (element.type === 'century') {\n               const year = element.year;\n               // Каждый век занимает ровно 100 лет\n               const nextYear = year + 100\n               const startPos = getAdjustedPosition(year)\n               const endPos = getAdjustedPosition(nextYear)\n               const width = endPos - startPos\n\n              // Вычисляем век на основе центра года в столетии\n              const centerYear = year + 50\n              const centuryNumber = getCenturyNumber(centerYear)\n              // Для отрицательных веков добавляем знак минус\n              const isNegativeCentury = year < 0\n              const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber)\n              \n              return (\n                <div \n                  key={`century-bg-${year}`} \n                  className=\"century-background\"\n                  id={`century-${year}`}\n                  role=\"presentation\"\n                  aria-label={`Век ${romanNumeral}`}\n                  style={{\n                    position: 'absolute',\n                    left: `${startPos}px`,\n                    width: `${width}px`,\n                    height: '100%',\n                    background: getCenturyColor(year, minYear),\n                    opacity: 0.3,\n                    zIndex: 1\n                  }}\n                >\n                  {/* Римская цифра века в центре */}\n                  <div \n                    className=\"century-label\" \n                    id={`century-label-${year}`}\n                    aria-label={`Век ${romanNumeral}`}\n                    style={{\n                      position: 'absolute',\n                      top: '50%',\n                      left: '50%',\n                      transform: 'translate(-50%, -50%)',\n                      fontSize: '2rem',\n                      fontWeight: 'bold',\n                      color: 'rgba(244, 228, 193, 0.6)',\n                      textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n                      pointerEvents: 'none',\n                      zIndex: 2,\n                      fontFamily: 'serif'\n                    }}\n                  >\n                    {romanNumeral}\n                  </div>\n                </div>\n              )\n                                                   } else if (element.type === 'gap') {\n                // Промежуток между веками - компактный размер (1/10 века)\n                const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n                const startPos = getAdjustedPosition(element.startYear)\n               \n               return (\n                 <div key={`gap-${element.startYear}`} style={{\n                   position: 'absolute',\n                   left: `${startPos}px`,\n                   width: `${gapWidth}px`,\n                   height: '100%',\n                   background: 'rgba(139, 69, 19, 0.1)',\n                   border: '1px dashed rgba(139, 69, 19, 0.3)',\n                   zIndex: 1\n                 }}>\n                  {/* Информация о скрытых веках */}\n                  <div style={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    fontSize: '0.8rem',\n                    color: 'rgba(139, 69, 19, 0.7)',\n                    textAlign: 'center',\n                    pointerEvents: 'none',\n                    zIndex: 2,\n                    fontWeight: 'bold'\n                  }}>\n                                         <div>Скрыто:</div>\n                     <div style={{ fontSize: '0.7rem', marginTop: '2px' }}>\n                       {element.hiddenCenturies?.map(year => {\n                         const centuryNumber = getCenturyNumber(year + 50);\n                         const isNegativeCentury = year < 0;\n                         const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n                         return romanNumeral;\n                       }).join(', ') || ''}\n                     </div>\n                  </div>\n                </div>\n              )\n            }\n            return null;\n          })}\n        </div>\n\n                 {/* Границы веков и промежутков на всю высоту */}\n         <div style={{\n           position: 'absolute',\n           top: '0',\n           left: '0',\n           width: `${getAdjustedTimelineWidth()}px`,\n           height: `${totalHeight + 200}px`,\n           pointerEvents: 'none',\n           zIndex: 5\n         }}>\n                      {timelineElements.map((element) => {\n              if (element.type === 'century') {\n                return (\n                  <div key={`century-line-${element.year}`} style={{\n                    position: 'absolute',\n                    left: `${getAdjustedPosition(element.year)}px`,\n                    width: '2px',\n                    height: '100%',\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                    zIndex: 5\n                  }} />\n                );\n              } else if (element.type === 'gap') {\n                return (\n                  <div key={`gap-line-${element.startYear}`} style={{\n                    position: 'absolute',\n                    left: `${getAdjustedPosition(element.startYear)}px`,\n                    width: '2px',\n                    height: '100%',\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                    zIndex: 5\n                  }} />\n                );\n              }\n              return null;\n            })}\n         </div>\n\n                 {/* Разделители групп */}\n         <div \n           className=\"category-dividers\"\n           id=\"category-dividers\"\n           role=\"presentation\"\n           aria-hidden=\"true\"\n           style={{\n             position: 'absolute',\n             top: '0',\n             left: '0',\n             width: `${getAdjustedTimelineWidth()}px`,\n             height: `${totalHeight + 200}px`,\n             pointerEvents: 'none',\n             zIndex: 8\n           }}\n         >\n          {categoryDividers.map((divider) => (\n            <div \n              key={`category-divider-${divider.category}`} \n              className=\"category-divider\"\n              id={`divider-${divider.category}`}\n              role=\"separator\"\n              aria-label={`Разделитель группы: ${divider.category}`}\n              style={{\n                position: 'absolute',\n                top: `${divider.top}px`,\n                left: '0',\n                width: '100%',\n                height: '10px',\n                background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n                opacity: 0.6,\n                zIndex: 8\n              }}\n            >\n              <div \n                className=\"category-label\" \n                id={`category-label-${divider.category}`}\n                aria-label={`Группа: ${divider.category}`}\n                style={{\n                  position: 'absolute',\n                  left: '20px',\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: getGroupColor(divider.category),\n                  color: 'white',\n                  padding: '2px 8px',\n                  borderRadius: '4px',\n                  fontSize: '0.7rem',\n                  fontWeight: 'bold',\n                  whiteSpace: 'nowrap',\n                  zIndex: 9\n                }}\n              >\n                {divider.category}\n              </div>\n            </div>\n          ))}\n        </div>\n\n                 {/* Полоски жизни */}\n         <div \n           className=\"person-timeline\"\n           id=\"person-timeline\"\n           role=\"list\"\n           aria-label=\"Временные линии исторических личностей\"\n           style={{ \n             position: 'relative',\n             width: `${getAdjustedTimelineWidth()}px`,\n             height: `${totalHeight + 60}px`,\n             zIndex: 10\n           }}\n         >\n          {rowPlacement.map((row, rowIndex) => (\n            <div \n              key={rowIndex} \n              className=\"timeline-row\"\n              id={`timeline-row-${rowIndex}`}\n              role=\"listitem\"\n              aria-label={`Строка ${rowIndex + 1} временной линии`}\n              style={{\n                position: 'relative',\n                height: row.length === 0 ? '20px' : '60px',\n                marginBottom: row.length === 0 ? '0px' : '10px'\n              }}\n            >\n              {row.map((person) => (\n                <React.Fragment key={person.id}>\n                  {/* Годы жизни и правления над полоской */}\n                  <span \n                    className=\"birth-year-label\"\n                    id={`birth-year-${person.id}`}\n                    aria-label={`Год рождения: ${person.birthYear}`}\n                    style={{\n                      position: 'absolute',\n                      left: `${getAdjustedPosition(person.birthYear)}px`,\n                      top: 0,\n                      fontSize: '11px',\n                      color: 'rgba(244, 228, 193, 0.6)',\n                      fontStyle: 'italic',\n                      fontWeight: 400,\n                      transform: 'translateX(-100%) translateY(-10px)'\n                    }}\n                  >\n                    {person.birthYear}\n                  </span>\n\n                                     {person.reignStart && (\n                     <span \n                       className=\"reign-label\" \n                       id={`reign-start-${person.id}`}\n                       aria-label={`Начало правления: ${person.reignStart}`}\n                       style={{\n                         position: 'absolute',\n                         left: `${getAdjustedPosition(person.reignStart)}px`,\n                         top: 0,\n                         fontSize: '11px',\n                         color: '#E57373', // Темно-красный\n                         fontStyle: 'italic',\n                         fontWeight: 'bold',\n                         transform: 'translateX(-100%) translateY(-22px)'\n                       }}\n                     >\n                       👑 {person.reignStart}\n                     </span>\n                   )}\n\n                                     {person.reignEnd && (\n                     <span \n                       className=\"reign-label\" \n                       id={`reign-end-${person.id}`}\n                       aria-label={`Конец правления: ${person.reignEnd}`}\n                       style={{\n                         position: 'absolute',\n                         left: `${getAdjustedPosition(person.reignEnd)}px`,\n                         top: 0,\n                         fontSize: '11px',\n                         color: '#E57373', // Темно-красный\n                         fontStyle: 'italic',\n                         fontWeight: 'bold',\n                         transform: 'translateY(-22px)'\n                       }}\n                     >\n                       {person.reignEnd}\n                     </span>\n                   )}\n                  \n                                     <span \n                                       className=\"death-year-label\"\n                                       id={`death-year-${person.id}`}\n                                       aria-label={`Год смерти: ${person.deathYear}`}\n                                       style={{\n                                         position: 'absolute',\n                                         left: `${getAdjustedPosition(person.deathYear)}px`,\n                                         top: 0,\n                                         fontSize: '11px',\n                                         color: 'rgba(244, 228, 193, 0.6)',\n                                         fontStyle: 'italic',\n                                         fontWeight: 400,\n                                         transform: 'translateY(-10px)'\n                                       }}\n                                     >\n                                       {person.deathYear}\n                                     </span>\n\n                  {/* Маркеры ключевых достижений */}\n                  {filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3]\n                    .filter(year => year !== undefined && year !== null)\n                    .map((year, index) => {\n                      return (\n                        <div \n                          key={index} \n                          className=\"achievement-marker\"\n                          id={`achievement-${person.id}-${index}`}\n                          role=\"button\"\n                          aria-label={`Достижение ${index + 1} в ${year} году`}\n                          tabIndex={0}\n                          style={{\n                            position: 'absolute',\n                            left: `${getAdjustedPosition(year as number)}px`,\n                            top: '-4px',\n                            width: '2px', // Возвращаем стандартную ширину\n                            height: '15px', // Возвращаем стандартную высоту\n                            backgroundColor: getGroupColorDark(getPersonGroup(person)),\n                            zIndex: activeAchievementMarker?.personId === person.id && activeAchievementMarker?.index === index ? 10 : 3,\n                            transform: 'translateX(-50%)',\n                            cursor: 'pointer',\n                            transition: 'all 0.2s ease',\n                            // Убираем псевдоэлементы, так как они не работают в inline стилях\n                          }}\n                        onMouseEnter={(e) => {\n                          if (!isMobile) {\n                            e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n                            \n                            // Устанавливаем активный маркер\n                            setActiveAchievementMarker({ personId: person.id, index });\n                            \n                            // Очищаем предыдущий таймер если он есть\n                            if (hoverTimerRef.current) {\n                              clearTimeout(hoverTimerRef.current);\n                            }\n                            \n                            // Запускаем таймер для показа tooltip\n                            hoverTimerRef.current = setTimeout(() => {\n                              setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\n                              setHoveredAchievement({ person, year: year as number, index });\n                              setShowAchievementTooltip(true);\n                            }, 500);\n                          }\n                        }}\n                        onMouseLeave={(e) => {\n                          if (!isMobile) {\n                            e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = 'none';\n                            \n                            // Сбрасываем активный маркер\n                            setActiveAchievementMarker(null);\n                            \n                            // Очищаем таймер и скрываем tooltip\n                            if (hoverTimerRef.current) {\n                              clearTimeout(hoverTimerRef.current);\n                              hoverTimerRef.current = null;\n                            }\n                            setShowAchievementTooltip(false);\n                            setHoveredAchievement(null);\n                          }\n                        }}\n                        onMouseMove={(e) => {\n                          if (!isMobile && hoveredAchievement && hoveredAchievement.person.id === person.id && hoveredAchievement.index === index) {\n                            setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\n                          }\n                        }}\n                        onTouchStart={(e) => {\n                          if (isMobile) {\n                            e.preventDefault();\n                            e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n                            \n                            // Устанавливаем активный маркер\n                            setActiveAchievementMarker({ personId: person.id, index });\n                            \n                            // Показываем tooltip сразу на мобильных\n                            const touch = e.touches[0];\n                            setAchievementTooltipPosition({ x: touch.clientX, y: touch.clientY });\n                            setHoveredAchievement({ person, year: year as number, index });\n                            setShowAchievementTooltip(true);\n                          }\n                        }}\n                        onTouchEnd={(e) => {\n                          if (isMobile) {\n                            // Убираем визуальные эффекты при отпускании, но НЕ скрываем tooltip\n                            e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = 'none';\n                            \n                            // Сбрасываем активный маркер\n                            setActiveAchievementMarker(null);\n                            \n                            // НЕ скрываем tooltip - он будет скрыт только по клику вне или по кнопке закрытия\n                          }\n                        }}\n                        onKeyDown={(e) => {\n                          if (e.key === 'Enter' || e.key === ' ') {\n                            e.preventDefault();\n                            // Показываем tooltip при нажатии Enter или Space\n                            setHoveredAchievement({ person, year: year as number, index });\n                            // Используем позицию элемента для tooltip при нажатии клавиши\n                            const rect = e.currentTarget.getBoundingClientRect();\n                            setAchievementTooltipPosition({ \n                              x: rect.left + rect.width / 2, \n                              y: rect.top - 10 \n                            });\n                            setShowAchievementTooltip(true);\n                          }\n                        }}\n                        >\n                          <span style={{\n                            position: 'absolute',\n                            top: '-12px',\n                            left: '50%',\n                            transform: 'translateX(-50%)',\n                            fontSize: '8px',\n                            color: getGroupColorDark(getPersonGroup(person)),\n                            fontWeight: 'bold',\n                            whiteSpace: 'nowrap',\n                            backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                            padding: '1px 3px',\n                            borderRadius: '2px',\n                            border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                            transition: 'all 0.2s ease'\n                          }}>\n                            {year}\n                          </span>\n                        </div>\n                      );\n                    })}\n\n                                     {/* полоса правления */}\n                   {person.reignStart && person.reignEnd && (\n                     <div \n                       className=\"reign-bar\"\n                       id={`reign-bar-${person.id}`}\n                       role=\"presentation\"\n                       aria-label={`Период правления: ${person.reignStart} - ${person.reignEnd}`}\n                       style={{\n                         position: 'absolute',\n                         top: '-15px',\n                         left: `${getAdjustedPosition(person.reignStart)}px`,\n                         width: `${getAdjustedWidth(person.reignStart, person.reignEnd)}px`,\n                         height: '65px',\n                         backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                         pointerEvents: 'none',\n                         borderLeft: '2px solid #D32F2F',\n                         borderRight: '2px solid #D32F2F',\n                         borderRadius: '3px',\n                         zIndex: 1\n                       }} \n                     />\n                   )}\n\n                                     <div\n                     className=\"life-bar\"\n                     id={`life-bar-${person.id}`}\n                     role=\"button\"\n                     aria-label={`${person.name}, ${person.birthYear} - ${person.deathYear}, ${person.category}`}\n                     tabIndex={0}\n                     style={{\n                       position: 'absolute',\n                       top: '10px',\n                       left: `${getAdjustedPosition(person.birthYear)}px`,\n                       width: `${getAdjustedWidth(person.birthYear, person.deathYear)}px`,\n                       height: '40px',\n                       background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                       borderRadius: '6px',\n                       cursor: 'pointer',\n                       display: 'flex',\n                       alignItems: 'center',\n                       padding: '0 12px',\n                       color: 'white',\n                       fontSize: '14px',\n                       fontWeight: 'bold',\n                       minWidth: '60px',\n                       boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                       border: '1.5px solid #a8926a',\n                       opacity: selectedPerson?.id === person.id ? 0.8 : 1,\n                       zIndex: 5,\n                       transform: selectedPerson?.id === person.id ? 'scale(1.05)' : 'scale(1)',\n                       transition: 'all 0.2s ease'\n                     }}\n                    onMouseEnter={(e) => {\n                      if (!isMobile) {\n                        e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)'\n                        e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)'\n                        // Используем handlePersonHover для правильной обработки\n                        handlePersonHover(person, e.clientX, e.clientY)\n                      }\n                    }}\n                    onMouseLeave={(e) => {\n                      if (!isMobile) {\n                        e.currentTarget.style.transform = selectedPerson?.id === person.id ? 'scale(1.05)' : 'translateY(0) scale(1)'\n                        e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)'\n                        // Используем handlePersonHover для правильной обработки с задержкой\n                        handlePersonHover(null, 0, 0)\n                      }\n                    }}\n                    onMouseMove={(e) => {\n                      if (!isMobile && hoveredPerson?.id === person.id) {\n                        setMousePosition({ x: e.clientX, y: e.clientY })\n                      }\n                    }}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        if (isMobile) {\n                          setSelectedPerson(person);\n                        } else {\n                          setHoveredPerson(person);\n                          setShowTooltip(true);\n                        }\n                      }\n                    }}\n                    onClick={() => {\n                      if (isMobile) {\n                        setSelectedPerson(person)\n                      }\n                    }}\n                  >\n                    <div style={{ display: 'flex', flexDirection: 'column', lineHeight: '1.2' }}>\n                      <span>{person.name}</span>\n                    </div>\n                  </div>\n                </React.Fragment>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n      <CenturyInfoOverlay \n        timelineElements={timelineElements} \n        getAdjustedPosition={getAdjustedPosition} \n        getCenturyNumber={getCenturyNumber} \n        toRomanNumeral={toRomanNumeral} \n        minYear={minYear} \n        getCenturyColor={getCenturyColor}\n        pixelsPerYear={pixelsPerYear}\n        getAdjustedTimelineWidth={getAdjustedTimelineWidth}\n      />\n    </>\n  )\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}