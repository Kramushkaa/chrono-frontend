{"ast":null,"code":"import React from'react';import{useMobile}from'../hooks/useMobile';import{useTimelineDrag}from'../hooks/useTimelineDrag';import{getPosition,getWidth,getCenturyColor,getCenturyNumber,toRomanNumeral}from'../utils/timelineUtils';// Типы для элементов временной линии\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";export const Timeline=_ref=>{let{isLoading,timelineWidth,totalHeight,centuryBoundaries,minYear,pixelsPerYear,LEFT_PADDING_PX,rowPlacement,filters,groupingType,categoryDividers,getGroupColor,getGroupColorDark,getGroupColorMuted,getPersonGroup,hoveredPerson,setHoveredPerson,mousePosition,setMousePosition,showTooltip,setShowTooltip,handlePersonHover,activeAchievementMarker,setActiveAchievementMarker,hoveredAchievement,setHoveredAchievement,achievementTooltipPosition,setAchievementTooltipPosition,showAchievementTooltip,setShowAchievementTooltip,hoverTimerRef,sortedData,selectedPerson,setSelectedPerson}=_ref;const isMobile=useMobile();// Хук для перетаскивания timeline (используется только в App.tsx)\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst _unused=useTimelineDrag({timelineWidth,containerWidth:window.innerWidth});// Функция для определения пустых веков на основе отфильтрованных данных\nconst getEmptyCenturies=()=>{if(!sortedData||sortedData.length===0)return new Set();// Используем отфильтрованные данные для определения диапазона\nconst minYear=Math.min(...sortedData.map(p=>p.birthYear));const maxYear=Math.max(...sortedData.map(p=>p.deathYear));const startCentury=Math.floor(minYear/100)*100;const endCentury=Math.ceil(maxYear/100)*100;const emptyCenturies=new Set();for(let centuryStart=startCentury;centuryStart<=endCentury;centuryStart+=100){const centuryEnd=centuryStart+99;const hasDataInCentury=sortedData.some(person=>person.birthYear<=centuryEnd&&person.deathYear>=centuryStart);if(!hasDataInCentury){emptyCenturies.add(centuryStart);}}return emptyCenturies;};// Создаем массив для отображения веков с промежутками\nconst getTimelineElements=()=>{if(!filters.hideEmptyCenturies){return centuryBoundaries.map(year=>({type:'century',year}));}const emptyCenturies=getEmptyCenturies();const visibleCenturies=centuryBoundaries.filter(year=>!emptyCenturies.has(year));const elements=[];for(let i=0;i<visibleCenturies.length;i++){const currentYear=visibleCenturies[i];// Добавляем промежуток перед веком (кроме первого)\nif(i>0){const prevYear=visibleCenturies[i-1];const gapStart=prevYear+100;const gapEnd=currentYear;// Находим все скрытые века в промежутке\nconst hiddenCenturies=[];for(let year=gapStart;year<gapEnd;year+=100){if(emptyCenturies.has(year)){hiddenCenturies.push(year);}}if(hiddenCenturies.length>0){elements.push({type:'gap',startYear:gapStart,endYear:gapEnd,hiddenCenturies});}}// Добавляем сам век\nelements.push({type:'century',year:currentYear});}return elements;};const timelineElements=getTimelineElements();// Функция для вычисления позиции с учетом промежутков\nconst getAdjustedPosition=year=>{if(!filters.hideEmptyCenturies){return getPosition(year,minYear,pixelsPerYear,LEFT_PADDING_PX);}// Находим позицию года в оригинальной шкале\nconst originalPosition=getPosition(year,minYear,pixelsPerYear,LEFT_PADDING_PX);// Вычисляем смещение, проходя по всем промежуткам до этого года\nlet totalOffset=0;for(const element of timelineElements){if(element.type==='gap'){const gapStart=getPosition(element.startYear,minYear,pixelsPerYear,LEFT_PADDING_PX);const gapEnd=getPosition(element.endYear,minYear,pixelsPerYear,LEFT_PADDING_PX);const originalGapWidth=gapEnd-gapStart;const newGapWidth=pixelsPerYear*10;// 10 лет\n// Если год находится после этого промежутка, добавляем смещение\nif(year>=element.endYear){totalOffset+=originalGapWidth-newGapWidth;}}}return originalPosition-totalOffset;};// Функция для вычисления ширины с учетом промежутков\nconst getAdjustedWidth=(startYear,endYear)=>{if(!filters.hideEmptyCenturies){return getWidth(startYear,endYear,pixelsPerYear);}const startPos=getAdjustedPosition(startYear);const endPos=getAdjustedPosition(endYear);return endPos-startPos;};// Функция для вычисления скорректированной ширины таймлайна\nconst getAdjustedTimelineWidth=()=>{if(!filters.hideEmptyCenturies){return timelineWidth;}// Вычисляем общую ширину, проходя по всем элементам\nlet totalWidth=0;for(const element of timelineElements){if(element.type==='century'){// Век занимает 100 лет\ntotalWidth+=pixelsPerYear*100;}else if(element.type==='gap'){// Промежуток занимает 10 лет\ntotalWidth+=pixelsPerYear*10;}}return totalWidth+LEFT_PADDING_PX+50;// Добавляем отступы\n};// Функция для точного позиционирования achievement tooltip\nconst getAchievementTooltipPosition=(element,personId,index)=>{// Проверяем, что элемент существует и видим\nif(!element||!element.getBoundingClientRect){console.warn('Element not found for tooltip positioning');return{x:0,y:0};}const rect=element.getBoundingClientRect();console.log(`Element rect for ${personId}-${index}:`,{left:rect.left,right:rect.right,top:rect.top,bottom:rect.bottom,width:rect.width,height:rect.height});// Проверяем, что элемент находится в viewport\nif(rect.width===0||rect.height===0){console.warn('Element has zero dimensions');return{x:0,y:0};}// Проверяем, что это правильный элемент\nconst elementId=element.id;const expectedId=`achievement-${personId}-${index}`;if(elementId!==expectedId){console.warn(`Wrong element for tooltip positioning. Expected: ${expectedId}, Got: ${elementId}`);// Попробуем найти правильный элемент\nconst correctElement=document.getElementById(expectedId);if(correctElement){return getAchievementTooltipPosition(correctElement,personId,index);}}// Базовые размеры tooltip\nconst tooltipWidth=250;const tooltipHeight=150;// Начальная позиция - справа от маркера\nlet tooltipX=rect.right+10;let tooltipY=rect.top-tooltipHeight/2;console.log(`Initial tooltip position for ${personId}-${index}:`,{x:tooltipX,y:tooltipY});// Проверяем границы экрана\nconst viewportWidth=window.innerWidth;const viewportHeight=window.innerHeight;// Если tooltip выходит за правую границу, показываем слева от маркера\nif(tooltipX+tooltipWidth>viewportWidth){tooltipX=rect.left-tooltipWidth-10;}// Если tooltip выходит за левую границу, показываем справа с отступом\nif(tooltipX<10){tooltipX=10;}// Если tooltip выходит за верхнюю границу, показываем снизу\nif(tooltipY<10){tooltipY=rect.bottom+10;}// Если tooltip выходит за нижнюю границу, показываем сверху\nif(tooltipY+tooltipHeight>viewportHeight-10){tooltipY=rect.top-tooltipHeight-10;}// Убеждаемся, что tooltip не выходит за границы\ntooltipX=Math.max(10,Math.min(tooltipX,viewportWidth-tooltipWidth-10));tooltipY=Math.max(10,Math.min(tooltipY,viewportHeight-tooltipHeight-10));console.log(`Final tooltip position for ${personId}-${index}:`,{x:tooltipX,y:tooltipY});return{x:tooltipX,y:tooltipY};};// Функция для создания повторяющихся меток веков через каждые 90vh\nconst createRepeatingCenturyLabels=()=>{const viewportHeight=window.innerHeight;const labels=[];// Создаем метки для каждого века\ntimelineElements.forEach(element=>{if(element.type==='century'){const year=element.year;const centerYear=year+50;const centuryNumber=getCenturyNumber(centerYear);const isNegativeCentury=year<0;const romanNumeral=isNegativeCentury?`${toRomanNumeral(Math.abs(centuryNumber))} в. до н.э`:`${toRomanNumeral(centuryNumber)} в.`;const startPos=getAdjustedPosition(year);const nextYear=year+100;const endPos=getAdjustedPosition(nextYear);const centerPos=startPos+(endPos-startPos)/2;// Центр века\n// Создаем метки через каждые 90vh\nfor(let top=0;top<totalHeight;top+=viewportHeight*0.9){labels.push({id:`century-label-${year}-${top}`,year,romanNumeral,left:centerPos,top:top+viewportHeight/2,// Центрируем по вертикали в каждом экране\ntype:'century'});}}else if(element.type==='gap'){var _element$hiddenCentur;const startPos=getAdjustedPosition(element.startYear);const gapWidth=pixelsPerYear*10;// 10 лет = 1/10 века\nconst centerPos=startPos+gapWidth/2;// Центр промежутка\nconst hiddenCenturiesText=((_element$hiddenCentur=element.hiddenCenturies)===null||_element$hiddenCentur===void 0?void 0:_element$hiddenCentur.map(year=>{const centuryNumber=getCenturyNumber(year+50);const isNegativeCentury=year<0;const romanNumeral=isNegativeCentury?`${toRomanNumeral(Math.abs(centuryNumber))} в. до н.э`:`${toRomanNumeral(centuryNumber)} в.`;return romanNumeral;}).join(', '))||'';// Создаем метки для промежутков через каждые 90vh\nfor(let top=0;top<totalHeight;top+=viewportHeight*0.9){labels.push({id:`gap-label-${element.startYear}-${top}`,year:element.startYear,romanNumeral:hiddenCenturiesText,left:centerPos,top:top+viewportHeight/2,type:'gap'});}}});return labels;};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"timeline-content\",id:\"timeline-content\",role:\"presentation\",\"aria-hidden\":\"true\",style:{position:'relative',height:'100%',overflow:'visible',padding:isMobile?'0':'1rem 0 2rem 0'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"timeline-background\",id:\"timeline-background\",role:\"presentation\",\"aria-hidden\":\"true\",style:{position:'absolute',top:'0',left:'0',width:`${getAdjustedTimelineWidth()}px`,height:`${totalHeight+200}px`,pointerEvents:'none',zIndex:1},children:timelineElements.map((element,index)=>{if(element.type==='century'){const year=element.year;// Каждый век занимает ровно 100 лет\nconst nextYear=year+100;const startPos=getAdjustedPosition(year);const endPos=getAdjustedPosition(nextYear);const width=endPos-startPos;// Вычисляем век на основе центра года в столетии\nconst centerYear=year+50;const centuryNumber=getCenturyNumber(centerYear);// Для отрицательных веков добавляем знак минус\nconst isNegativeCentury=year<0;const romanNumeral=isNegativeCentury?`-${toRomanNumeral(Math.abs(centuryNumber))}`:toRomanNumeral(centuryNumber);return/*#__PURE__*/_jsx(\"div\",{className:\"century-background\",id:`century-${year}`,role:\"presentation\",\"aria-label\":`Век ${romanNumeral}`,style:{position:'absolute',left:`${startPos}px`,width:`${width}px`,height:'100%',background:getCenturyColor(year,minYear),opacity:0.3,zIndex:1}},`century-bg-${year}`);}else if(element.type==='gap'){// Промежуток между веками - компактный размер (1/10 века)\nconst gapWidth=pixelsPerYear*10;// 10 лет = 1/10 века\nconst startPos=getAdjustedPosition(element.startYear);return/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',left:`${startPos}px`,width:`${gapWidth}px`,height:'100%',background:'rgba(139, 69, 19, 0.1)',border:'1px dashed rgba(139, 69, 19, 0.3)',zIndex:1}},`gap-${element.startYear}`);}return null;})}),/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:'0',left:'0',width:`${getAdjustedTimelineWidth()}px`,height:`${totalHeight+200}px`,pointerEvents:'none',zIndex:5},children:timelineElements.map(element=>{if(element.type==='century'){return/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',left:`${getAdjustedPosition(element.year)}px`,width:'2px',height:'100%',background:'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',zIndex:5}},`century-line-${element.year}`);}else if(element.type==='gap'){return/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',left:`${getAdjustedPosition(element.startYear)}px`,width:'2px',height:'100%',background:'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',zIndex:5}},`gap-line-${element.startYear}`);}return null;})}),/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:'0',left:'0',width:`${getAdjustedTimelineWidth()}px`,height:`${totalHeight+200}px`,pointerEvents:'none',zIndex:6},children:createRepeatingCenturyLabels().map(label=>/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',left:`${label.left}px`,top:`${label.top}px`,transform:'translate(-50%, -50%)',fontSize:label.type==='century'?'1.5rem':'0.8rem',fontWeight:'bold',color:label.type==='century'?'rgba(244, 228, 193, 0.4)':'rgba(139, 69, 19, 0.5)',textShadow:'1px 1px 2px rgba(0, 0, 0, 0.6)',pointerEvents:'none',fontFamily:label.type==='century'?'serif':'sans-serif',textAlign:'center',maxWidth:'200px',wordWrap:'break-word'},children:label.type==='century'?label.romanNumeral:/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{children:\"\\u0421\\u043A\\u0440\\u044B\\u0442\\u043E:\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.7rem',marginTop:'2px'},children:label.romanNumeral})]})},label.id))}),/*#__PURE__*/_jsx(\"div\",{className:\"category-dividers\",id:\"category-dividers\",role:\"presentation\",\"aria-hidden\":\"true\",style:{position:'absolute',top:'0',left:'0',width:`${getAdjustedTimelineWidth()}px`,height:`${totalHeight+200}px`,pointerEvents:'none',zIndex:8},children:categoryDividers.map(divider=>/*#__PURE__*/_jsx(\"div\",{className:\"category-divider\",id:`divider-${divider.category}`,role:\"separator\",\"aria-label\":`Разделитель группы: ${divider.category}`,style:{position:'absolute',top:`${divider.top}px`,left:'0',width:'100%',height:'10px',background:`linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,opacity:0.6,zIndex:8},children:/*#__PURE__*/_jsx(\"div\",{className:\"category-label\",id:`category-label-${divider.category}`,\"aria-label\":`Группа: ${divider.category}`,style:{position:'absolute',left:'20px',top:'50%',transform:'translateY(-50%)',background:getGroupColor(divider.category),color:'white',padding:'2px 8px',borderRadius:'4px',fontSize:'0.7rem',fontWeight:'bold',whiteSpace:'nowrap',zIndex:9},children:divider.category})},`category-divider-${divider.category}`))}),/*#__PURE__*/_jsx(\"div\",{className:\"person-timeline\",id:\"person-timeline\",role:\"list\",\"aria-label\":\"\\u0412\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043B\\u0438\\u043D\\u0438\\u0438 \\u0438\\u0441\\u0442\\u043E\\u0440\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0445 \\u043B\\u0438\\u0447\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\",style:{position:'relative',width:`${getAdjustedTimelineWidth()}px`,height:`${totalHeight+60}px`,zIndex:10},children:rowPlacement.map((row,rowIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"timeline-row\",id:`timeline-row-${rowIndex}`,role:\"listitem\",\"aria-label\":`Строка ${rowIndex+1} временной линии`,style:{position:'relative',height:row.length===0?'20px':'60px',marginBottom:row.length===0?'0px':'10px'},children:row.map(person=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"birth-year-label\",id:`birth-year-${person.id}`,\"aria-label\":`Год рождения: ${person.birthYear}`,style:{position:'absolute',left:`${getAdjustedPosition(person.birthYear)}px`,top:0,fontSize:'11px',color:'rgba(244, 228, 193, 0.6)',fontStyle:'italic',fontWeight:400,transform:'translateX(-100%) translateY(-10px)'},children:person.birthYear}),person.reignStart&&/*#__PURE__*/_jsxs(\"span\",{className:\"reign-label\",id:`reign-start-${person.id}`,\"aria-label\":`Начало правления: ${person.reignStart}`,style:{position:'absolute',left:`${getAdjustedPosition(person.reignStart)}px`,top:0,fontSize:'11px',color:'#E57373',// Темно-красный\nfontStyle:'italic',fontWeight:'bold',transform:'translateX(-100%) translateY(-22px)'},children:[\"\\uD83D\\uDC51 \",person.reignStart]}),person.reignEnd&&/*#__PURE__*/_jsx(\"span\",{className:\"reign-label\",id:`reign-end-${person.id}`,\"aria-label\":`Конец правления: ${person.reignEnd}`,style:{position:'absolute',left:`${getAdjustedPosition(person.reignEnd)}px`,top:0,fontSize:'11px',color:'#E57373',// Темно-красный\nfontStyle:'italic',fontWeight:'bold',transform:'translateY(-22px)'},children:person.reignEnd}),/*#__PURE__*/_jsx(\"span\",{className:\"death-year-label\",id:`death-year-${person.id}`,\"aria-label\":`Год смерти: ${person.deathYear}`,style:{position:'absolute',left:`${getAdjustedPosition(person.deathYear)}px`,top:0,fontSize:'11px',color:'rgba(244, 228, 193, 0.6)',fontStyle:'italic',fontWeight:400,transform:'translateY(-10px)'},children:person.deathYear}),filters.showAchievements&&[person.achievementYear1,person.achievementYear2,person.achievementYear3].filter(year=>year!==undefined&&year!==null).map((year,index)=>{return/*#__PURE__*/_jsx(\"div\",{className:\"achievement-marker\",id:`achievement-${person.id}-${index}`,role:\"button\",\"aria-label\":`Достижение ${index+1} в ${year} году`,tabIndex:0,style:{position:'absolute',left:`${getAdjustedPosition(year)}px`,top:'-4px',width:'2px',// Возвращаем стандартную ширину\nheight:'15px',// Возвращаем стандартную высоту\nbackgroundColor:getGroupColorDark(getPersonGroup(person)),zIndex:(activeAchievementMarker===null||activeAchievementMarker===void 0?void 0:activeAchievementMarker.personId)===person.id&&(activeAchievementMarker===null||activeAchievementMarker===void 0?void 0:activeAchievementMarker.index)===index?10:3,transform:'translateX(-50%)',cursor:'pointer',transition:'all 0.2s ease'// Убираем псевдоэлементы, так как они не работают в inline стилях\n},onMouseEnter:e=>{if(!isMobile){e.currentTarget.style.backgroundColor=getGroupColor(getPersonGroup(person));e.currentTarget.style.boxShadow=`0 0 3px ${getGroupColor(getPersonGroup(person))}`;// Устанавливаем активный маркер\nsetActiveAchievementMarker({personId:person.id,index});// Скрываем tooltip человека при наведении на маркер достижения\nif((hoveredPerson===null||hoveredPerson===void 0?void 0:hoveredPerson.id)===person.id){handlePersonHover(null,0,0);}// Очищаем предыдущий таймер если он есть\nif(hoverTimerRef.current){clearTimeout(hoverTimerRef.current);}// Сбрасываем текущий tooltip\nsetShowAchievementTooltip(false);setHoveredAchievement(null);// Запускаем таймер для показа tooltip\nhoverTimerRef.current=setTimeout(()=>{// Позиционируем tooltip относительно маркера, а не курсора\nconst position=getAchievementTooltipPosition(e.currentTarget,person.id,index);setAchievementTooltipPosition(position);setHoveredAchievement({person,year:year,index});setShowAchievementTooltip(true);},500);}},onMouseLeave:e=>{if(!isMobile){e.currentTarget.style.backgroundColor=getGroupColorDark(getPersonGroup(person));e.currentTarget.style.boxShadow='none';// Сбрасываем активный маркер\nsetActiveAchievementMarker(null);// Очищаем таймер и скрываем tooltip достижения\nif(hoverTimerRef.current){clearTimeout(hoverTimerRef.current);hoverTimerRef.current=null;}setShowAchievementTooltip(false);setHoveredAchievement(null);// Также скрываем tooltip человека, если он был показан\nif((hoveredPerson===null||hoveredPerson===void 0?void 0:hoveredPerson.id)===person.id){handlePersonHover(null,0,0);}}},onTouchStart:e=>{if(isMobile){e.preventDefault();e.currentTarget.style.backgroundColor=getGroupColor(getPersonGroup(person));e.currentTarget.style.boxShadow=`0 0 3px ${getGroupColor(getPersonGroup(person))}`;// Устанавливаем активный маркер\nsetActiveAchievementMarker({personId:person.id,index});// Скрываем tooltip человека при касании маркера достижения\nif((hoveredPerson===null||hoveredPerson===void 0?void 0:hoveredPerson.id)===person.id){handlePersonHover(null,0,0);}// Сбрасываем текущий tooltip\nsetShowAchievementTooltip(false);setHoveredAchievement(null);// Показываем tooltip сразу на мобильных, позиционируя относительно маркера\nconst position=getAchievementTooltipPosition(e.currentTarget,person.id,index);setAchievementTooltipPosition(position);setHoveredAchievement({person,year:year,index});setShowAchievementTooltip(true);}},onTouchEnd:e=>{if(isMobile){// Убираем визуальные эффекты при отпускании, но НЕ скрываем tooltip\ne.currentTarget.style.backgroundColor=getGroupColorDark(getPersonGroup(person));e.currentTarget.style.boxShadow='none';// Сбрасываем активный маркер\nsetActiveAchievementMarker(null);// НЕ скрываем tooltip достижения - он будет скрыт только по клику вне или по кнопке закрытия\n// Но скрываем tooltip человека, если он был показан\nif((hoveredPerson===null||hoveredPerson===void 0?void 0:hoveredPerson.id)===person.id){handlePersonHover(null,0,0);}}},onKeyDown:e=>{if(e.key==='Enter'||e.key===' '){e.preventDefault();// Устанавливаем активный маркер\nsetActiveAchievementMarker({personId:person.id,index});// Сбрасываем текущий tooltip\nsetShowAchievementTooltip(false);setHoveredAchievement(null);// Показываем tooltip при нажатии Enter или Space, позиционируя относительно маркера\nsetHoveredAchievement({person,year:year,index});const position=getAchievementTooltipPosition(e.currentTarget,person.id,index);setAchievementTooltipPosition(position);setShowAchievementTooltip(true);}},children:/*#__PURE__*/_jsx(\"span\",{style:{position:'absolute',top:'-12px',left:'50%',transform:'translateX(-50%)',fontSize:'8px',color:getGroupColorDark(getPersonGroup(person)),fontWeight:'bold',whiteSpace:'nowrap',backgroundColor:'rgba(44, 24, 16, 0.9)',padding:'1px 3px',borderRadius:'2px',border:`1px solid ${getGroupColorDark(getPersonGroup(person))}`,transition:'all 0.2s ease'},children:year})},index);}),person.reignStart&&person.reignEnd&&/*#__PURE__*/_jsx(\"div\",{className:\"reign-bar\",id:`reign-bar-${person.id}`,role:\"presentation\",\"aria-label\":`Период правления: ${person.reignStart} - ${person.reignEnd}`,style:{position:'absolute',top:'-15px',left:`${getAdjustedPosition(person.reignStart)}px`,width:`${getAdjustedWidth(person.reignStart,person.reignEnd)}px`,height:'65px',backgroundColor:'rgba(211, 47, 47, 0.25)',pointerEvents:'none',borderLeft:'2px solid #D32F2F',borderRight:'2px solid #D32F2F',borderRadius:'3px',zIndex:1}}),/*#__PURE__*/_jsx(\"div\",{className:\"life-bar\",id:`life-bar-${person.id}`,role:\"button\",\"aria-label\":`${person.name}, ${person.birthYear} - ${person.deathYear}, ${person.category}`,tabIndex:0,style:{position:'absolute',top:'10px',left:`${getAdjustedPosition(person.birthYear)}px`,width:`${getAdjustedWidth(person.birthYear,person.deathYear)}px`,height:'40px',background:`linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,borderRadius:'6px',cursor:'pointer',display:'flex',alignItems:'center',padding:'0 12px',color:'white',fontSize:'14px',fontWeight:'bold',minWidth:'60px',boxShadow:'0 2px 8px rgba(0,0,0,0.15)',border:'1.5px solid #a8926a',opacity:(selectedPerson===null||selectedPerson===void 0?void 0:selectedPerson.id)===person.id?0.8:1,zIndex:5,transform:(selectedPerson===null||selectedPerson===void 0?void 0:selectedPerson.id)===person.id?'scale(1.05)':'scale(1)',transition:'all 0.2s ease'},onMouseEnter:e=>{if(!isMobile){e.currentTarget.style.transform='translateY(-3px) scale(1.02)';e.currentTarget.style.boxShadow='0 8px 25px rgba(0, 0, 0, 0.4)';e.currentTarget.style.borderColor='rgba(255, 255, 255, 0.4)';// Скрываем tooltip достижения при наведении на lifebar\nif((hoveredAchievement===null||hoveredAchievement===void 0?void 0:hoveredAchievement.person.id)===person.id){setShowAchievementTooltip(false);setHoveredAchievement(null);setActiveAchievementMarker(null);}// Используем handlePersonHover для правильной обработки\nhandlePersonHover(person,e.clientX,e.clientY);}},onMouseLeave:e=>{if(!isMobile){e.currentTarget.style.transform=(selectedPerson===null||selectedPerson===void 0?void 0:selectedPerson.id)===person.id?'scale(1.05)':'translateY(0) scale(1)';e.currentTarget.style.boxShadow='0 4px 12px rgba(0, 0, 0, 0.3)';e.currentTarget.style.borderColor='rgba(255, 255, 255, 0.2)';// Используем handlePersonHover для правильной обработки с задержкой\nhandlePersonHover(null,0,0);}},onMouseMove:e=>{if(!isMobile&&(hoveredPerson===null||hoveredPerson===void 0?void 0:hoveredPerson.id)===person.id){setMousePosition({x:e.clientX,y:e.clientY});}},onKeyDown:e=>{if(e.key==='Enter'||e.key===' '){e.preventDefault();if(isMobile){setSelectedPerson(person);}else{setHoveredPerson(person);setShowTooltip(true);}}},onTouchStart:e=>{if(isMobile){// Скрываем tooltip достижения при касании lifebar\nif((hoveredAchievement===null||hoveredAchievement===void 0?void 0:hoveredAchievement.person.id)===person.id){setShowAchievementTooltip(false);setHoveredAchievement(null);setActiveAchievementMarker(null);}}},onClick:()=>{if(isMobile){setSelectedPerson(person);}},children:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column',lineHeight:'1.2'},children:/*#__PURE__*/_jsx(\"span\",{children:person.name})})})]},person.id))},rowIndex))})]})});};","map":{"version":3,"names":["React","useMobile","useTimelineDrag","getPosition","getWidth","getCenturyColor","getCenturyNumber","toRomanNumeral","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Timeline","_ref","isLoading","timelineWidth","totalHeight","centuryBoundaries","minYear","pixelsPerYear","LEFT_PADDING_PX","rowPlacement","filters","groupingType","categoryDividers","getGroupColor","getGroupColorDark","getGroupColorMuted","getPersonGroup","hoveredPerson","setHoveredPerson","mousePosition","setMousePosition","showTooltip","setShowTooltip","handlePersonHover","activeAchievementMarker","setActiveAchievementMarker","hoveredAchievement","setHoveredAchievement","achievementTooltipPosition","setAchievementTooltipPosition","showAchievementTooltip","setShowAchievementTooltip","hoverTimerRef","sortedData","selectedPerson","setSelectedPerson","isMobile","_unused","containerWidth","window","innerWidth","getEmptyCenturies","length","Set","Math","min","map","p","birthYear","maxYear","max","deathYear","startCentury","floor","endCentury","ceil","emptyCenturies","centuryStart","centuryEnd","hasDataInCentury","some","person","add","getTimelineElements","hideEmptyCenturies","year","type","visibleCenturies","filter","has","elements","i","currentYear","prevYear","gapStart","gapEnd","hiddenCenturies","push","startYear","endYear","timelineElements","getAdjustedPosition","originalPosition","totalOffset","element","originalGapWidth","newGapWidth","getAdjustedWidth","startPos","endPos","getAdjustedTimelineWidth","totalWidth","getAchievementTooltipPosition","personId","index","getBoundingClientRect","console","warn","x","y","rect","log","left","right","top","bottom","width","height","elementId","id","expectedId","correctElement","document","getElementById","tooltipWidth","tooltipHeight","tooltipX","tooltipY","viewportWidth","viewportHeight","innerHeight","createRepeatingCenturyLabels","labels","forEach","centerYear","centuryNumber","isNegativeCentury","romanNumeral","abs","nextYear","centerPos","_element$hiddenCentur","gapWidth","hiddenCenturiesText","join","children","className","role","style","position","overflow","padding","pointerEvents","zIndex","background","opacity","border","label","transform","fontSize","fontWeight","color","textShadow","fontFamily","textAlign","maxWidth","wordWrap","marginTop","divider","category","borderRadius","whiteSpace","row","rowIndex","marginBottom","fontStyle","reignStart","reignEnd","showAchievements","achievementYear1","achievementYear2","achievementYear3","undefined","tabIndex","backgroundColor","cursor","transition","onMouseEnter","e","currentTarget","boxShadow","current","clearTimeout","setTimeout","onMouseLeave","onTouchStart","preventDefault","onTouchEnd","onKeyDown","key","borderLeft","borderRight","name","display","alignItems","minWidth","borderColor","clientX","clientY","onMouseMove","onClick","flexDirection","lineHeight"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/components/Timeline.tsx"],"sourcesContent":["import React from 'react'\nimport { useMobile } from '../hooks/useMobile'\nimport { useTimelineDrag } from '../hooks/useTimelineDrag'\nimport { Person } from '../types'\nimport { \n  getPosition, \n  getWidth, \n  getCenturyColor, \n  getCenturyNumber, \n  toRomanNumeral\n} from '../utils/timelineUtils'\n\ninterface TimelineProps {\n  isLoading: boolean\n  timelineWidth: number\n  totalHeight: number\n  centuryBoundaries: number[]\n  minYear: number\n  pixelsPerYear: number\n  LEFT_PADDING_PX: number\n  rowPlacement: Person[][]\n  filters: {\n    showAchievements: boolean\n    hideEmptyCenturies: boolean\n  }\n  groupingType: 'category' | 'country' | 'none'\n  categoryDividers: { category: string; top: number }[]\n  getGroupColor: (groupName: string) => string\n  getGroupColorDark: (groupName: string) => string\n  getGroupColorMuted: (groupName: string) => string\n  getPersonGroup: (person: Person) => string\n  hoveredPerson: Person | null\n  setHoveredPerson: (person: Person | null) => void\n  mousePosition: { x: number; y: number }\n  setMousePosition: (position: { x: number; y: number }) => void\n  showTooltip: boolean\n  setShowTooltip: (show: boolean) => void\n  handlePersonHover: (person: Person | null, x: number, y: number) => void\n  activeAchievementMarker: { personId: string; index: number } | null\n  setActiveAchievementMarker: (marker: { personId: string; index: number } | null) => void\n  hoveredAchievement: { person: Person; year: number; index: number } | null\n  setHoveredAchievement: (achievement: { person: Person; year: number; index: number } | null) => void\n  achievementTooltipPosition: { x: number; y: number }\n  setAchievementTooltipPosition: (position: { x: number; y: number }) => void\n  showAchievementTooltip: boolean\n  setShowAchievementTooltip: (show: boolean) => void\n  hoverTimerRef: React.MutableRefObject<NodeJS.Timeout | null>\n  sortedData: Person[]\n  selectedPerson: Person | null\n  setSelectedPerson: (person: Person | null) => void\n}\n\n// Типы для элементов временной линии\ntype TimelineElement = \n  | { type: 'century'; year: number }\n  | { type: 'gap'; startYear: number; endYear: number; hiddenCenturies: number[] }\n\nexport const Timeline: React.FC<TimelineProps> = ({\n  isLoading,\n  timelineWidth,\n  totalHeight,\n  centuryBoundaries,\n  minYear,\n  pixelsPerYear,\n  LEFT_PADDING_PX,\n  rowPlacement,\n  filters,\n  groupingType,\n  categoryDividers,\n  getGroupColor,\n  getGroupColorDark,\n  getGroupColorMuted,\n  getPersonGroup,\n  hoveredPerson,\n  setHoveredPerson,\n  mousePosition,\n  setMousePosition,\n  showTooltip,\n  setShowTooltip,\n  handlePersonHover,\n  activeAchievementMarker,\n  setActiveAchievementMarker,\n  hoveredAchievement,\n  setHoveredAchievement,\n  achievementTooltipPosition,\n  setAchievementTooltipPosition,\n  showAchievementTooltip,\n  setShowAchievementTooltip,\n  hoverTimerRef,\n  sortedData,\n  selectedPerson,\n  setSelectedPerson\n}) => {\n  const isMobile = useMobile()\n\n  // Хук для перетаскивания timeline (используется только в App.tsx)\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const _unused = useTimelineDrag({\n    timelineWidth,\n    containerWidth: window.innerWidth\n  })\n\n  // Функция для определения пустых веков на основе отфильтрованных данных\n  const getEmptyCenturies = () => {\n    if (!sortedData || sortedData.length === 0) return new Set();\n    \n    // Используем отфильтрованные данные для определения диапазона\n    const minYear = Math.min(...sortedData.map(p => p.birthYear));\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear));\n    \n    const startCentury = Math.floor(minYear / 100) * 100;\n    const endCentury = Math.ceil(maxYear / 100) * 100;\n    \n    const emptyCenturies = new Set<number>();\n    \n    for (let centuryStart = startCentury; centuryStart <= endCentury; centuryStart += 100) {\n      const centuryEnd = centuryStart + 99;\n      const hasDataInCentury = sortedData.some(person => \n        (person.birthYear <= centuryEnd && person.deathYear >= centuryStart)\n      );\n      \n      if (!hasDataInCentury) {\n        emptyCenturies.add(centuryStart);\n      }\n    }\n    \n    return emptyCenturies;\n  };\n\n  // Создаем массив для отображения веков с промежутками\n  const getTimelineElements = (): TimelineElement[] => {\n    if (!filters.hideEmptyCenturies) {\n      return centuryBoundaries.map(year => ({ type: 'century', year }));\n    }\n\n    const emptyCenturies = getEmptyCenturies();\n    const visibleCenturies = centuryBoundaries.filter(year => !emptyCenturies.has(year));\n    \n    const elements: TimelineElement[] = [];\n    \n    for (let i = 0; i < visibleCenturies.length; i++) {\n      const currentYear = visibleCenturies[i];\n      \n      // Добавляем промежуток перед веком (кроме первого)\n      if (i > 0) {\n        const prevYear = visibleCenturies[i - 1];\n        const gapStart = prevYear + 100;\n        const gapEnd = currentYear;\n        \n        // Находим все скрытые века в промежутке\n        const hiddenCenturies: number[] = [];\n        for (let year = gapStart; year < gapEnd; year += 100) {\n          if (emptyCenturies.has(year)) {\n            hiddenCenturies.push(year);\n          }\n        }\n        \n        if (hiddenCenturies.length > 0) {\n          elements.push({\n            type: 'gap',\n            startYear: gapStart,\n            endYear: gapEnd,\n            hiddenCenturies\n          });\n        }\n      }\n      \n      // Добавляем сам век\n      elements.push({ type: 'century', year: currentYear });\n    }\n    \n    return elements;\n  };\n\n  const timelineElements = getTimelineElements();\n\n  // Функция для вычисления позиции с учетом промежутков\n  const getAdjustedPosition = (year: number) => {\n    if (!filters.hideEmptyCenturies) {\n      return getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    }\n\n    // Находим позицию года в оригинальной шкале\n    const originalPosition = getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    \n    // Вычисляем смещение, проходя по всем промежуткам до этого года\n    let totalOffset = 0;\n    \n    for (const element of timelineElements) {\n      if (element.type === 'gap') {\n        const gapStart = getPosition(element.startYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const gapEnd = getPosition(element.endYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const originalGapWidth = gapEnd - gapStart;\n        const newGapWidth = pixelsPerYear * 10; // 10 лет\n        \n        // Если год находится после этого промежутка, добавляем смещение\n        if (year >= element.endYear) {\n          totalOffset += (originalGapWidth - newGapWidth);\n        }\n      }\n    }\n    \n    return originalPosition - totalOffset;\n  };\n\n  // Функция для вычисления ширины с учетом промежутков\n  const getAdjustedWidth = (startYear: number, endYear: number) => {\n    if (!filters.hideEmptyCenturies) {\n      return getWidth(startYear, endYear, pixelsPerYear);\n    }\n\n    const startPos = getAdjustedPosition(startYear);\n    const endPos = getAdjustedPosition(endYear);\n    return endPos - startPos;\n  };\n\n  // Функция для вычисления скорректированной ширины таймлайна\n  const getAdjustedTimelineWidth = () => {\n    if (!filters.hideEmptyCenturies) {\n      return timelineWidth;\n    }\n\n    // Вычисляем общую ширину, проходя по всем элементам\n    let totalWidth = 0;\n    \n    for (const element of timelineElements) {\n      if (element.type === 'century') {\n        // Век занимает 100 лет\n        totalWidth += pixelsPerYear * 100;\n      } else if (element.type === 'gap') {\n        // Промежуток занимает 10 лет\n        totalWidth += pixelsPerYear * 10;\n      }\n    }\n\n    return totalWidth + LEFT_PADDING_PX + 50; // Добавляем отступы\n  };\n\n  // Функция для точного позиционирования achievement tooltip\n  const getAchievementTooltipPosition = (element: HTMLElement, personId: string, index: number): { x: number; y: number } => {\n    // Проверяем, что элемент существует и видим\n    if (!element || !element.getBoundingClientRect) {\n      console.warn('Element not found for tooltip positioning');\n      return { x: 0, y: 0 };\n    }\n    \n    const rect = element.getBoundingClientRect();\n    \n    console.log(`Element rect for ${personId}-${index}:`, {\n      left: rect.left,\n      right: rect.right,\n      top: rect.top,\n      bottom: rect.bottom,\n      width: rect.width,\n      height: rect.height\n    });\n    \n    // Проверяем, что элемент находится в viewport\n    if (rect.width === 0 || rect.height === 0) {\n      console.warn('Element has zero dimensions');\n      return { x: 0, y: 0 };\n    }\n    \n    // Проверяем, что это правильный элемент\n    const elementId = element.id;\n    const expectedId = `achievement-${personId}-${index}`;\n    \n    if (elementId !== expectedId) {\n      console.warn(`Wrong element for tooltip positioning. Expected: ${expectedId}, Got: ${elementId}`);\n      // Попробуем найти правильный элемент\n      const correctElement = document.getElementById(expectedId);\n      if (correctElement) {\n        return getAchievementTooltipPosition(correctElement, personId, index);\n      }\n    }\n    \n    // Базовые размеры tooltip\n    const tooltipWidth = 250;\n    const tooltipHeight = 150;\n    \n    // Начальная позиция - справа от маркера\n    let tooltipX = rect.right + 10;\n    let tooltipY = rect.top - tooltipHeight / 2;\n    \n    console.log(`Initial tooltip position for ${personId}-${index}:`, { x: tooltipX, y: tooltipY });\n    \n    // Проверяем границы экрана\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n    \n    // Если tooltip выходит за правую границу, показываем слева от маркера\n    if (tooltipX + tooltipWidth > viewportWidth) {\n      tooltipX = rect.left - tooltipWidth - 10;\n    }\n    \n    // Если tooltip выходит за левую границу, показываем справа с отступом\n    if (tooltipX < 10) {\n      tooltipX = 10;\n    }\n    \n    // Если tooltip выходит за верхнюю границу, показываем снизу\n    if (tooltipY < 10) {\n      tooltipY = rect.bottom + 10;\n    }\n    \n    // Если tooltip выходит за нижнюю границу, показываем сверху\n    if (tooltipY + tooltipHeight > viewportHeight - 10) {\n      tooltipY = rect.top - tooltipHeight - 10;\n    }\n    \n    // Убеждаемся, что tooltip не выходит за границы\n    tooltipX = Math.max(10, Math.min(tooltipX, viewportWidth - tooltipWidth - 10));\n    tooltipY = Math.max(10, Math.min(tooltipY, viewportHeight - tooltipHeight - 10));\n    \n    console.log(`Final tooltip position for ${personId}-${index}:`, { x: tooltipX, y: tooltipY });\n    \n    return { x: tooltipX, y: tooltipY };\n  };\n\n  // Функция для создания повторяющихся меток веков через каждые 90vh\n  const createRepeatingCenturyLabels = () => {\n    const viewportHeight = window.innerHeight;\n    const labels: Array<{\n      id: string;\n      year: number;\n      romanNumeral: string;\n      left: number;\n      top: number;\n      type: 'century' | 'gap';\n    }> = [];\n    \n    // Создаем метки для каждого века\n    timelineElements.forEach((element) => {\n      if (element.type === 'century') {\n        const year = element.year;\n        const centerYear = year + 50;\n        const centuryNumber = getCenturyNumber(centerYear);\n        const isNegativeCentury = year < 0;\n        const romanNumeral = isNegativeCentury ? `${toRomanNumeral(Math.abs(centuryNumber))} в. до н.э` : `${toRomanNumeral(centuryNumber)} в.`;\n        const startPos = getAdjustedPosition(year);\n        const nextYear = year + 100;\n        const endPos = getAdjustedPosition(nextYear);\n        const centerPos = startPos + (endPos - startPos) / 2; // Центр века\n        \n        // Создаем метки через каждые 90vh\n        for (let top = 0; top < totalHeight; top += viewportHeight * 0.9) {\n          labels.push({\n            id: `century-label-${year}-${top}`,\n            year,\n            romanNumeral,\n            left: centerPos,\n            top: top + viewportHeight / 2, // Центрируем по вертикали в каждом экране\n            type: 'century'\n          });\n        }\n      } else if (element.type === 'gap') {\n        const startPos = getAdjustedPosition(element.startYear);\n        const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n        const centerPos = startPos + gapWidth / 2; // Центр промежутка\n        const hiddenCenturiesText = element.hiddenCenturies?.map(year => {\n          const centuryNumber = getCenturyNumber(year + 50);\n          const isNegativeCentury = year < 0;\n          const romanNumeral = isNegativeCentury ? `${toRomanNumeral(Math.abs(centuryNumber))} в. до н.э` : `${toRomanNumeral(centuryNumber)} в.`;\n          return romanNumeral;\n        }).join(', ') || '';\n        \n        // Создаем метки для промежутков через каждые 90vh\n        for (let top = 0; top < totalHeight; top += viewportHeight * 0.9) {\n          labels.push({\n            id: `gap-label-${element.startYear}-${top}`,\n            year: element.startYear,\n            romanNumeral: hiddenCenturiesText,\n            left: centerPos,\n            top: top + viewportHeight / 2,\n            type: 'gap'\n          });\n        }\n      }\n    });\n    \n    return labels;\n  };\n\n  return (\n    <>\n      {/* Временная линия на весь экран */}\n      <div \n        className=\"timeline-content\" \n        id=\"timeline-content\"\n        role=\"presentation\" \n        aria-hidden=\"true\"\n        style={{ \n          position: 'relative', \n          height: '100%',\n          overflow: 'visible',\n          padding: isMobile ? '0' : '1rem 0 2rem 0'\n        }}\n      >\n        {/* Разноцветная заливка веков */}\n        <div \n          className=\"timeline-background\"\n          id=\"timeline-background\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${getAdjustedTimelineWidth()}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 1\n          }}\n        >\n          {timelineElements.map((element, index) => {\n                         if (element.type === 'century') {\n               const year = element.year;\n               // Каждый век занимает ровно 100 лет\n               const nextYear = year + 100\n               const startPos = getAdjustedPosition(year)\n               const endPos = getAdjustedPosition(nextYear)\n               const width = endPos - startPos\n\n              // Вычисляем век на основе центра года в столетии\n              const centerYear = year + 50\n              const centuryNumber = getCenturyNumber(centerYear)\n              // Для отрицательных веков добавляем знак минус\n              const isNegativeCentury = year < 0\n              const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber)\n              \n              return (\n                <div \n                  key={`century-bg-${year}`} \n                  className=\"century-background\"\n                  id={`century-${year}`}\n                  role=\"presentation\"\n                  aria-label={`Век ${romanNumeral}`}\n                  style={{\n                    position: 'absolute',\n                    left: `${startPos}px`,\n                    width: `${width}px`,\n                    height: '100%',\n                    background: getCenturyColor(year, minYear),\n                    opacity: 0.3,\n                    zIndex: 1\n                  }}\n                >\n                </div>\n              )\n                                                   } else if (element.type === 'gap') {\n                // Промежуток между веками - компактный размер (1/10 века)\n                const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n                const startPos = getAdjustedPosition(element.startYear)\n               \n               return (\n                 <div key={`gap-${element.startYear}`} style={{\n                   position: 'absolute',\n                   left: `${startPos}px`,\n                   width: `${gapWidth}px`,\n                   height: '100%',\n                   background: 'rgba(139, 69, 19, 0.1)',\n                   border: '1px dashed rgba(139, 69, 19, 0.3)',\n                   zIndex: 1\n                 }}>\n                </div>\n              )\n            }\n            return null;\n          })}\n        </div>\n\n                 {/* Границы веков и промежутков на всю высоту */}\n         <div style={{\n           position: 'absolute',\n           top: '0',\n           left: '0',\n           width: `${getAdjustedTimelineWidth()}px`,\n           height: `${totalHeight + 200}px`,\n           pointerEvents: 'none',\n           zIndex: 5\n         }}>\n                      {timelineElements.map((element) => {\n              if (element.type === 'century') {\n                return (\n                  <div key={`century-line-${element.year}`} style={{\n                    position: 'absolute',\n                    left: `${getAdjustedPosition(element.year)}px`,\n                    width: '2px',\n                    height: '100%',\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                    zIndex: 5\n                  }} />\n                );\n              } else if (element.type === 'gap') {\n                return (\n                  <div key={`gap-line-${element.startYear}`} style={{\n                    position: 'absolute',\n                    left: `${getAdjustedPosition(element.startYear)}px`,\n                    width: '2px',\n                    height: '100%',\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                    zIndex: 5\n                  }} />\n                );\n              }\n              return null;\n            })}\n         </div>\n\n         {/* Повторяющиеся метки веков через каждые 90vh */}\n         <div style={{\n           position: 'absolute',\n           top: '0',\n           left: '0',\n           width: `${getAdjustedTimelineWidth()}px`,\n           height: `${totalHeight + 200}px`,\n           pointerEvents: 'none',\n           zIndex: 6\n         }}>\n           {createRepeatingCenturyLabels().map((label) => (\n             <div\n               key={label.id}\n               style={{\n                 position: 'absolute',\n                 left: `${label.left}px`,\n                 top: `${label.top}px`,\n                 transform: 'translate(-50%, -50%)',\n                 fontSize: label.type === 'century' ? '1.5rem' : '0.8rem',\n                 fontWeight: 'bold',\n                 color: label.type === 'century' \n                   ? 'rgba(244, 228, 193, 0.4)' \n                   : 'rgba(139, 69, 19, 0.5)',\n                 textShadow: '1px 1px 2px rgba(0, 0, 0, 0.6)',\n                 pointerEvents: 'none',\n                 fontFamily: label.type === 'century' ? 'serif' : 'sans-serif',\n                 textAlign: 'center',\n                 maxWidth: '200px',\n                 wordWrap: 'break-word'\n               }}\n             >\n               {label.type === 'century' ? (\n                 label.romanNumeral\n               ) : (\n                 <>\n                   <div>Скрыто:</div>\n                   <div style={{ fontSize: '0.7rem', marginTop: '2px' }}>\n                     {label.romanNumeral}\n                   </div>\n                 </>\n               )}\n             </div>\n           ))}\n         </div>\n\n         {/* Разделители групп */}\n         <div \n           className=\"category-dividers\"\n           id=\"category-dividers\"\n           role=\"presentation\"\n           aria-hidden=\"true\"\n           style={{\n             position: 'absolute',\n             top: '0',\n             left: '0',\n             width: `${getAdjustedTimelineWidth()}px`,\n             height: `${totalHeight + 200}px`,\n             pointerEvents: 'none',\n             zIndex: 8\n           }}\n         >\n          {categoryDividers.map((divider) => (\n            <div \n              key={`category-divider-${divider.category}`} \n              className=\"category-divider\"\n              id={`divider-${divider.category}`}\n              role=\"separator\"\n              aria-label={`Разделитель группы: ${divider.category}`}\n              style={{\n                position: 'absolute',\n                top: `${divider.top}px`,\n                left: '0',\n                width: '100%',\n                height: '10px',\n                background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n                opacity: 0.6,\n                zIndex: 8\n              }}\n            >\n              <div \n                className=\"category-label\" \n                id={`category-label-${divider.category}`}\n                aria-label={`Группа: ${divider.category}`}\n                style={{\n                  position: 'absolute',\n                  left: '20px',\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: getGroupColor(divider.category),\n                  color: 'white',\n                  padding: '2px 8px',\n                  borderRadius: '4px',\n                  fontSize: '0.7rem',\n                  fontWeight: 'bold',\n                  whiteSpace: 'nowrap',\n                  zIndex: 9\n                }}\n              >\n                {divider.category}\n              </div>\n            </div>\n          ))}\n        </div>\n\n                 {/* Полоски жизни */}\n         <div \n           className=\"person-timeline\"\n           id=\"person-timeline\"\n           role=\"list\"\n           aria-label=\"Временные линии исторических личностей\"\n           style={{ \n             position: 'relative',\n             width: `${getAdjustedTimelineWidth()}px`,\n             height: `${totalHeight + 60}px`,\n             zIndex: 10\n           }}\n         >\n          {rowPlacement.map((row, rowIndex) => (\n            <div \n              key={rowIndex} \n              className=\"timeline-row\"\n              id={`timeline-row-${rowIndex}`}\n              role=\"listitem\"\n              aria-label={`Строка ${rowIndex + 1} временной линии`}\n              style={{\n                position: 'relative',\n                height: row.length === 0 ? '20px' : '60px',\n                marginBottom: row.length === 0 ? '0px' : '10px'\n              }}\n            >\n              {row.map((person) => (\n                <React.Fragment key={person.id}>\n                  {/* Годы жизни и правления над полоской */}\n                  <span \n                    className=\"birth-year-label\"\n                    id={`birth-year-${person.id}`}\n                    aria-label={`Год рождения: ${person.birthYear}`}\n                    style={{\n                      position: 'absolute',\n                      left: `${getAdjustedPosition(person.birthYear)}px`,\n                      top: 0,\n                      fontSize: '11px',\n                      color: 'rgba(244, 228, 193, 0.6)',\n                      fontStyle: 'italic',\n                      fontWeight: 400,\n                      transform: 'translateX(-100%) translateY(-10px)'\n                    }}\n                  >\n                    {person.birthYear}\n                  </span>\n\n                                     {person.reignStart && (\n                     <span \n                       className=\"reign-label\" \n                       id={`reign-start-${person.id}`}\n                       aria-label={`Начало правления: ${person.reignStart}`}\n                       style={{\n                         position: 'absolute',\n                         left: `${getAdjustedPosition(person.reignStart)}px`,\n                         top: 0,\n                         fontSize: '11px',\n                         color: '#E57373', // Темно-красный\n                         fontStyle: 'italic',\n                         fontWeight: 'bold',\n                         transform: 'translateX(-100%) translateY(-22px)'\n                       }}\n                     >\n                       👑 {person.reignStart}\n                     </span>\n                   )}\n\n                                     {person.reignEnd && (\n                     <span \n                       className=\"reign-label\" \n                       id={`reign-end-${person.id}`}\n                       aria-label={`Конец правления: ${person.reignEnd}`}\n                       style={{\n                         position: 'absolute',\n                         left: `${getAdjustedPosition(person.reignEnd)}px`,\n                         top: 0,\n                         fontSize: '11px',\n                         color: '#E57373', // Темно-красный\n                         fontStyle: 'italic',\n                         fontWeight: 'bold',\n                         transform: 'translateY(-22px)'\n                       }}\n                     >\n                       {person.reignEnd}\n                     </span>\n                   )}\n                  \n                                     <span \n                                       className=\"death-year-label\"\n                                       id={`death-year-${person.id}`}\n                                       aria-label={`Год смерти: ${person.deathYear}`}\n                                       style={{\n                                         position: 'absolute',\n                                         left: `${getAdjustedPosition(person.deathYear)}px`,\n                                         top: 0,\n                                         fontSize: '11px',\n                                         color: 'rgba(244, 228, 193, 0.6)',\n                                         fontStyle: 'italic',\n                                         fontWeight: 400,\n                                         transform: 'translateY(-10px)'\n                                       }}\n                                     >\n                                       {person.deathYear}\n                                     </span>\n\n                  {/* Маркеры ключевых достижений */}\n                  {filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3]\n                    .filter(year => year !== undefined && year !== null)\n                    .map((year, index) => {\n                      return (\n                        <div \n                          key={index} \n                          className=\"achievement-marker\"\n                          id={`achievement-${person.id}-${index}`}\n                          role=\"button\"\n                          aria-label={`Достижение ${index + 1} в ${year} году`}\n                          tabIndex={0}\n                          style={{\n                            position: 'absolute',\n                            left: `${getAdjustedPosition(year as number)}px`,\n                            top: '-4px',\n                            width: '2px', // Возвращаем стандартную ширину\n                            height: '15px', // Возвращаем стандартную высоту\n                            backgroundColor: getGroupColorDark(getPersonGroup(person)),\n                            zIndex: activeAchievementMarker?.personId === person.id && activeAchievementMarker?.index === index ? 10 : 3,\n                            transform: 'translateX(-50%)',\n                            cursor: 'pointer',\n                            transition: 'all 0.2s ease',\n                            // Убираем псевдоэлементы, так как они не работают в inline стилях\n                          }}\n                        onMouseEnter={(e) => {\n                          if (!isMobile) {\n                            e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n                            \n                            // Устанавливаем активный маркер\n                            setActiveAchievementMarker({ personId: person.id, index });\n                            \n                            // Скрываем tooltip человека при наведении на маркер достижения\n                            if (hoveredPerson?.id === person.id) {\n                              handlePersonHover(null, 0, 0);\n                            }\n                            \n                            // Очищаем предыдущий таймер если он есть\n                            if (hoverTimerRef.current) {\n                              clearTimeout(hoverTimerRef.current);\n                            }\n                            \n                            // Сбрасываем текущий tooltip\n                            setShowAchievementTooltip(false);\n                            setHoveredAchievement(null);\n                            \n                            // Запускаем таймер для показа tooltip\n                            hoverTimerRef.current = setTimeout(() => {\n                              // Позиционируем tooltip относительно маркера, а не курсора\n                              const position = getAchievementTooltipPosition(e.currentTarget, person.id, index);\n                              setAchievementTooltipPosition(position);\n                              setHoveredAchievement({ person, year: year as number, index });\n                              setShowAchievementTooltip(true);\n                            }, 500);\n                          }\n                        }}\n                        onMouseLeave={(e) => {\n                          if (!isMobile) {\n                            e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = 'none';\n                            \n                            // Сбрасываем активный маркер\n                            setActiveAchievementMarker(null);\n                            \n                            // Очищаем таймер и скрываем tooltip достижения\n                            if (hoverTimerRef.current) {\n                              clearTimeout(hoverTimerRef.current);\n                              hoverTimerRef.current = null;\n                            }\n                            setShowAchievementTooltip(false);\n                            setHoveredAchievement(null);\n                            \n                            // Также скрываем tooltip человека, если он был показан\n                            if (hoveredPerson?.id === person.id) {\n                              handlePersonHover(null, 0, 0);\n                            }\n                          }\n                        }}\n\n                        onTouchStart={(e) => {\n                          if (isMobile) {\n                            e.preventDefault();\n                            e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n                            \n                            // Устанавливаем активный маркер\n                            setActiveAchievementMarker({ personId: person.id, index });\n                            \n                            // Скрываем tooltip человека при касании маркера достижения\n                            if (hoveredPerson?.id === person.id) {\n                              handlePersonHover(null, 0, 0);\n                            }\n                            \n                            // Сбрасываем текущий tooltip\n                            setShowAchievementTooltip(false);\n                            setHoveredAchievement(null);\n                            \n                            // Показываем tooltip сразу на мобильных, позиционируя относительно маркера\n                            const position = getAchievementTooltipPosition(e.currentTarget, person.id, index);\n                            setAchievementTooltipPosition(position);\n                            setHoveredAchievement({ person, year: year as number, index });\n                            setShowAchievementTooltip(true);\n                          }\n                        }}\n                        onTouchEnd={(e) => {\n                          if (isMobile) {\n                            // Убираем визуальные эффекты при отпускании, но НЕ скрываем tooltip\n                            e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = 'none';\n                            \n                            // Сбрасываем активный маркер\n                            setActiveAchievementMarker(null);\n                            \n                            // НЕ скрываем tooltip достижения - он будет скрыт только по клику вне или по кнопке закрытия\n                            // Но скрываем tooltip человека, если он был показан\n                            if (hoveredPerson?.id === person.id) {\n                              handlePersonHover(null, 0, 0);\n                            }\n                          }\n                        }}\n                        onKeyDown={(e) => {\n                          if (e.key === 'Enter' || e.key === ' ') {\n                            e.preventDefault();\n                            // Устанавливаем активный маркер\n                            setActiveAchievementMarker({ personId: person.id, index });\n                            \n                            // Сбрасываем текущий tooltip\n                            setShowAchievementTooltip(false);\n                            setHoveredAchievement(null);\n                            \n                            // Показываем tooltip при нажатии Enter или Space, позиционируя относительно маркера\n                            setHoveredAchievement({ person, year: year as number, index });\n                            const position = getAchievementTooltipPosition(e.currentTarget, person.id, index);\n                            setAchievementTooltipPosition(position);\n                            setShowAchievementTooltip(true);\n                          }\n                        }}\n                        >\n                          <span style={{\n                            position: 'absolute',\n                            top: '-12px',\n                            left: '50%',\n                            transform: 'translateX(-50%)',\n                            fontSize: '8px',\n                            color: getGroupColorDark(getPersonGroup(person)),\n                            fontWeight: 'bold',\n                            whiteSpace: 'nowrap',\n                            backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                            padding: '1px 3px',\n                            borderRadius: '2px',\n                            border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                            transition: 'all 0.2s ease'\n                          }}>\n                            {year}\n                          </span>\n                        </div>\n                      );\n                    })}\n\n                                     {/* полоса правления */}\n                   {person.reignStart && person.reignEnd && (\n                     <div \n                       className=\"reign-bar\"\n                       id={`reign-bar-${person.id}`}\n                       role=\"presentation\"\n                       aria-label={`Период правления: ${person.reignStart} - ${person.reignEnd}`}\n                       style={{\n                         position: 'absolute',\n                         top: '-15px',\n                         left: `${getAdjustedPosition(person.reignStart)}px`,\n                         width: `${getAdjustedWidth(person.reignStart, person.reignEnd)}px`,\n                         height: '65px',\n                         backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                         pointerEvents: 'none',\n                         borderLeft: '2px solid #D32F2F',\n                         borderRight: '2px solid #D32F2F',\n                         borderRadius: '3px',\n                         zIndex: 1\n                       }} \n                     />\n                   )}\n\n                                     <div\n                     className=\"life-bar\"\n                     id={`life-bar-${person.id}`}\n                     role=\"button\"\n                     aria-label={`${person.name}, ${person.birthYear} - ${person.deathYear}, ${person.category}`}\n                     tabIndex={0}\n                     style={{\n                       position: 'absolute',\n                       top: '10px',\n                       left: `${getAdjustedPosition(person.birthYear)}px`,\n                       width: `${getAdjustedWidth(person.birthYear, person.deathYear)}px`,\n                       height: '40px',\n                       background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                       borderRadius: '6px',\n                       cursor: 'pointer',\n                       display: 'flex',\n                       alignItems: 'center',\n                       padding: '0 12px',\n                       color: 'white',\n                       fontSize: '14px',\n                       fontWeight: 'bold',\n                       minWidth: '60px',\n                       boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                       border: '1.5px solid #a8926a',\n                       opacity: selectedPerson?.id === person.id ? 0.8 : 1,\n                       zIndex: 5,\n                       transform: selectedPerson?.id === person.id ? 'scale(1.05)' : 'scale(1)',\n                       transition: 'all 0.2s ease'\n                     }}\n                    onMouseEnter={(e) => {\n                      if (!isMobile) {\n                        e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)'\n                        e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)'\n                        \n                        // Скрываем tooltip достижения при наведении на lifebar\n                        if (hoveredAchievement?.person.id === person.id) {\n                          setShowAchievementTooltip(false);\n                          setHoveredAchievement(null);\n                          setActiveAchievementMarker(null);\n                        }\n                        \n                        // Используем handlePersonHover для правильной обработки\n                        handlePersonHover(person, e.clientX, e.clientY)\n                      }\n                    }}\n                    onMouseLeave={(e) => {\n                      if (!isMobile) {\n                        e.currentTarget.style.transform = selectedPerson?.id === person.id ? 'scale(1.05)' : 'translateY(0) scale(1)'\n                        e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)'\n                        // Используем handlePersonHover для правильной обработки с задержкой\n                        handlePersonHover(null, 0, 0)\n                      }\n                    }}\n                    onMouseMove={(e) => {\n                      if (!isMobile && hoveredPerson?.id === person.id) {\n                        setMousePosition({ x: e.clientX, y: e.clientY })\n                      }\n                    }}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        if (isMobile) {\n                          setSelectedPerson(person);\n                        } else {\n                          setHoveredPerson(person);\n                          setShowTooltip(true);\n                        }\n                      }\n                    }}\n                    onTouchStart={(e) => {\n                      if (isMobile) {\n                        // Скрываем tooltip достижения при касании lifebar\n                        if (hoveredAchievement?.person.id === person.id) {\n                          setShowAchievementTooltip(false);\n                          setHoveredAchievement(null);\n                          setActiveAchievementMarker(null);\n                        }\n                      }\n                    }}\n                    onClick={() => {\n                      if (isMobile) {\n                        setSelectedPerson(person)\n                      }\n                    }}\n                  >\n                    <div style={{ display: 'flex', flexDirection: 'column', lineHeight: '1.2' }}>\n                      <span>{person.name}</span>\n                    </div>\n                  </div>\n                </React.Fragment>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  )\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}