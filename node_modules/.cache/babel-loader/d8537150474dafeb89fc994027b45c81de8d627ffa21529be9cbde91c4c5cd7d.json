{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selecty\\\\Documents\\\\PetProjects\\\\chronoline-frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getPersons, getCategories, getCountries } from './services/api';\nimport { getCategoryColor, getCategoryColorDark, getCategoryColorMuted } from './utils/categoryColors';\nimport './App.css';\n\n// Компонент визуального маркера достижений\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AchievementMarker = ({\n  isActive\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '2px',\n      opacity: isActive ? 1 : 0.5,\n      transition: 'opacity 0.2s ease'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '16px',\n        height: '16px',\n        background: isActive ? '#f4e4c1' : 'rgba(244, 228, 193, 0.3)',\n        border: '1px solid rgba(139, 69, 19, 0.5)',\n        borderRadius: '2px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '8px',\n        color: isActive ? '#2c1810' : 'rgba(44, 24, 16, 0.5)',\n        fontWeight: 'bold'\n      },\n      children: \"25\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '2px',\n        height: '8px',\n        background: isActive ? '#f4e4c1' : 'rgba(244, 228, 193, 0.3)',\n        borderRadius: '1px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n// Компонент выпадающего фильтра\n_c = AchievementMarker;\nconst FilterDropdown = ({\n  title,\n  items,\n  selectedItems,\n  onSelectionChange,\n  getItemColor,\n  icon\n}) => {\n  const isActive = selectedItems.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `filter-btn ${isActive ? 'active' : ''}`,\n      style: {\n        minWidth: '150px',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.5rem'\n      },\n      children: [icon, title, \" \", isActive && `(${selectedItems.length})`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-dropdown-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '0.5rem',\n          borderBottom: '1px solid rgba(139, 69, 19, 0.3)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation();\n            onSelectionChange(items);\n          },\n          style: {\n            padding: '0.25rem 0.5rem',\n            marginRight: '0.5rem',\n            background: '#27ae60',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '0.7rem'\n          },\n          children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation();\n            onSelectionChange([]);\n          },\n          style: {\n            padding: '0.25rem 0.5rem',\n            background: '#e74c3c',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '0.7rem'\n          },\n          children: \"\\u0421\\u043D\\u044F\\u0442\\u044C \\u0432\\u0441\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"filter-checkbox\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedItems.includes(item),\n          onChange: e => {\n            e.stopPropagation();\n            if (e.target.checked) {\n              onSelectionChange([...selectedItems, item]);\n            } else {\n              onSelectionChange(selectedItems.filter(i => i !== item));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: getItemColor ? getItemColor(item) : '#f4e4c1',\n            fontWeight: getItemColor ? 'bold' : 'normal'\n          },\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, item, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n// Компонент переключателя группировки\n_c2 = FilterDropdown;\nconst GroupingToggle = ({\n  groupingType,\n  onGroupingChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grouping-toggle\",\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.3rem',\n      padding: '0.3rem 0.6rem',\n      background: 'rgba(244, 228, 193, 0.1)',\n      borderRadius: '6px',\n      border: '1px solid rgba(139, 69, 19, 0.3)',\n      transition: 'all 0.2s ease'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        fontSize: '0.7rem',\n        color: '#f4e4c1',\n        fontWeight: 'bold'\n      },\n      children: \"\\uD83D\\uDCCA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '0.2rem'\n      },\n      children: [{\n        value: 'category',\n        label: 'Род деятельности',\n        icon: '🎭'\n      }, {\n        value: 'country',\n        label: 'Страны',\n        icon: '🌍'\n      }, {\n        value: 'none',\n        label: 'Нет',\n        icon: '📊'\n      }].map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onGroupingChange(option.value),\n        style: {\n          padding: '0.2rem 0.4rem',\n          background: groupingType === option.value ? '#cd853f' : 'rgba(244, 228, 193, 0.1)',\n          color: groupingType === option.value ? '#2c1810' : '#f4e4c1',\n          border: '1px solid rgba(139, 69, 19, 0.3)',\n          borderRadius: '4px',\n          cursor: 'pointer',\n          fontSize: '0.6rem',\n          fontWeight: groupingType === option.value ? 'bold' : 'normal',\n          transition: 'all 0.2s ease',\n          display: 'flex',\n          alignItems: 'center',\n          gap: '0.2rem',\n          minWidth: 'auto'\n        },\n        onMouseEnter: e => {\n          if (groupingType !== option.value) {\n            e.currentTarget.style.background = 'rgba(205, 133, 63, 0.3)';\n          }\n        },\n        onMouseLeave: e => {\n          if (groupingType !== option.value) {\n            e.currentTarget.style.background = 'rgba(244, 228, 193, 0.1)';\n          }\n        },\n        title: option.label,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: option.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"grouping-label\",\n          children: option.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, option.value, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_c3 = GroupingToggle;\nfunction App() {\n  _s();\n  const [hoveredPerson, setHoveredPerson] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [hoveredAchievement, setHoveredAchievement] = useState(null);\n  const [achievementTooltipPosition, setAchievementTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [showAchievementTooltip, setShowAchievementTooltip] = useState(false);\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [activeAchievementMarker, setActiveAchievementMarker] = useState(null);\n  const hoverTimerRef = useRef(null);\n  const [showFilters, setShowFilters] = useState(false);\n  const [filters, setFilters] = useState(() => {\n    const savedFilters = localStorage.getItem('chronoline-filters');\n    if (savedFilters) {\n      const parsed = JSON.parse(savedFilters);\n      return {\n        categories: parsed.categories || [],\n        countries: parsed.countries || [],\n        timeRange: parsed.timeRange || {\n          start: -800,\n          end: 2000\n        },\n        showAchievements: parsed.showAchievements !== undefined ? parsed.showAchievements : true\n      };\n    }\n    return {\n      categories: [],\n      countries: [],\n      timeRange: {\n        start: -800,\n        end: 2000\n      },\n      showAchievements: true\n    };\n  });\n\n  // Состояние для типа группировки\n  const [groupingType, setGroupingType] = useState(() => {\n    const savedGrouping = localStorage.getItem('chronoline-grouping');\n    return savedGrouping || 'category';\n  });\n\n  // Сохраняем фильтры в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('chronoline-filters', JSON.stringify(filters));\n  }, [filters]);\n\n  // Сохраняем тип группировки в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('chronoline-grouping', groupingType);\n  }, [groupingType]);\n\n  // Очищаем таймер при размонтировании компонента\n  useEffect(() => {\n    return () => {\n      if (hoverTimerRef.current) {\n        clearTimeout(hoverTimerRef.current);\n      }\n    };\n  }, []);\n  const [persons, setPersons] = useState([]);\n  const [allCategories, setAllCategories] = useState([]);\n  const [allCountries, setAllCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Состояние для полей ввода годов\n  const [yearInputs, setYearInputs] = useState({\n    start: filters.timeRange.start.toString(),\n    end: filters.timeRange.end.toString()\n  });\n\n  // Функция для применения фильтра по году\n  const applyYearFilter = (field, value) => {\n    const numValue = parseInt(value) || (field === 'start' ? -800 : 2000);\n    setFilters(prev => ({\n      ...prev,\n      timeRange: {\n        ...prev.timeRange,\n        [field]: numValue\n      }\n    }));\n  };\n\n  // Функция для обработки нажатия Enter\n  const handleYearKeyPress = (field, e) => {\n    if (e.key === 'Enter') {\n      var _e$currentTarget$pare, _e$currentTarget$pare2;\n      applyYearFilter(field, e.currentTarget.value);\n      // Переводим фокус на следующий элемент\n      const inputs = (_e$currentTarget$pare = e.currentTarget.parentElement) === null || _e$currentTarget$pare === void 0 ? void 0 : (_e$currentTarget$pare2 = _e$currentTarget$pare.parentElement) === null || _e$currentTarget$pare2 === void 0 ? void 0 : _e$currentTarget$pare2.querySelectorAll('input');\n      if (inputs) {\n        const currentIndex = Array.from(inputs).indexOf(e.currentTarget);\n        const nextInput = inputs[currentIndex + 1];\n        if (nextInput) {\n          nextInput.focus();\n        }\n      }\n    }\n  };\n\n  // Функция для сброса всех фильтров\n  const resetAllFilters = () => {\n    setFilters({\n      categories: [],\n      countries: [],\n      timeRange: {\n        start: -800,\n        end: 2000\n      },\n      showAchievements: true\n    });\n    setYearInputs({\n      start: '-800',\n      end: '2000'\n    });\n  };\n\n  // Единый useEffect для загрузки и фильтрации данных\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Формируем параметры для запроса\n        const filtersToApply = {};\n        if (filters.categories.length > 0) {\n          filtersToApply.category = filters.categories.join(',');\n        }\n        if (filters.countries.length > 0) {\n          filtersToApply.country = filters.countries.join(',');\n        }\n        filtersToApply.startYear = filters.timeRange.start;\n        filtersToApply.endYear = filters.timeRange.end;\n\n        // Загружаем персон с учетом фильтров\n        const personsData = await getPersons(filtersToApply);\n        setPersons(personsData);\n\n        // Загружаем категории и страны только если они еще не загружены\n        if (allCategories.length === 0 || allCountries.length === 0) {\n          const [categoriesData, countriesData] = await Promise.all([getCategories(), getCountries()]);\n          setAllCategories(categoriesData);\n          setAllCountries(countriesData);\n        }\n      } catch (error) {\n        console.error(\"Ошибка при загрузке данных:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [filters, allCategories.length, allCountries.length]); // Перезагружаем данные при изменении фильтров\n\n  // Функция для получения приоритета категории\n  const getCategoryPriority = category => {\n    // Используем все категории из API, а не только жестко заданные\n    return allCategories.indexOf(category);\n  };\n\n  // Функция для получения цвета группы в зависимости от типа группировки\n  const getGroupColor = groupName => {\n    if (groupingType === 'category') {\n      return getCategoryColor(groupName);\n    } else if (groupingType === 'country') {\n      // Для стран используем другой набор цветов\n      const countryColors = ['#e74c3c', '#3498db', '#2ecc71', '#f39c12', '#9b59b6', '#1abc9c', '#e67e22', '#34495e', '#16a085', '#8e44ad', '#27ae60', '#2980b9', '#f1c40f', '#e74c3c', '#95a5a6'];\n      const index = allCountries.indexOf(groupName);\n      return countryColors[index % countryColors.length];\n    }\n    return '#95a5a6'; // серый цвет по умолчанию\n  };\n\n  // Функция для получения цвета группы (темный вариант)\n  const getGroupColorDark = groupName => {\n    if (groupingType === 'category') {\n      return getCategoryColorDark(groupName);\n    } else if (groupingType === 'country') {\n      // Для стран используем темные варианты цветов\n      const countryColorsDark = ['#c0392b', '#2980b9', '#27ae60', '#d68910', '#8e44ad', '#16a085', '#d35400', '#2c3e50', '#138d75', '#7d3c98', '#229954', '#1f618d', '#d4ac0f', '#c0392b', '#7f8c8d'];\n      const index = allCountries.indexOf(groupName);\n      return countryColorsDark[index % countryColorsDark.length];\n    }\n    return '#7f8c8d'; // темно-серый цвет по умолчанию\n  };\n\n  // Функция для получения цвета группы (приглушенный вариант)\n  const getGroupColorMuted = groupName => {\n    if (groupingType === 'category') {\n      return getCategoryColorMuted(groupName);\n    } else if (groupingType === 'country') {\n      // Для стран используем приглушенные варианты цветов\n      const countryColorsMuted = ['#e74c3c', '#3498db', '#2ecc71', '#f39c12', '#9b59b6', '#1abc9c', '#e67e22', '#34495e', '#16a085', '#8e44ad', '#27ae60', '#2980b9', '#f1c40f', '#e74c3c', '#95a5a6'];\n      const index = allCountries.indexOf(groupName);\n      return countryColorsMuted[index % countryColorsMuted.length];\n    }\n    return '#95a5a6'; // серый цвет по умолчанию\n  };\n\n  // Вспомогательная функция для извлечения первой страны из списка\n  const getFirstCountry = countryString => {\n    const countries = countryString.split('/').map(c => c.trim());\n    return countries[0] || countryString;\n  };\n\n  // Функция для получения значения группы для персонажа\n  const getPersonGroup = person => {\n    if (groupingType === 'category') {\n      return person.category;\n    } else if (groupingType === 'country') {\n      return getFirstCountry(person.country);\n    }\n    return person.category; // по умолчанию\n  };\n\n  // Функция фильтрации данных (теперь данные фильтруются на бэкенде, но сортировка остается)\n  const sortedData = [...persons].sort((a, b) => {\n    if (groupingType === 'category') {\n      // Сначала сортируем по категориям\n      const categoryDiff = getCategoryPriority(a.category) - getCategoryPriority(b.category);\n      if (categoryDiff !== 0) {\n        return categoryDiff;\n      }\n    } else if (groupingType === 'country') {\n      // Сначала сортируем по странам (берем первую страну из списка)\n      const countryDiff = allCountries.indexOf(getFirstCountry(a.country)) - allCountries.indexOf(getFirstCountry(b.country));\n      if (countryDiff !== 0) {\n        return countryDiff;\n      }\n    }\n    // Затем по году рождения\n    return a.birthYear - b.birthYear;\n  });\n\n  // Отслеживаем скролл\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      setIsScrolled(scrollTop > 50);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Вычисляем реальный диапазон лет из отфильтрованных данных\n  const minYear = Math.min(...sortedData.map(p => p.birthYear), filters.timeRange.start);\n  const maxYear = Math.max(...sortedData.map(p => p.deathYear), filters.timeRange.end);\n  const totalYears = maxYear - minYear;\n\n  // Настройки масштаба\n  const pixelsPerYear = 3; // 3 пикселя на год\n  const LEFT_PADDING_PX = 30; // отступ слева, чтобы крайняя левая подпись не упиралась в край\n  const timelineWidth = totalYears * pixelsPerYear + LEFT_PADDING_PX;\n\n  // Функция для вычисления позиции в пикселях\n  const getPosition = year => {\n    return LEFT_PADDING_PX + (year - minYear) * pixelsPerYear;\n  };\n\n  // Функция для вычисления ширины полоски в пикселях\n  const getWidth = (birthYear, deathYear) => {\n    return (deathYear - birthYear) * pixelsPerYear;\n  };\n\n  // Генерируем границы веков\n  const generateCenturyBoundaries = () => {\n    const boundaries = [];\n    const startCentury = Math.floor(minYear / 100) * 100;\n    const endCentury = Math.ceil(maxYear / 100) * 100;\n    for (let year = startCentury; year <= endCentury; year += 100) {\n      // Включаем границу, если она попадает в диапазон данных или является границей века\n      if (year <= maxYear) {\n        boundaries.push(year);\n      }\n    }\n    return boundaries;\n  };\n  const centuryBoundaries = generateCenturyBoundaries();\n\n  // Функция для получения цвета века\n  const getCenturyColor = year => {\n    const colors = ['rgba(255, 107, 107, 0.1)',\n    // Светло-красный\n    'rgba(78, 205, 196, 0.1)',\n    // Светло-голубой\n    'rgba(150, 206, 180, 0.1)',\n    // Светло-зеленый\n    'rgba(255, 234, 167, 0.1)',\n    // Светло-оранжевый\n    'rgba(221, 160, 221, 0.1)',\n    // Светло-фиолетовый\n    'rgba(120, 219, 255, 0.1)',\n    // Светло-бирюзовый\n    'rgba(255, 255, 229, 0.1)',\n    // Светло-желтый\n    'rgba(255, 229, 240, 0.1)' // Светло-розовый\n    ];\n    const centuryIndex = Math.floor((year - minYear) / 100);\n    return colors[centuryIndex % colors.length];\n  };\n\n  // Функция для конвертации в римские цифры\n  const toRomanNumeral = num => {\n    const romanNumerals = [{\n      value: 1000,\n      numeral: 'M'\n    }, {\n      value: 900,\n      numeral: 'CM'\n    }, {\n      value: 500,\n      numeral: 'D'\n    }, {\n      value: 400,\n      numeral: 'CD'\n    }, {\n      value: 100,\n      numeral: 'C'\n    }, {\n      value: 90,\n      numeral: 'XC'\n    }, {\n      value: 50,\n      numeral: 'L'\n    }, {\n      value: 40,\n      numeral: 'XL'\n    }, {\n      value: 10,\n      numeral: 'X'\n    }, {\n      value: 9,\n      numeral: 'IX'\n    }, {\n      value: 5,\n      numeral: 'V'\n    }, {\n      value: 4,\n      numeral: 'IV'\n    }, {\n      value: 1,\n      numeral: 'I'\n    }];\n    let result = '';\n    let remaining = Math.abs(num);\n    for (const {\n      value,\n      numeral\n    } of romanNumerals) {\n      while (remaining >= value) {\n        result += numeral;\n        remaining -= value;\n      }\n    }\n    return num < 0 ? `-${result}` : result;\n  };\n\n  // Функция для получения номера века\n  const getCenturyNumber = year => {\n    if (year < 0) {\n      // Для отрицательных лет: -1 до -100 = 1 век до н.э., -101 до -200 = 2 век до н.э.\n      return Math.floor((Math.abs(year) - 1) / 100) + 1;\n    } else if (year === 0) {\n      // Год 0 не существует в исторической хронологии\n      return 1;\n    } else {\n      // Для положительных лет: 1-100 = 1 век, 101-200 = 2 век и т.д.\n      return Math.floor((year - 1) / 100) + 1;\n    }\n  };\n\n  // Алгоритм размещения полосок на строках с полной группировкой по категориям\n  const calculateRowPlacement = people => {\n    const rows = [];\n    if (groupingType === 'none') {\n      // Без группировки - просто размещаем всех в строки\n      const allRows = [];\n      people.forEach(person => {\n        let placed = false;\n\n        // Проверяем каждую существующую строку\n        for (let rowIndex = 0; rowIndex < allRows.length; rowIndex++) {\n          const row = allRows[rowIndex];\n          let canPlaceInRow = true;\n\n          // Проверяем, не пересекается ли с кем-то в этой строке\n          for (const existingPerson of row) {\n            const BUFFER = 20; // минимальный зазор между персонами\n            if (person.birthYear - BUFFER <= existingPerson.deathYear && person.deathYear + BUFFER >= existingPerson.birthYear) {\n              canPlaceInRow = false;\n              break;\n            }\n          }\n\n          // Если можно разместить в этой строке\n          if (canPlaceInRow) {\n            allRows[rowIndex].push(person);\n            placed = true;\n            break;\n          }\n        }\n\n        // Если не удалось разместить в существующих строках, создаем новую\n        if (!placed) {\n          allRows.push([person]);\n        }\n      });\n      return allRows;\n    }\n\n    // Группировка по категориям или странам\n    const groupField = groupingType === 'category' ? 'category' : 'country';\n    const allGroups = groupingType === 'category' ? allCategories : allCountries;\n    const groups = {};\n\n    // Группируем людей по выбранному полю\n    people.forEach(person => {\n      let groupValue;\n      if (groupField === 'country') {\n        // Для стран берем первую из списка, если есть несколько через \"/\"\n        groupValue = getFirstCountry(person.country);\n      } else {\n        groupValue = person[groupField];\n      }\n      if (!groups[groupValue]) {\n        groups[groupValue] = [];\n      }\n      groups[groupValue].push(person);\n    });\n\n    // Обрабатываем каждую группу в заданном порядке\n    allGroups.forEach(groupValue => {\n      if (groups[groupValue]) {\n        const groupPeople = groups[groupValue];\n        const groupRows = [];\n\n        // Размещаем людей данной группы в отдельные строки\n        groupPeople.forEach(person => {\n          let placed = false;\n\n          // Проверяем каждую существующую строку для этой группы\n          for (let rowIndex = 0; rowIndex < groupRows.length; rowIndex++) {\n            const row = groupRows[rowIndex];\n            let canPlaceInRow = true;\n\n            // Проверяем, не пересекается ли с кем-то в этой строке\n            for (const existingPerson of row) {\n              const BUFFER = 20; // минимальный зазор между персонами\n              if (person.birthYear - BUFFER <= existingPerson.deathYear && person.deathYear + BUFFER >= existingPerson.birthYear) {\n                canPlaceInRow = false;\n                break;\n              }\n            }\n\n            // Если можно разместить в этой строке\n            if (canPlaceInRow) {\n              groupRows[rowIndex].push(person);\n              placed = true;\n              break;\n            }\n          }\n\n          // Если не удалось разместить в существующих строках, создаем новую\n          if (!placed) {\n            groupRows.push([person]);\n          }\n        });\n\n        // Добавляем строки данной группы к общему списку\n        rows.push(...groupRows);\n\n        // Добавляем пустую строку для визуального разделения (кроме последней группы)\n        if (groupValue !== allGroups[allGroups.length - 1]) {\n          rows.push([]);\n        }\n      }\n    });\n    return rows;\n  };\n\n  // Получаем размещение по строкам\n  const rowPlacement = calculateRowPlacement(sortedData);\n\n  // Вычисляем общую высоту с учетом пустых строк\n  const totalHeight = rowPlacement.reduce((height, row) => {\n    return height + (row.length === 0 ? 20 : 70); // 20px для пустых строк, 70px для обычных (60px + 10px margin)\n  }, 0);\n\n  // Функция для создания разделителей категорий\n  // Высота строки и отступ вниз для непустой строки\n  const ROW_HEIGHT = 60;\n  const ROW_MARGIN = 10; // margin-bottom, используется только для непустых строк\n  const EMPTY_ROW_HEIGHT = 20;\n\n  // Подсчитываем абсолютный top каждой строки, чтобы точно позиционировать разделители\n  const rowTops = [];\n  (() => {\n    let acc = 0;\n    rowPlacement.forEach(row => {\n      rowTops.push(acc);\n      if (row.length === 0) {\n        acc += EMPTY_ROW_HEIGHT;\n      } else {\n        acc += ROW_HEIGHT + ROW_MARGIN;\n      }\n    });\n  })();\n  const createCategoryDividers = () => {\n    if (groupingType === 'none') {\n      return []; // Без группировки нет разделителей\n    }\n    const dividers = [];\n    let currentGroup = '';\n    rowPlacement.forEach((row, rowIndex) => {\n      if (row.length > 0) {\n        const firstPersonInRow = row[0];\n        let currentGroupValue;\n        if (groupingType === 'category') {\n          currentGroupValue = firstPersonInRow.category;\n        } else if (groupingType === 'country') {\n          // Для стран берем первую из списка\n          currentGroupValue = getFirstCountry(firstPersonInRow.country);\n        } else {\n          currentGroupValue = firstPersonInRow.category;\n        }\n        if (currentGroupValue !== currentGroup) {\n          if (currentGroup !== '') {\n            // закрываем предыдущую группу\n            dividers.push({\n              category: currentGroup,\n              top: rowTops[rowIndex] - 5\n            });\n          }\n          currentGroup = currentGroupValue;\n        }\n      }\n    });\n\n    // Добавляем разделитель для последней группы\n    if (currentGroup !== '') {\n      dividers.push({\n        category: currentGroup,\n        top: rowTops[rowPlacement.length - 1] - 5\n      });\n    }\n    return dividers;\n  };\n  const categoryDividers = createCategoryDividers();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: `app-header ${isScrolled ? 'scrolled' : ''}`,\n      style: {\n        padding: isScrolled ? '0.5rem 1rem' : '0.75rem 1rem',\n        transition: 'all 0.3s ease'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          gap: '1rem',\n          width: '100%',\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: isScrolled ? '1.5rem' : '1.8rem',\n            margin: 0,\n            transition: 'font-size 0.3s ease',\n            fontWeight: 'bold',\n            color: '#f4e4c1',\n            flexShrink: 0\n          },\n          children: \"Chronoline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '0.5rem',\n            alignItems: 'center',\n            flexWrap: 'wrap',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.3rem',\n              padding: '0.3rem 0.6rem',\n              borderRadius: '6px',\n              background: filters.showAchievements ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.05)',\n              border: `1px solid ${filters.showAchievements ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)'}`,\n              transition: 'all 0.2s ease',\n              cursor: 'pointer'\n            },\n            onClick: () => setFilters(prev => ({\n              ...prev,\n              showAchievements: !prev.showAchievements\n            })),\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"12\",\n              height: \"12\",\n              viewBox: \"0 0 24 24\",\n              fill: \"currentColor\",\n              style: {\n                opacity: filters.showAchievements ? 1 : 0.5\n              },\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                fontSize: '0.7rem',\n                color: '#f4e4c1'\n              },\n              children: \"\\u2B50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GroupingToggle, {\n            groupingType: groupingType,\n            onGroupingChange: setGroupingType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowFilters(!showFilters),\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.3rem',\n              padding: '0.3rem 0.6rem',\n              borderRadius: '6px',\n              background: showFilters ? 'rgba(139, 69, 19, 0.2)' : 'rgba(139, 69, 19, 0.1)',\n              border: `1px solid ${showFilters ? 'rgba(139, 69, 19, 0.4)' : 'rgba(139, 69, 19, 0.2)'}`,\n              color: '#f4e4c1',\n              fontSize: '0.7rem',\n              cursor: 'pointer',\n              transition: 'all 0.2s ease'\n            },\n            children: [\"\\uD83D\\uDD0D\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\\u044B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 833,\n              columnNumber: 15\n            }, this), (filters.categories.length > 0 || filters.countries.length > 0) && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                background: '#e74c3c',\n                color: 'white',\n                borderRadius: '50%',\n                width: '16px',\n                height: '16px',\n                fontSize: '0.6rem',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center'\n              },\n              children: filters.categories.length + filters.countries.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 782,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 9\n      }, this), showFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '0.75rem',\n          padding: '0.75rem',\n          background: 'rgba(44, 24, 16, 0.9)',\n          borderRadius: '8px',\n          border: '1px solid rgba(139, 69, 19, 0.3)',\n          backdropFilter: 'blur(10px)',\n          animation: 'slideDown 0.3s ease'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n            gap: '1rem',\n            alignItems: 'start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontSize: '0.8rem',\n                color: '#f4e4c1',\n                margin: '0 0 0.5rem 0',\n                fontWeight: 'bold'\n              },\n              children: \"\\u0420\\u043E\\u0434 \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 872,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FilterDropdown, {\n              title: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\",\n              items: allCategories,\n              selectedItems: filters.categories,\n              onSelectionChange: categories => setFilters(prev => ({\n                ...prev,\n                categories\n              })),\n              getItemColor: getCategoryColor,\n              icon: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"14\",\n                height: \"14\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 888,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 887,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 880,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 871,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontSize: '0.8rem',\n                color: '#f4e4c1',\n                margin: '0 0 0.5rem 0',\n                fontWeight: 'bold'\n              },\n              children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0430 \\u043F\\u0440\\u043E\\u0438\\u0441\\u0445\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 896,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FilterDropdown, {\n              title: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0441\\u0442\\u0440\\u0430\\u043D\\u044B\",\n              items: allCountries,\n              selectedItems: filters.countries,\n              onSelectionChange: countries => setFilters(prev => ({\n                ...prev,\n                countries\n              })),\n              icon: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"14\",\n                height: \"14\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 911,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 910,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontSize: '0.8rem',\n                color: '#f4e4c1',\n                margin: '0 0 0.5rem 0',\n                fontWeight: 'bold'\n              },\n              children: \"\\u0412\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u043E\\u0439 \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 919,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '0.5rem',\n                alignItems: 'center',\n                flexWrap: 'wrap'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    fontSize: '0.7rem',\n                    display: 'block',\n                    marginBottom: '0.2rem',\n                    color: '#f4e4c1'\n                  },\n                  children: \"\\u041E\\u0442:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 934,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: yearInputs.start,\n                  onChange: e => setYearInputs(prev => ({\n                    ...prev,\n                    start: e.target.value\n                  })),\n                  onBlur: e => applyYearFilter('start', e.target.value),\n                  onKeyPress: e => handleYearKeyPress('start', e),\n                  style: {\n                    width: '80px',\n                    padding: '0.3rem',\n                    border: '1px solid rgba(139, 69, 19, 0.5)',\n                    borderRadius: '4px',\n                    background: 'rgba(44, 24, 16, 0.8)',\n                    color: '#f4e4c1',\n                    fontSize: '0.7rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 937,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 933,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    fontSize: '0.7rem',\n                    display: 'block',\n                    marginBottom: '0.2rem',\n                    color: '#f4e4c1'\n                  },\n                  children: \"\\u0414\\u043E:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 955,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: yearInputs.end,\n                  onChange: e => setYearInputs(prev => ({\n                    ...prev,\n                    end: e.target.value\n                  })),\n                  onBlur: e => applyYearFilter('end', e.target.value),\n                  onKeyPress: e => handleYearKeyPress('end', e),\n                  style: {\n                    width: '80px',\n                    padding: '0.3rem',\n                    border: '1px solid rgba(139, 69, 19, 0.5)',\n                    borderRadius: '4px',\n                    background: 'rgba(44, 24, 16, 0.8)',\n                    color: '#f4e4c1',\n                    fontSize: '0.7rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 958,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 954,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'end'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetAllFilters,\n              style: {\n                padding: '0.4rem 0.8rem',\n                background: 'linear-gradient(135deg, #95a5a6 0%, #7f8c8d 100%)',\n                border: 'none',\n                borderRadius: '4px',\n                color: 'white',\n                fontSize: '0.7rem',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease'\n              },\n              children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u0432\\u0441\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 980,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 979,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1004,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1005,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-container\",\n        style: {\n          position: 'relative',\n          height: 'calc(100vh - 100px)',\n          overflow: 'auto',\n          padding: '1rem 0 2rem 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 1\n          },\n          children: centuryBoundaries.map((year, index) => {\n            const nextYear = centuryBoundaries[index + 1] || year + 100;\n            const startPos = getPosition(year);\n            const endPos = getPosition(nextYear);\n            const width = endPos - startPos;\n\n            // Вычисляем век на основе центра года в столетии\n            const centerYear = year + 50;\n            const centuryNumber = getCenturyNumber(centerYear);\n            // Для отрицательных веков добавляем знак минус\n            const isNegativeCentury = year < 0;\n            const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${startPos}px`,\n                width: `${width}px`,\n                height: '100%',\n                background: getCenturyColor(year),\n                opacity: 0.3,\n                zIndex: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"century-label\",\n                style: {\n                  position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  fontSize: '2rem',\n                  fontWeight: 'bold',\n                  color: 'rgba(244, 228, 193, 0.6)',\n                  textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n                  pointerEvents: 'none',\n                  zIndex: 2,\n                  fontFamily: 'serif'\n                },\n                children: romanNumeral\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1050,\n                columnNumber: 19\n              }, this)\n            }, `century-bg-${year}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 5\n          },\n          children: centuryBoundaries.map(year => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              left: `${getPosition(year)}px`,\n              width: '2px',\n              height: '100%',\n              background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n              zIndex: 5\n            }\n          }, `century-line-${year}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1071,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 8\n          },\n          children: categoryDividers.map(divider => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: `${divider.top}px`,\n              left: '0',\n              width: '100%',\n              height: '10px',\n              background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n              opacity: 0.6,\n              zIndex: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-label\",\n              style: {\n                position: 'absolute',\n                left: '20px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                background: getGroupColor(divider.category),\n                color: 'white',\n                padding: '2px 8px',\n                borderRadius: '4px',\n                fontSize: '0.7rem',\n                fontWeight: 'bold',\n                whiteSpace: 'nowrap',\n                zIndex: 9\n              },\n              children: divider.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1113,\n              columnNumber: 17\n            }, this)\n          }, `category-divider-${divider.category}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1093,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 60}px`,\n            zIndex: 10\n          },\n          children: rowPlacement.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              height: row.length === 0 ? '20px' : '60px',\n              marginBottom: row.length === 0 ? '0px' : '10px'\n            },\n            children: row.map(person => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: 'absolute',\n                  left: `${getPosition(person.birthYear)}px`,\n                  top: 0,\n                  fontSize: '11px',\n                  color: 'rgba(244, 228, 193, 0.6)',\n                  fontStyle: 'italic',\n                  fontWeight: 400,\n                  transform: 'translateX(-100%) translateY(-10px)'\n                },\n                children: person.birthYear\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1149,\n                columnNumber: 21\n              }, this), person.reignStart && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"reign-label\",\n                style: {\n                  position: 'absolute',\n                  left: `${getPosition(person.reignStart)}px`,\n                  top: 0,\n                  fontSize: '11px',\n                  color: '#E57373',\n                  // Темно-красный\n                  fontStyle: 'italic',\n                  fontWeight: 'bold',\n                  transform: 'translateX(-100%) translateY(-22px)'\n                },\n                children: [\"\\uD83D\\uDC51 \", person.reignStart]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1161,\n                columnNumber: 23\n              }, this), person.reignEnd && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"reign-label\",\n                style: {\n                  position: 'absolute',\n                  left: `${getPosition(person.reignEnd)}px`,\n                  top: 0,\n                  fontSize: '11px',\n                  color: '#E57373',\n                  // Темно-красный\n                  fontStyle: 'italic',\n                  fontWeight: 'bold',\n                  transform: 'translateY(-22px)'\n                },\n                children: person.reignEnd\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1174,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: 'absolute',\n                  left: `${getPosition(person.deathYear)}px`,\n                  top: 0,\n                  fontSize: '11px',\n                  color: 'rgba(244, 228, 193, 0.6)',\n                  fontStyle: 'italic',\n                  fontWeight: 400,\n                  transform: 'translateY(-10px)'\n                },\n                children: person.deathYear\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1186,\n                columnNumber: 21\n              }, this), filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3].filter(year => year !== undefined && year !== null).map((year, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'absolute',\n                    left: `${getPosition(year)}px`,\n                    top: '-4px',\n                    width: '2px',\n                    height: '15px',\n                    backgroundColor: getCategoryColorDark(person.category),\n                    zIndex: (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.personId) === person.id && (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.index) === index ? 10 : 3,\n                    transform: 'translateX(-50%)',\n                    cursor: 'pointer',\n                    transition: 'all 0.2s ease'\n                  },\n                  onMouseEnter: e => {\n                    e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n                    // Находим span внутри и обновляем его стили\n                    const span = e.currentTarget.querySelector('span');\n                    if (span) {\n                      span.style.backgroundColor = 'rgba(44, 24, 16, 0.95)';\n                      span.style.borderColor = getGroupColor(getPersonGroup(person));\n                      span.style.color = getGroupColor(getPersonGroup(person));\n                      span.style.fontSize = '9px';\n                      span.style.padding = '2px 4px';\n                      span.style.borderRadius = '3px';\n                    }\n\n                    // Устанавливаем активный маркер\n                    setActiveAchievementMarker({\n                      personId: person.id,\n                      index\n                    });\n\n                    // Очищаем предыдущий таймер если он есть\n                    if (hoverTimerRef.current) {\n                      clearTimeout(hoverTimerRef.current);\n                    }\n\n                    // Запускаем таймер для показа tooltip\n                    hoverTimerRef.current = setTimeout(() => {\n                      setHoveredAchievement({\n                        person,\n                        year: year,\n                        index\n                      });\n                      setAchievementTooltipPosition({\n                        x: e.clientX,\n                        y: e.clientY\n                      });\n                      setShowAchievementTooltip(true);\n                    }, 500);\n                  },\n                  onMouseLeave: e => {\n                    e.currentTarget.style.backgroundColor = getCategoryColorDark(person.category);\n                    e.currentTarget.style.boxShadow = 'none';\n                    // Возвращаем стили span к исходным\n                    const span = e.currentTarget.querySelector('span');\n                    if (span) {\n                      span.style.backgroundColor = 'rgba(44, 24, 16, 0.9)';\n                      span.style.borderColor = getGroupColorDark(getPersonGroup(person));\n                      span.style.color = getGroupColorDark(getPersonGroup(person));\n                      span.style.fontSize = '8px';\n                      span.style.padding = '1px 3px';\n                      span.style.borderRadius = '2px';\n                    }\n\n                    // Сбрасываем активный маркер\n                    setActiveAchievementMarker(null);\n\n                    // Очищаем таймер и скрываем tooltip\n                    if (hoverTimerRef.current) {\n                      clearTimeout(hoverTimerRef.current);\n                      hoverTimerRef.current = null;\n                    }\n                    setShowAchievementTooltip(false);\n                    setHoveredAchievement(null);\n                  },\n                  onMouseMove: e => {\n                    setAchievementTooltipPosition({\n                      x: e.clientX,\n                      y: e.clientY\n                    });\n                  },\n                  onMouseOut: e => {\n                    // Дополнительная проверка на случай, если onMouseLeave не сработал\n                    if (!e.currentTarget.contains(e.relatedTarget)) {\n                      setActiveAchievementMarker(null);\n                      if (hoverTimerRef.current) {\n                        clearTimeout(hoverTimerRef.current);\n                        hoverTimerRef.current = null;\n                      }\n                      setShowAchievementTooltip(false);\n                      setHoveredAchievement(null);\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      position: 'absolute',\n                      top: '-12px',\n                      left: '50%',\n                      transform: 'translateX(-50%)',\n                      fontSize: '8px',\n                      color: getGroupColorDark(getPersonGroup(person)),\n                      fontWeight: 'bold',\n                      whiteSpace: 'nowrap',\n                      backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                      padding: '1px 3px',\n                      borderRadius: '2px',\n                      border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                      transition: 'all 0.2s ease'\n                    },\n                    children: year\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1284,\n                    columnNumber: 29\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1202,\n                  columnNumber: 27\n                }, this);\n              }), person.reignStart && person.reignEnd && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  top: '-15px',\n                  left: `${getPosition(person.reignStart)}px`,\n                  width: `${getWidth(person.reignStart, person.reignEnd)}px`,\n                  height: '65px',\n                  backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                  pointerEvents: 'none',\n                  borderLeft: '2px solid #D32F2F',\n                  borderRight: '2px solid #D32F2F',\n                  borderRadius: '3px',\n                  zIndex: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1307,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"life-bar\",\n                style: {\n                  position: 'absolute',\n                  top: '10px',\n                  left: `${getPosition(person.birthYear)}px`,\n                  width: `${getWidth(person.birthYear, person.deathYear)}px`,\n                  height: '40px',\n                  background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  padding: '0 12px',\n                  color: 'white',\n                  fontSize: '14px',\n                  fontWeight: 'bold',\n                  minWidth: '60px',\n                  boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                  border: '1.5px solid #a8926a',\n                  opacity: 1,\n                  zIndex: 5\n                },\n                onMouseEnter: e => {\n                  e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)';\n                  e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)';\n                  e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n                  setHoveredPerson(person);\n                  setMousePosition({\n                    x: e.clientX,\n                    y: e.clientY\n                  });\n                  setTimeout(() => setShowTooltip(true), 300);\n                },\n                onMouseLeave: e => {\n                  e.currentTarget.style.transform = 'translateY(0) scale(1)';\n                  e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)';\n                  e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)';\n                  setHoveredPerson(null);\n                  setShowTooltip(false);\n                },\n                onMouseMove: e => {\n                  setMousePosition({\n                    x: e.clientX,\n                    y: e.clientY\n                  });\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    lineHeight: '1.2'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: person.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1365,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1364,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1322,\n                columnNumber: 21\n              }, this)]\n            }, person.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1147,\n              columnNumber: 19\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1141,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 7\n    }, this), hoveredPerson && showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        position: 'fixed',\n        left: `${mousePosition.x + 15}px`,\n        top: `${mousePosition.y - 10}px`,\n        padding: '1rem',\n        zIndex: 1000,\n        maxWidth: '300px',\n        minWidth: '250px',\n        color: '#f4e4c1',\n        pointerEvents: 'none',\n        opacity: 0,\n        transform: 'translateY(10px) scale(0.95)',\n        animation: 'tooltipFadeIn 0.2s ease-out forwards'\n      },\n      children: [hoveredPerson.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '0.75rem',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: hoveredPerson.imageUrl,\n          alt: hoveredPerson.name,\n          style: {\n            width: '80px',\n            height: '80px',\n            borderRadius: '50%',\n            objectFit: 'cover',\n            border: `2px solid ${getGroupColor(getPersonGroup(hoveredPerson))}`,\n            boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)'\n          },\n          onError: e => {\n            // Скрываем изображение если оно не загрузилось\n            e.currentTarget.style.display = 'none';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1398,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1394,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: '0 0 0.5rem 0',\n          color: getGroupColor(getPersonGroup(hoveredPerson)),\n          fontSize: '1.1rem',\n          fontWeight: 'bold'\n        },\n        children: hoveredPerson.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1417,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.85rem',\n          lineHeight: '1.4'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0',\n            fontWeight: 'bold'\n          },\n          children: [hoveredPerson.birthYear, \" - \", hoveredPerson.deathYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: getCategoryColor(hoveredPerson.category),\n              fontWeight: 'bold'\n            },\n            children: hoveredPerson.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1431,\n            columnNumber: 15\n          }, this), \" \\u2022 \", hoveredPerson.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1430,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.5rem 0',\n            fontStyle: 'italic',\n            opacity: 0.8\n          },\n          children: hoveredPerson.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1435,\n          columnNumber: 13\n        }, this), filters.showAchievements && [hoveredPerson.achievementYear1, hoveredPerson.achievementYear2, hoveredPerson.achievementYear3].filter(year => year !== undefined && year !== null).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              fontSize: '0.8rem',\n              color: getGroupColor(getPersonGroup(hoveredPerson))\n            },\n            children: \"\\uD83C\\uDFAF \\u041A\\u043B\\u044E\\u0447\\u0435\\u0432\\u044B\\u0435 \\u0434\\u043E\\u0441\\u0442\\u0438\\u0436\\u0435\\u043D\\u0438\\u044F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1443,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '0.25rem 0 0 0',\n              fontSize: '0.8rem'\n            },\n            children: [hoveredPerson.achievementYear1, hoveredPerson.achievementYear2, hoveredPerson.achievementYear3].filter(year => year !== undefined && year !== null).map((year, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '0.1rem',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: getGroupColor(getPersonGroup(hoveredPerson)),\n                  fontWeight: 'bold',\n                  fontSize: '0.75rem'\n                },\n                children: year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1459,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '0.75rem'\n                },\n                children: hoveredPerson.achievements[index] || 'Ключевое достижение'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1466,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1453,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1446,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1442,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1426,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1378,\n      columnNumber: 9\n    }, this), hoveredAchievement && showAchievementTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"achievement-tooltip\",\n      style: {\n        position: 'fixed',\n        left: `${achievementTooltipPosition.x + 15}px`,\n        top: `${achievementTooltipPosition.y - 10}px`,\n        padding: '0.75rem',\n        zIndex: 1001,\n        maxWidth: '250px',\n        minWidth: '200px',\n        color: '#f4e4c1',\n        pointerEvents: 'none',\n        opacity: 0,\n        transform: 'translateY(10px) scale(0.95)',\n        animation: 'tooltipFadeIn 0.2s ease-out forwards',\n        backgroundColor: 'rgba(44, 24, 16, 0.95)',\n        borderRadius: '6px',\n        border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.85rem',\n          lineHeight: '1.4'\n        },\n        children: [hoveredAchievement.person.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '0.5rem',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: hoveredAchievement.person.imageUrl,\n            alt: hoveredAchievement.person.name,\n            style: {\n              width: '50px',\n              height: '50px',\n              borderRadius: '50%',\n              objectFit: 'cover',\n              border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\n              boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)'\n            },\n            onError: e => {\n              // Скрываем изображение если оно не загрузилось\n              e.currentTarget.style.display = 'none';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1507,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1503,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: '0 0 0.5rem 0',\n            color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\n            fontSize: '1rem',\n            fontWeight: 'bold'\n          },\n          children: hoveredAchievement.person.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1526,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0',\n            fontWeight: 'bold',\n            color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\n            fontSize: '0.9rem'\n          },\n          children: [\"\\uD83C\\uDFAF \", hoveredAchievement.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1535,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0',\n            fontSize: '0.8rem',\n            fontStyle: 'italic'\n          },\n          children: hoveredAchievement.person.achievements[hoveredAchievement.index] || 'Ключевое достижение'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1544,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1500,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1482,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 752,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"r9gA0E1I6v8s7/kIUjX1GbadiEg=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AchievementMarker\");\n$RefreshReg$(_c2, \"FilterDropdown\");\n$RefreshReg$(_c3, \"GroupingToggle\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getPersons","getCategories","getCountries","getCategoryColor","getCategoryColorDark","getCategoryColorMuted","jsxDEV","_jsxDEV","AchievementMarker","isActive","style","display","flexDirection","alignItems","gap","opacity","transition","children","width","height","background","border","borderRadius","justifyContent","fontSize","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","FilterDropdown","title","items","selectedItems","onSelectionChange","getItemColor","icon","length","className","minWidth","padding","borderBottom","onClick","e","stopPropagation","marginRight","cursor","map","item","type","checked","includes","onChange","target","filter","i","_c2","GroupingToggle","groupingType","onGroupingChange","value","label","option","onMouseEnter","currentTarget","onMouseLeave","_c3","App","_s","hoveredPerson","setHoveredPerson","mousePosition","setMousePosition","x","y","showTooltip","setShowTooltip","hoveredAchievement","setHoveredAchievement","achievementTooltipPosition","setAchievementTooltipPosition","showAchievementTooltip","setShowAchievementTooltip","isScrolled","setIsScrolled","activeAchievementMarker","setActiveAchievementMarker","hoverTimerRef","showFilters","setShowFilters","filters","setFilters","savedFilters","localStorage","getItem","parsed","JSON","parse","categories","countries","timeRange","start","end","showAchievements","undefined","setGroupingType","savedGrouping","setItem","stringify","current","clearTimeout","persons","setPersons","allCategories","setAllCategories","allCountries","setAllCountries","isLoading","setIsLoading","yearInputs","setYearInputs","toString","applyYearFilter","field","numValue","parseInt","prev","handleYearKeyPress","key","_e$currentTarget$pare","_e$currentTarget$pare2","inputs","parentElement","querySelectorAll","currentIndex","Array","from","indexOf","nextInput","focus","resetAllFilters","fetchData","filtersToApply","category","join","country","startYear","endYear","personsData","categoriesData","countriesData","Promise","all","error","console","getCategoryPriority","getGroupColor","groupName","countryColors","index","getGroupColorDark","countryColorsDark","getGroupColorMuted","countryColorsMuted","getFirstCountry","countryString","split","c","trim","getPersonGroup","person","sortedData","sort","a","b","categoryDiff","countryDiff","birthYear","handleScroll","scrollTop","window","pageYOffset","document","documentElement","addEventListener","removeEventListener","minYear","Math","min","p","maxYear","max","deathYear","totalYears","pixelsPerYear","LEFT_PADDING_PX","timelineWidth","getPosition","year","getWidth","generateCenturyBoundaries","boundaries","startCentury","floor","endCentury","ceil","push","centuryBoundaries","getCenturyColor","colors","centuryIndex","toRomanNumeral","num","romanNumerals","numeral","result","remaining","abs","getCenturyNumber","calculateRowPlacement","people","rows","allRows","forEach","placed","rowIndex","row","canPlaceInRow","existingPerson","BUFFER","groupField","allGroups","groups","groupValue","groupPeople","groupRows","rowPlacement","totalHeight","reduce","ROW_HEIGHT","ROW_MARGIN","EMPTY_ROW_HEIGHT","rowTops","acc","createCategoryDividers","dividers","currentGroup","firstPersonInRow","currentGroupValue","top","categoryDividers","flexWrap","margin","flexShrink","viewBox","fill","d","marginTop","backdropFilter","animation","gridTemplateColumns","marginBottom","onBlur","onKeyPress","position","overflow","left","pointerEvents","zIndex","nextYear","startPos","endPos","centerYear","centuryNumber","isNegativeCentury","romanNumeral","transform","textShadow","fontFamily","divider","whiteSpace","Fragment","fontStyle","reignStart","reignEnd","achievementYear1","achievementYear2","achievementYear3","backgroundColor","personId","id","boxShadow","span","querySelector","borderColor","setTimeout","clientX","clientY","onMouseMove","onMouseOut","contains","relatedTarget","borderLeft","borderRight","lineHeight","name","maxWidth","imageUrl","textAlign","src","alt","objectFit","onError","description","achievements","_c4","$RefreshReg$"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Person } from './types'\nimport { getPersons, getCategories, getCountries } from './services/api'\nimport { getCategoryColor, getCategoryColorDark, getCategoryColorMuted } from './utils/categoryColors'\nimport './App.css'\n\n// Компонент визуального маркера достижений\nconst AchievementMarker = ({ isActive }: { isActive: boolean }) => {\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '2px',\n      opacity: isActive ? 1 : 0.5,\n      transition: 'opacity 0.2s ease'\n    }}>\n      {/* Квадрат с годом */}\n      <div style={{\n        width: '16px',\n        height: '16px',\n        background: isActive ? '#f4e4c1' : 'rgba(244, 228, 193, 0.3)',\n        border: '1px solid rgba(139, 69, 19, 0.5)',\n        borderRadius: '2px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '8px',\n        color: isActive ? '#2c1810' : 'rgba(44, 24, 16, 0.5)',\n        fontWeight: 'bold'\n      }}>\n        25\n      </div>\n      {/* Палочка */}\n      <div style={{\n        width: '2px',\n        height: '8px',\n        background: isActive ? '#f4e4c1' : 'rgba(244, 228, 193, 0.3)',\n        borderRadius: '1px'\n      }} />\n    </div>\n  )\n}\n\n// Компонент выпадающего фильтра\nconst FilterDropdown = ({ \n  title, \n  items, \n  selectedItems, \n  onSelectionChange, \n  getItemColor,\n  icon\n}: {\n  title: string\n  items: string[]\n  selectedItems: string[]\n  onSelectionChange: (items: string[]) => void\n  getItemColor?: (item: string) => string\n  icon?: React.ReactNode\n}) => {\n  const isActive = selectedItems.length > 0\n  \n  return (\n    <div className=\"filter-dropdown\">\n      <button \n        className={`filter-btn ${isActive ? 'active' : ''}`}\n        style={{ minWidth: '150px', display: 'flex', alignItems: 'center', gap: '0.5rem' }}\n      >\n        {icon}\n        {title} {isActive && `(${selectedItems.length})`}\n      </button>\n      <div className=\"filter-dropdown-content\">\n        <div style={{ padding: '0.5rem', borderBottom: '1px solid rgba(139, 69, 19, 0.3)' }}>\n          <button\n            onClick={(e) => {\n              e.stopPropagation()\n              onSelectionChange(items)\n            }}\n            style={{\n              padding: '0.25rem 0.5rem',\n              marginRight: '0.5rem',\n              background: '#27ae60',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '0.7rem'\n            }}\n          >\n            Выбрать все\n          </button>\n          <button\n            onClick={(e) => {\n              e.stopPropagation()\n              onSelectionChange([])\n            }}\n            style={{\n              padding: '0.25rem 0.5rem',\n              background: '#e74c3c',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '0.7rem'\n            }}\n          >\n            Снять все\n          </button>\n        </div>\n        {items.map(item => (\n          <label key={item} className=\"filter-checkbox\" onClick={(e) => e.stopPropagation()}>\n            <input\n              type=\"checkbox\"\n              checked={selectedItems.includes(item)}\n              onChange={(e) => {\n                e.stopPropagation()\n                if (e.target.checked) {\n                  onSelectionChange([...selectedItems, item])\n                } else {\n                  onSelectionChange(selectedItems.filter(i => i !== item))\n                }\n              }}\n            />\n            <span style={{ \n              color: getItemColor ? getItemColor(item) : '#f4e4c1',\n              fontWeight: getItemColor ? 'bold' : 'normal'\n            }}>\n              {item}\n            </span>\n          </label>\n        ))}\n      </div>\n    </div>\n  )\n}\n\n// Компонент переключателя группировки\nconst GroupingToggle = ({ \n  groupingType, \n  onGroupingChange \n}: {\n  groupingType: 'category' | 'country' | 'none'\n  onGroupingChange: (type: 'category' | 'country' | 'none') => void\n}) => {\n  return (\n    <div className=\"grouping-toggle\" style={{\n      display: 'flex',\n      alignItems: 'center',\n      gap: '0.3rem',\n      padding: '0.3rem 0.6rem',\n      background: 'rgba(244, 228, 193, 0.1)',\n      borderRadius: '6px',\n      border: '1px solid rgba(139, 69, 19, 0.3)',\n      transition: 'all 0.2s ease'\n    }}>\n      <span style={{ \n        fontSize: '0.7rem', \n        color: '#f4e4c1',\n        fontWeight: 'bold'\n      }}>\n        📊\n      </span>\n      <div style={{ display: 'flex', gap: '0.2rem' }}>\n        {[\n          { value: 'category' as const, label: 'Род деятельности', icon: '🎭' },\n          { value: 'country' as const, label: 'Страны', icon: '🌍' },\n          { value: 'none' as const, label: 'Нет', icon: '📊' }\n        ].map((option) => (\n          <button\n            key={option.value}\n            onClick={() => onGroupingChange(option.value)}\n            style={{\n              padding: '0.2rem 0.4rem',\n              background: groupingType === option.value ? '#cd853f' : 'rgba(244, 228, 193, 0.1)',\n              color: groupingType === option.value ? '#2c1810' : '#f4e4c1',\n              border: '1px solid rgba(139, 69, 19, 0.3)',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '0.6rem',\n              fontWeight: groupingType === option.value ? 'bold' : 'normal',\n              transition: 'all 0.2s ease',\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.2rem',\n              minWidth: 'auto'\n            }}\n            onMouseEnter={(e) => {\n              if (groupingType !== option.value) {\n                e.currentTarget.style.background = 'rgba(205, 133, 63, 0.3)';\n              }\n            }}\n            onMouseLeave={(e) => {\n              if (groupingType !== option.value) {\n                e.currentTarget.style.background = 'rgba(244, 228, 193, 0.1)';\n              }\n            }}\n            title={option.label}\n          >\n            <span>{option.icon}</span>\n            <span className=\"grouping-label\">{option.label}</span>\n          </button>\n        ))}\n      </div>\n    </div>\n  )\n}\n\n\nfunction App() {\n\n  const [hoveredPerson, setHoveredPerson] = useState<Person | null>(null)\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 })\n  const [showTooltip, setShowTooltip] = useState(false)\n  const [hoveredAchievement, setHoveredAchievement] = useState<{ person: Person; year: number; index: number } | null>(null)\n  const [achievementTooltipPosition, setAchievementTooltipPosition] = useState({ x: 0, y: 0 })\n  const [showAchievementTooltip, setShowAchievementTooltip] = useState(false)\n  const [isScrolled, setIsScrolled] = useState(false)\n  const [activeAchievementMarker, setActiveAchievementMarker] = useState<{ personId: string; index: number } | null>(null)\n  const hoverTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const [showFilters, setShowFilters] = useState(false)\n  const [filters, setFilters] = useState(() => {\n    const savedFilters = localStorage.getItem('chronoline-filters');\n    if (savedFilters) {\n      const parsed = JSON.parse(savedFilters);\n      return {\n        categories: parsed.categories || [],\n        countries: parsed.countries || [],\n        timeRange: parsed.timeRange || { start: -800, end: 2000 },\n        showAchievements: parsed.showAchievements !== undefined ? parsed.showAchievements : true\n      };\n    }\n    return {\n      categories: [] as string[],\n      countries: [] as string[],\n      timeRange: { start: -800, end: 2000 },\n      showAchievements: true\n    };\n  })\n\n  // Состояние для типа группировки\n  const [groupingType, setGroupingType] = useState<'category' | 'country' | 'none'>(() => {\n    const savedGrouping = localStorage.getItem('chronoline-grouping');\n    return savedGrouping as 'category' | 'country' | 'none' || 'category';\n  })\n\n  // Сохраняем фильтры в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('chronoline-filters', JSON.stringify(filters));\n  }, [filters]);\n\n  // Сохраняем тип группировки в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('chronoline-grouping', groupingType);\n  }, [groupingType]);\n\n  // Очищаем таймер при размонтировании компонента\n  useEffect(() => {\n    return () => {\n      if (hoverTimerRef.current) {\n        clearTimeout(hoverTimerRef.current);\n      }\n    };\n  }, []);\n  const [persons, setPersons] = useState<Person[]>([])\n  const [allCategories, setAllCategories] = useState<string[]>([])\n  const [allCountries, setAllCountries] = useState<string[]>([])\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Состояние для полей ввода годов\n  const [yearInputs, setYearInputs] = useState({\n    start: filters.timeRange.start.toString(),\n    end: filters.timeRange.end.toString()\n  })\n\n  // Функция для применения фильтра по году\n  const applyYearFilter = (field: 'start' | 'end', value: string) => {\n    const numValue = parseInt(value) || (field === 'start' ? -800 : 2000)\n    setFilters(prev => ({\n      ...prev,\n      timeRange: { ...prev.timeRange, [field]: numValue }\n    }))\n  }\n\n  // Функция для обработки нажатия Enter\n  const handleYearKeyPress = (field: 'start' | 'end', e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      applyYearFilter(field, e.currentTarget.value)\n      // Переводим фокус на следующий элемент\n      const inputs = e.currentTarget.parentElement?.parentElement?.querySelectorAll('input')\n      if (inputs) {\n        const currentIndex = Array.from(inputs).indexOf(e.currentTarget)\n        const nextInput = inputs[currentIndex + 1] as HTMLInputElement\n        if (nextInput) {\n          nextInput.focus()\n        }\n      }\n    }\n  }\n\n  // Функция для сброса всех фильтров\n  const resetAllFilters = () => {\n    setFilters({\n      categories: [],\n      countries: [],\n      timeRange: { start: -800, end: 2000 },\n      showAchievements: true\n    })\n    setYearInputs({\n      start: '-800',\n      end: '2000'\n    })\n  }\n\n\n  // Единый useEffect для загрузки и фильтрации данных\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Формируем параметры для запроса\n        const filtersToApply: any = {};\n        if (filters.categories.length > 0) {\n          filtersToApply.category = filters.categories.join(',');\n        }\n        if (filters.countries.length > 0) {\n          filtersToApply.country = filters.countries.join(',');\n        }\n        filtersToApply.startYear = filters.timeRange.start;\n        filtersToApply.endYear = filters.timeRange.end;\n\n        // Загружаем персон с учетом фильтров\n        const personsData = await getPersons(filtersToApply);\n        setPersons(personsData);\n\n        // Загружаем категории и страны только если они еще не загружены\n        if (allCategories.length === 0 || allCountries.length === 0) {\n          const [categoriesData, countriesData] = await Promise.all([\n            getCategories(),\n            getCountries()\n          ]);\n          setAllCategories(categoriesData);\n          setAllCountries(countriesData);\n        }\n      } catch (error) {\n        console.error(\"Ошибка при загрузке данных:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [filters, allCategories.length, allCountries.length]); // Перезагружаем данные при изменении фильтров\n\n    // Функция для получения приоритета категории\n  const getCategoryPriority = (category: string) => {\n    // Используем все категории из API, а не только жестко заданные\n    return allCategories.indexOf(category)\n  }\n\n  // Функция для получения цвета группы в зависимости от типа группировки\n  const getGroupColor = (groupName: string) => {\n    if (groupingType === 'category') {\n      return getCategoryColor(groupName)\n    } else if (groupingType === 'country') {\n      // Для стран используем другой набор цветов\n      const countryColors = [\n        '#e74c3c', '#3498db', '#2ecc71', '#f39c12', '#9b59b6',\n        '#1abc9c', '#e67e22', '#34495e', '#16a085', '#8e44ad',\n        '#27ae60', '#2980b9', '#f1c40f', '#e74c3c', '#95a5a6'\n      ]\n      const index = allCountries.indexOf(groupName)\n      return countryColors[index % countryColors.length]\n    }\n    return '#95a5a6' // серый цвет по умолчанию\n  }\n\n  // Функция для получения цвета группы (темный вариант)\n  const getGroupColorDark = (groupName: string) => {\n    if (groupingType === 'category') {\n      return getCategoryColorDark(groupName)\n    } else if (groupingType === 'country') {\n      // Для стран используем темные варианты цветов\n      const countryColorsDark = [\n        '#c0392b', '#2980b9', '#27ae60', '#d68910', '#8e44ad',\n        '#16a085', '#d35400', '#2c3e50', '#138d75', '#7d3c98',\n        '#229954', '#1f618d', '#d4ac0f', '#c0392b', '#7f8c8d'\n      ]\n      const index = allCountries.indexOf(groupName)\n      return countryColorsDark[index % countryColorsDark.length]\n    }\n    return '#7f8c8d' // темно-серый цвет по умолчанию\n  }\n\n  // Функция для получения цвета группы (приглушенный вариант)\n  const getGroupColorMuted = (groupName: string) => {\n    if (groupingType === 'category') {\n      return getCategoryColorMuted(groupName)\n    } else if (groupingType === 'country') {\n      // Для стран используем приглушенные варианты цветов\n      const countryColorsMuted = [\n        '#e74c3c', '#3498db', '#2ecc71', '#f39c12', '#9b59b6',\n        '#1abc9c', '#e67e22', '#34495e', '#16a085', '#8e44ad',\n        '#27ae60', '#2980b9', '#f1c40f', '#e74c3c', '#95a5a6'\n      ]\n      const index = allCountries.indexOf(groupName)\n      return countryColorsMuted[index % countryColorsMuted.length]\n    }\n    return '#95a5a6' // серый цвет по умолчанию\n  }\n\n  // Вспомогательная функция для извлечения первой страны из списка\n  const getFirstCountry = (countryString: string): string => {\n    const countries = countryString.split('/').map(c => c.trim())\n    return countries[0] || countryString\n  }\n\n  // Функция для получения значения группы для персонажа\n  const getPersonGroup = (person: Person) => {\n    if (groupingType === 'category') {\n      return person.category\n    } else if (groupingType === 'country') {\n      return getFirstCountry(person.country)\n    }\n    return person.category // по умолчанию\n  }\n\n  // Функция фильтрации данных (теперь данные фильтруются на бэкенде, но сортировка остается)\n  const sortedData = [...persons].sort((a, b) => {\n    if (groupingType === 'category') {\n      // Сначала сортируем по категориям\n      const categoryDiff = getCategoryPriority(a.category) - getCategoryPriority(b.category)\n      if (categoryDiff !== 0) {\n        return categoryDiff\n      }\n    } else if (groupingType === 'country') {\n      // Сначала сортируем по странам (берем первую страну из списка)\n      const countryDiff = allCountries.indexOf(getFirstCountry(a.country)) - allCountries.indexOf(getFirstCountry(b.country))\n      if (countryDiff !== 0) {\n        return countryDiff\n      }\n    }\n    // Затем по году рождения\n    return a.birthYear - b.birthYear\n  })\n\n  // Отслеживаем скролл\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop\n      setIsScrolled(scrollTop > 50)\n    }\n\n    window.addEventListener('scroll', handleScroll)\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [])\n\n\n\n  // Вычисляем реальный диапазон лет из отфильтрованных данных\n  const minYear = Math.min(...sortedData.map(p => p.birthYear), filters.timeRange.start)\n  const maxYear = Math.max(...sortedData.map(p => p.deathYear), filters.timeRange.end)\n  const totalYears = maxYear - minYear\n\n  // Настройки масштаба\n  const pixelsPerYear = 3 // 3 пикселя на год\n  const LEFT_PADDING_PX = 30 // отступ слева, чтобы крайняя левая подпись не упиралась в край\n  const timelineWidth = totalYears * pixelsPerYear + LEFT_PADDING_PX\n\n  // Функция для вычисления позиции в пикселях\n  const getPosition = (year: number) => {\n    return LEFT_PADDING_PX + (year - minYear) * pixelsPerYear\n  }\n\n  // Функция для вычисления ширины полоски в пикселях\n  const getWidth = (birthYear: number, deathYear: number) => {\n    return (deathYear - birthYear) * pixelsPerYear\n  }\n\n  // Генерируем границы веков\n  const generateCenturyBoundaries = () => {\n    const boundaries = []\n    const startCentury = Math.floor(minYear / 100) * 100\n    const endCentury = Math.ceil(maxYear / 100) * 100\n    \n    for (let year = startCentury; year <= endCentury; year += 100) {\n      // Включаем границу, если она попадает в диапазон данных или является границей века\n      if (year <= maxYear) {\n        boundaries.push(year)\n      }\n    }\n    return boundaries\n  }\n\n  const centuryBoundaries = generateCenturyBoundaries()\n\n  // Функция для получения цвета века\n  const getCenturyColor = (year: number) => {\n    const colors = [\n      'rgba(255, 107, 107, 0.1)', // Светло-красный\n      'rgba(78, 205, 196, 0.1)', // Светло-голубой\n      'rgba(150, 206, 180, 0.1)', // Светло-зеленый\n      'rgba(255, 234, 167, 0.1)', // Светло-оранжевый\n      'rgba(221, 160, 221, 0.1)', // Светло-фиолетовый\n      'rgba(120, 219, 255, 0.1)', // Светло-бирюзовый\n      'rgba(255, 255, 229, 0.1)', // Светло-желтый\n      'rgba(255, 229, 240, 0.1)', // Светло-розовый\n    ]\n    \n    const centuryIndex = Math.floor((year - minYear) / 100)\n    return colors[centuryIndex % colors.length]\n  }\n\n  // Функция для конвертации в римские цифры\n  const toRomanNumeral = (num: number): string => {\n    const romanNumerals = [\n      { value: 1000, numeral: 'M' },\n      { value: 900, numeral: 'CM' },\n      { value: 500, numeral: 'D' },\n      { value: 400, numeral: 'CD' },\n      { value: 100, numeral: 'C' },\n      { value: 90, numeral: 'XC' },\n      { value: 50, numeral: 'L' },\n      { value: 40, numeral: 'XL' },\n      { value: 10, numeral: 'X' },\n      { value: 9, numeral: 'IX' },\n      { value: 5, numeral: 'V' },\n      { value: 4, numeral: 'IV' },\n      { value: 1, numeral: 'I' }\n    ]\n\n    let result = ''\n    let remaining = Math.abs(num)\n\n    for (const { value, numeral } of romanNumerals) {\n      while (remaining >= value) {\n        result += numeral\n        remaining -= value\n      }\n    }\n\n    return num < 0 ? `-${result}` : result\n  }\n\n  // Функция для получения номера века\n  const getCenturyNumber = (year: number): number => {\n    if (year < 0) {\n      // Для отрицательных лет: -1 до -100 = 1 век до н.э., -101 до -200 = 2 век до н.э.\n      return Math.floor((Math.abs(year) - 1) / 100) + 1\n    } else if (year === 0) {\n      // Год 0 не существует в исторической хронологии\n      return 1\n    } else {\n      // Для положительных лет: 1-100 = 1 век, 101-200 = 2 век и т.д.\n      return Math.floor((year - 1) / 100) + 1\n    }\n  }\n\n  // Алгоритм размещения полосок на строках с полной группировкой по категориям\n  const calculateRowPlacement = (people: Person[]) => {\n    const rows: Person[][] = []\n    \n    if (groupingType === 'none') {\n      // Без группировки - просто размещаем всех в строки\n      const allRows: Person[][] = []\n      \n      people.forEach(person => {\n        let placed = false\n        \n        // Проверяем каждую существующую строку\n        for (let rowIndex = 0; rowIndex < allRows.length; rowIndex++) {\n          const row = allRows[rowIndex]\n          let canPlaceInRow = true\n          \n          // Проверяем, не пересекается ли с кем-то в этой строке\n          for (const existingPerson of row) {\n            const BUFFER = 20; // минимальный зазор между персонами\n            if (\n              person.birthYear - BUFFER <= existingPerson.deathYear &&\n              person.deathYear + BUFFER >= existingPerson.birthYear\n            ) {\n              canPlaceInRow = false\n              break\n            }\n          }\n          \n          // Если можно разместить в этой строке\n          if (canPlaceInRow) {\n            allRows[rowIndex].push(person)\n            placed = true\n            break\n          }\n        }\n        \n        // Если не удалось разместить в существующих строках, создаем новую\n        if (!placed) {\n          allRows.push([person])\n        }\n      })\n      \n      return allRows\n    }\n    \n    // Группировка по категориям или странам\n    const groupField = groupingType === 'category' ? 'category' : 'country'\n    const allGroups = groupingType === 'category' ? allCategories : allCountries\n    const groups: { [key: string]: Person[] } = {}\n    \n    // Группируем людей по выбранному полю\n    people.forEach(person => {\n      let groupValue: string\n      if (groupField === 'country') {\n        // Для стран берем первую из списка, если есть несколько через \"/\"\n        groupValue = getFirstCountry(person.country)\n      } else {\n        groupValue = person[groupField]\n      }\n      \n      if (!groups[groupValue]) {\n        groups[groupValue] = []\n      }\n      groups[groupValue].push(person)\n    })\n    \n    // Обрабатываем каждую группу в заданном порядке\n    allGroups.forEach(groupValue => {\n      if (groups[groupValue]) {\n        const groupPeople = groups[groupValue]\n        const groupRows: Person[][] = []\n        \n        // Размещаем людей данной группы в отдельные строки\n        groupPeople.forEach(person => {\n          let placed = false\n          \n          // Проверяем каждую существующую строку для этой группы\n          for (let rowIndex = 0; rowIndex < groupRows.length; rowIndex++) {\n            const row = groupRows[rowIndex]\n            let canPlaceInRow = true\n            \n            // Проверяем, не пересекается ли с кем-то в этой строке\n            for (const existingPerson of row) {\n              const BUFFER = 20; // минимальный зазор между персонами\n              if (\n                person.birthYear - BUFFER <= existingPerson.deathYear &&\n                person.deathYear + BUFFER >= existingPerson.birthYear\n              ) {\n                canPlaceInRow = false\n                break\n              }\n            }\n            \n            // Если можно разместить в этой строке\n            if (canPlaceInRow) {\n              groupRows[rowIndex].push(person)\n              placed = true\n              break\n            }\n          }\n          \n          // Если не удалось разместить в существующих строках, создаем новую\n          if (!placed) {\n            groupRows.push([person])\n          }\n        })\n        \n        // Добавляем строки данной группы к общему списку\n        rows.push(...groupRows)\n        \n        // Добавляем пустую строку для визуального разделения (кроме последней группы)\n        if (groupValue !== allGroups[allGroups.length - 1]) {\n          rows.push([])\n        }\n      }\n    })\n    \n    return rows\n  }\n\n  // Получаем размещение по строкам\n  const rowPlacement = calculateRowPlacement(sortedData)\n\n  // Вычисляем общую высоту с учетом пустых строк\n  const totalHeight = rowPlacement.reduce((height, row) => {\n    return height + (row.length === 0 ? 20 : 70) // 20px для пустых строк, 70px для обычных (60px + 10px margin)\n  }, 0)\n\n  // Функция для создания разделителей категорий\n    // Высота строки и отступ вниз для непустой строки\n  const ROW_HEIGHT = 60;\n  const ROW_MARGIN = 10; // margin-bottom, используется только для непустых строк\n  const EMPTY_ROW_HEIGHT = 20;\n\n  // Подсчитываем абсолютный top каждой строки, чтобы точно позиционировать разделители\n  const rowTops: number[] = [];\n  (() => {\n    let acc = 0;\n    rowPlacement.forEach(row => {\n      rowTops.push(acc);\n      if (row.length === 0) {\n        acc += EMPTY_ROW_HEIGHT;\n      } else {\n        acc += ROW_HEIGHT + ROW_MARGIN;\n      }\n    });\n  })();\n\n  const createCategoryDividers = () => {\n    if (groupingType === 'none') {\n      return []; // Без группировки нет разделителей\n    }\n\n    const dividers: { category: string; top: number }[] = [];\n    let currentGroup = '';\n\n    rowPlacement.forEach((row, rowIndex) => {\n      if (row.length > 0) {\n        const firstPersonInRow = row[0];\n        let currentGroupValue: string;\n        \n        if (groupingType === 'category') {\n          currentGroupValue = firstPersonInRow.category;\n        } else if (groupingType === 'country') {\n          // Для стран берем первую из списка\n          currentGroupValue = getFirstCountry(firstPersonInRow.country);\n        } else {\n          currentGroupValue = firstPersonInRow.category;\n        }\n        \n        if (currentGroupValue !== currentGroup) {\n          if (currentGroup !== '') {\n            // закрываем предыдущую группу\n            dividers.push({ category: currentGroup, top: rowTops[rowIndex] - 5 });\n          }\n          currentGroup = currentGroupValue;\n        }\n      }\n    });\n\n    // Добавляем разделитель для последней группы\n    if (currentGroup !== '') {\n      dividers.push({ category: currentGroup, top: rowTops[rowPlacement.length - 1] - 5 });\n    }\n\n    return dividers;\n  };\n\n  const categoryDividers = createCategoryDividers();\n\n\n\n  return (\n    <div className=\"app\">\n      <header \n        className={`app-header ${isScrolled ? 'scrolled' : ''}`}\n        style={{\n          padding: isScrolled ? '0.5rem 1rem' : '0.75rem 1rem',\n          transition: 'all 0.3s ease'\n        }}\n      >\n        {/* Основная панель */}\n        <div style={{ \n          display: 'flex', \n          justifyContent: 'space-between',\n          alignItems: 'center',\n          gap: '1rem',\n          width: '100%',\n          flexWrap: 'wrap'\n        }}>\n          {/* Заголовок */}\n          <h1 style={{ \n            fontSize: isScrolled ? '1.5rem' : '1.8rem',\n            margin: 0,\n            transition: 'font-size 0.3s ease',\n            fontWeight: 'bold',\n            color: '#f4e4c1',\n            flexShrink: 0\n          }}>\n            Chronoline\n          </h1>\n\n          {/* Компактные элементы управления */}\n          <div style={{\n            display: 'flex',\n            gap: '0.5rem',\n            alignItems: 'center',\n            flexWrap: 'wrap',\n            justifyContent: 'center'\n          }}>\n            {/* Переключатель маркеров */}\n            <div style={{ \n              display: 'flex', \n              alignItems: 'center', \n              gap: '0.3rem',\n              padding: '0.3rem 0.6rem',\n              borderRadius: '6px',\n              background: filters.showAchievements ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.05)',\n              border: `1px solid ${filters.showAchievements ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)'}`,\n              transition: 'all 0.2s ease',\n              cursor: 'pointer'\n            }}\n            onClick={() => setFilters(prev => ({ ...prev, showAchievements: !prev.showAchievements }))}\n            >\n              <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"currentColor\" style={{ opacity: filters.showAchievements ? 1 : 0.5 }}>\n                <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n              </svg>\n              <span style={{ fontSize: '0.7rem', color: '#f4e4c1' }}>⭐</span>\n            </div>\n\n            {/* Переключатель группировки */}\n            <GroupingToggle \n              groupingType={groupingType}\n              onGroupingChange={setGroupingType}\n            />\n\n            {/* Кнопка фильтров */}\n            <button\n              onClick={() => setShowFilters(!showFilters)}\n              style={{\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.3rem',\n                padding: '0.3rem 0.6rem',\n                borderRadius: '6px',\n                background: showFilters ? 'rgba(139, 69, 19, 0.2)' : 'rgba(139, 69, 19, 0.1)',\n                border: `1px solid ${showFilters ? 'rgba(139, 69, 19, 0.4)' : 'rgba(139, 69, 19, 0.2)'}`,\n                color: '#f4e4c1',\n                fontSize: '0.7rem',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease'\n              }}\n            >\n              🔍\n              <span>Фильтры</span>\n              {(filters.categories.length > 0 || filters.countries.length > 0) && (\n                <span style={{\n                  background: '#e74c3c',\n                  color: 'white',\n                  borderRadius: '50%',\n                  width: '16px',\n                  height: '16px',\n                  fontSize: '0.6rem',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                }}>\n                  {filters.categories.length + filters.countries.length}\n                </span>\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Выпадающая панель фильтров */}\n        {showFilters && (\n          <div style={{\n            marginTop: '0.75rem',\n            padding: '0.75rem',\n            background: 'rgba(44, 24, 16, 0.9)',\n            borderRadius: '8px',\n            border: '1px solid rgba(139, 69, 19, 0.3)',\n            backdropFilter: 'blur(10px)',\n            animation: 'slideDown 0.3s ease'\n          }}>\n            <div style={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n              gap: '1rem',\n              alignItems: 'start'\n            }}>\n              {/* Фильтр по категориям */}\n              <div>\n                <h3 style={{ \n                  fontSize: '0.8rem', \n                  color: '#f4e4c1', \n                  margin: '0 0 0.5rem 0',\n                  fontWeight: 'bold'\n                }}>\n                  Род деятельности\n                </h3>\n                <FilterDropdown\n                  title=\"Выбрать категории\"\n                  items={allCategories}\n                  selectedItems={filters.categories}\n                  onSelectionChange={(categories) => setFilters(prev => ({ ...prev, categories }))}\n                  getItemColor={getCategoryColor}\n                  icon={\n                    <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n                    </svg>\n                  }\n                />\n              </div>\n\n              {/* Фильтр по странам */}\n              <div>\n                <h3 style={{ \n                  fontSize: '0.8rem', \n                  color: '#f4e4c1', \n                  margin: '0 0 0.5rem 0',\n                  fontWeight: 'bold'\n                }}>\n                  Страна происхождения\n                </h3>\n                <FilterDropdown\n                  title=\"Выбрать страны\"\n                  items={allCountries}\n                  selectedItems={filters.countries}\n                  onSelectionChange={(countries) => setFilters(prev => ({ ...prev, countries }))}\n                  icon={\n                    <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n                    </svg>\n                  }\n                />\n              </div>\n\n              {/* Фильтр по годам */}\n              <div>\n                <h3 style={{ \n                  fontSize: '0.8rem', \n                  color: '#f4e4c1', \n                  margin: '0 0 0.5rem 0',\n                  fontWeight: 'bold'\n                }}>\n                  Временной период\n                </h3>\n                <div style={{ \n                  display: 'flex', \n                  gap: '0.5rem', \n                  alignItems: 'center',\n                  flexWrap: 'wrap'\n                }}>\n                  <div>\n                    <label style={{ fontSize: '0.7rem', display: 'block', marginBottom: '0.2rem', color: '#f4e4c1' }}>\n                      От:\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={yearInputs.start}\n                      onChange={(e) => setYearInputs(prev => ({ ...prev, start: e.target.value }))}\n                      onBlur={(e) => applyYearFilter('start', e.target.value)}\n                      onKeyPress={(e) => handleYearKeyPress('start', e)}\n                      style={{\n                        width: '80px',\n                        padding: '0.3rem',\n                        border: '1px solid rgba(139, 69, 19, 0.5)',\n                        borderRadius: '4px',\n                        background: 'rgba(44, 24, 16, 0.8)',\n                        color: '#f4e4c1',\n                        fontSize: '0.7rem'\n                      }}\n                    />\n                  </div>\n                  <div>\n                    <label style={{ fontSize: '0.7rem', display: 'block', marginBottom: '0.2rem', color: '#f4e4c1' }}>\n                      До:\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={yearInputs.end}\n                      onChange={(e) => setYearInputs(prev => ({ ...prev, end: e.target.value }))}\n                      onBlur={(e) => applyYearFilter('end', e.target.value)}\n                      onKeyPress={(e) => handleYearKeyPress('end', e)}\n                      style={{\n                        width: '80px',\n                        padding: '0.3rem',\n                        border: '1px solid rgba(139, 69, 19, 0.5)',\n                        borderRadius: '4px',\n                        background: 'rgba(44, 24, 16, 0.8)',\n                        color: '#f4e4c1',\n                        fontSize: '0.7rem'\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Кнопка сброса */}\n              <div style={{ display: 'flex', alignItems: 'end' }}>\n                <button\n                  onClick={resetAllFilters}\n                  style={{\n                    padding: '0.4rem 0.8rem',\n                    background: 'linear-gradient(135deg, #95a5a6 0%, #7f8c8d 100%)',\n                    border: 'none',\n                    borderRadius: '4px',\n                    color: 'white',\n                    fontSize: '0.7rem',\n                    cursor: 'pointer',\n                    transition: 'all 0.2s ease'\n                  }}\n                >\n                  Сбросить все\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </header>\n      \n      <main className=\"app-main\">\n        {isLoading && (\n          <div className=\"loading-overlay\">\n            <div className=\"spinner\"></div>\n            <span>Загрузка данных...</span>\n          </div>\n        )}\n        {/* Временная линия на весь экран */}\n        <div className=\"timeline-container\" style={{ \n          position: 'relative', \n          height: 'calc(100vh - 100px)',\n          overflow: 'auto',\n          padding: '1rem 0 2rem 0'\n        }}>\n\n          {/* Разноцветная заливка веков */}\n          <div style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 1\n          }}>\n            {centuryBoundaries.map((year, index) => {\n              const nextYear = centuryBoundaries[index + 1] || (year + 100)\n              const startPos = getPosition(year)\n              const endPos = getPosition(nextYear)\n              const width = endPos - startPos\n\n              // Вычисляем век на основе центра года в столетии\n              const centerYear = year + 50\n              const centuryNumber = getCenturyNumber(centerYear)\n              // Для отрицательных веков добавляем знак минус\n              const isNegativeCentury = year < 0\n              const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber)\n              \n              return (\n                <div key={`century-bg-${year}`} style={{\n                  position: 'absolute',\n                  left: `${startPos}px`,\n                  width: `${width}px`,\n                  height: '100%',\n                  background: getCenturyColor(year),\n                  opacity: 0.3,\n                  zIndex: 1\n                }}>\n                  {/* Римская цифра века в центре */}\n                  <div className=\"century-label\" style={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    fontSize: '2rem',\n                    fontWeight: 'bold',\n                    color: 'rgba(244, 228, 193, 0.6)',\n                    textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n                    pointerEvents: 'none',\n                    zIndex: 2,\n                    fontFamily: 'serif'\n                  }}>\n                    {romanNumeral}\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n\n          {/* Границы веков на всю высоту */}\n          <div style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 5\n          }}>\n            {centuryBoundaries.map((year) => (\n              <div key={`century-line-${year}`} style={{\n                position: 'absolute',\n                left: `${getPosition(year)}px`,\n                width: '2px',\n                height: '100%',\n                background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                zIndex: 5\n              }} />\n            ))}\n          </div>\n\n          {/* Разделители групп */}\n          <div style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 8\n          }}>\n            {categoryDividers.map((divider) => (\n              <div key={`category-divider-${divider.category}`} style={{\n                position: 'absolute',\n                top: `${divider.top}px`,\n                left: '0',\n                width: '100%',\n                height: '10px',\n                background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n                opacity: 0.6,\n                zIndex: 8\n              }}>\n                <div className=\"category-label\" style={{\n                  position: 'absolute',\n                  left: '20px',\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: getGroupColor(divider.category),\n                  color: 'white',\n                  padding: '2px 8px',\n                  borderRadius: '4px',\n                  fontSize: '0.7rem',\n                  fontWeight: 'bold',\n                  whiteSpace: 'nowrap',\n                  zIndex: 9\n                }}>\n                  {divider.category}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Полоски жизни */}\n          <div style={{ \n            position: 'relative',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 60}px`,\n            zIndex: 10\n          }}>\n            {rowPlacement.map((row, rowIndex) => (\n              <div key={rowIndex} style={{\n                position: 'relative',\n                height: row.length === 0 ? '20px' : '60px',\n                marginBottom: row.length === 0 ? '0px' : '10px'\n              }}>\n                {row.map((person) => (\n                  <React.Fragment key={person.id}>\n                    {/* Годы жизни и правления над полоской */}\n                    <span style={{\n                      position: 'absolute',\n                      left: `${getPosition(person.birthYear)}px`,\n                      top: 0,\n                      fontSize: '11px',\n                      color: 'rgba(244, 228, 193, 0.6)',\n                      fontStyle: 'italic',\n                      fontWeight: 400,\n                      transform: 'translateX(-100%) translateY(-10px)'\n                    }}>{person.birthYear}</span>\n\n                    {person.reignStart && (\n                      <span className=\"reign-label\" style={{\n                        position: 'absolute',\n                        left: `${getPosition(person.reignStart)}px`,\n                        top: 0,\n                        fontSize: '11px',\n                        color: '#E57373', // Темно-красный\n                        fontStyle: 'italic',\n                        fontWeight: 'bold',\n                        transform: 'translateX(-100%) translateY(-22px)'\n                      }}>👑 {person.reignStart}</span>\n                    )}\n\n                    {person.reignEnd && (\n                      <span className=\"reign-label\" style={{\n                        position: 'absolute',\n                        left: `${getPosition(person.reignEnd)}px`,\n                        top: 0,\n                        fontSize: '11px',\n                        color: '#E57373', // Темно-красный\n                        fontStyle: 'italic',\n                        fontWeight: 'bold',\n                        transform: 'translateY(-22px)'\n                      }}>{person.reignEnd}</span>\n                    )}\n                    \n                    <span style={{\n                      position: 'absolute',\n                      left: `${getPosition(person.deathYear)}px`,\n                      top: 0,\n                      fontSize: '11px',\n                      color: 'rgba(244, 228, 193, 0.6)',\n                      fontStyle: 'italic',\n                      fontWeight: 400,\n                      transform: 'translateY(-10px)'\n                    }}>{person.deathYear}</span>\n\n                    {/* Маркеры ключевых достижений */}\n                    {filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3]\n                      .filter(year => year !== undefined && year !== null)\n                      .map((year, index) => {\n                        return (\n                          <div key={index} style={{\n                            position: 'absolute',\n                            left: `${getPosition(year as number)}px`,\n                            top: '-4px',\n                            width: '2px',\n                            height: '15px',\n                            backgroundColor: getCategoryColorDark(person.category),\n                            zIndex: activeAchievementMarker?.personId === person.id && activeAchievementMarker?.index === index ? 10 : 3,\n                            transform: 'translateX(-50%)',\n                            cursor: 'pointer',\n                            transition: 'all 0.2s ease'\n                          }}\n                          onMouseEnter={(e) => {\n                                                    e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                        e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n                            // Находим span внутри и обновляем его стили\n                            const span = e.currentTarget.querySelector('span');\n                            if (span) {\n                              span.style.backgroundColor = 'rgba(44, 24, 16, 0.95)';\n                                                          span.style.borderColor = getGroupColor(getPersonGroup(person));\n                            span.style.color = getGroupColor(getPersonGroup(person));\n                              span.style.fontSize = '9px';\n                              span.style.padding = '2px 4px';\n                              span.style.borderRadius = '3px';\n                            }\n                            \n                            // Устанавливаем активный маркер\n                            setActiveAchievementMarker({ personId: person.id, index });\n                            \n                            // Очищаем предыдущий таймер если он есть\n                            if (hoverTimerRef.current) {\n                              clearTimeout(hoverTimerRef.current);\n                            }\n                            \n                            // Запускаем таймер для показа tooltip\n                            hoverTimerRef.current = setTimeout(() => {\n                              setHoveredAchievement({ person, year: year as number, index });\n                              setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\n                              setShowAchievementTooltip(true);\n                            }, 500);\n                          }}\n                          onMouseLeave={(e) => {\n                            e.currentTarget.style.backgroundColor = getCategoryColorDark(person.category);\n                            e.currentTarget.style.boxShadow = 'none';\n                            // Возвращаем стили span к исходным\n                            const span = e.currentTarget.querySelector('span');\n                            if (span) {\n                              span.style.backgroundColor = 'rgba(44, 24, 16, 0.9)';\n                                                          span.style.borderColor = getGroupColorDark(getPersonGroup(person));\n                            span.style.color = getGroupColorDark(getPersonGroup(person));\n                              span.style.fontSize = '8px';\n                              span.style.padding = '1px 3px';\n                              span.style.borderRadius = '2px';\n                            }\n                            \n                            // Сбрасываем активный маркер\n                            setActiveAchievementMarker(null);\n                            \n                            // Очищаем таймер и скрываем tooltip\n                            if (hoverTimerRef.current) {\n                              clearTimeout(hoverTimerRef.current);\n                              hoverTimerRef.current = null;\n                            }\n                            setShowAchievementTooltip(false);\n                            setHoveredAchievement(null);\n                          }}\n                          onMouseMove={(e) => {\n                            setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\n                          }}\n                          onMouseOut={(e) => {\n                            // Дополнительная проверка на случай, если onMouseLeave не сработал\n                            if (!e.currentTarget.contains(e.relatedTarget as Node)) {\n                              setActiveAchievementMarker(null);\n                              if (hoverTimerRef.current) {\n                                clearTimeout(hoverTimerRef.current);\n                                hoverTimerRef.current = null;\n                              }\n                              setShowAchievementTooltip(false);\n                              setHoveredAchievement(null);\n                            }\n                          }}\n                          >\n                            <span style={{\n                              position: 'absolute',\n                              top: '-12px',\n                              left: '50%',\n                              transform: 'translateX(-50%)',\n                              fontSize: '8px',\n                              color: getGroupColorDark(getPersonGroup(person)),\n                              fontWeight: 'bold',\n                              whiteSpace: 'nowrap',\n                              backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                              padding: '1px 3px',\n                              borderRadius: '2px',\n                              border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                              transition: 'all 0.2s ease'\n                            }}>\n                              {year}\n                            </span>\n                          </div>\n                        );\n                      })}\n\n                    {/* полоса правления */}\n                    {person.reignStart && person.reignEnd && (\n                      <div style={{\n                        position: 'absolute',\n                        top: '-15px',\n                        left: `${getPosition(person.reignStart)}px`,\n                        width: `${getWidth(person.reignStart, person.reignEnd)}px`,\n                        height: '65px',\n                        backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                        pointerEvents: 'none',\n                        borderLeft: '2px solid #D32F2F',\n                        borderRight: '2px solid #D32F2F',\n                        borderRadius: '3px',\n                        zIndex: 1\n                      }} />\n                    )}\n\n                    <div\n                      className=\"life-bar\"\n                      style={{\n                        position: 'absolute',\n                        top: '10px',\n                        left: `${getPosition(person.birthYear)}px`,\n                        width: `${getWidth(person.birthYear, person.deathYear)}px`,\n                        height: '40px',\n                        background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                        borderRadius: '6px',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'center',\n                        padding: '0 12px',\n                        color: 'white',\n                        fontSize: '14px',\n                        fontWeight: 'bold',\n                        minWidth: '60px',\n                        boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                        border: '1.5px solid #a8926a',\n                        opacity: 1,\n                        zIndex: 5\n                      }}\n                      onMouseEnter={(e) => {\n                        e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)'\n                        e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)'\n                        setHoveredPerson(person)\n                        setMousePosition({ x: e.clientX, y: e.clientY })\n                        setTimeout(() => setShowTooltip(true), 300)\n                      }}\n                      onMouseLeave={(e) => {\n                        e.currentTarget.style.transform = 'translateY(0) scale(1)'\n                        e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)'\n                        setHoveredPerson(null)\n                        setShowTooltip(false)\n                      }}\n                      onMouseMove={(e) => {\n                        setMousePosition({ x: e.clientX, y: e.clientY })\n                      }}\n                    >\n                      <div style={{ display: 'flex', flexDirection: 'column', lineHeight: '1.2' }}>\n                        <span>{person.name}</span>\n                      </div>\n                    </div>\n                  </React.Fragment>\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n      </main>\n\n      {/* Всплывающее окно с информацией */}\n      {hoveredPerson && showTooltip && (\n        <div className=\"tooltip\" style={{ \n          position: 'fixed',\n          left: `${mousePosition.x + 15}px`,\n          top: `${mousePosition.y - 10}px`,\n          padding: '1rem',\n          zIndex: 1000,\n          maxWidth: '300px',\n          minWidth: '250px',\n          color: '#f4e4c1',\n          pointerEvents: 'none',\n          opacity: 0,\n          transform: 'translateY(10px) scale(0.95)',\n          animation: 'tooltipFadeIn 0.2s ease-out forwards'\n        }}>\n          {/* Фотография человека, если есть */}\n          {hoveredPerson.imageUrl && (\n            <div style={{ \n              marginBottom: '0.75rem',\n              textAlign: 'center'\n            }}>\n              <img \n                src={hoveredPerson.imageUrl} \n                alt={hoveredPerson.name}\n                style={{\n                  width: '80px',\n                  height: '80px',\n                  borderRadius: '50%',\n                  objectFit: 'cover',\n                  border: `2px solid ${getGroupColor(getPersonGroup(hoveredPerson))}`,\n                  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)'\n                }}\n                onError={(e) => {\n                  // Скрываем изображение если оно не загрузилось\n                  e.currentTarget.style.display = 'none';\n                }}\n              />\n            </div>\n          )}\n          \n          <h3 style={{ \n            margin: '0 0 0.5rem 0', \n                            color: getGroupColor(getPersonGroup(hoveredPerson)),\n            fontSize: '1.1rem',\n            fontWeight: 'bold'\n          }}>\n            {hoveredPerson.name}\n          </h3>\n          \n          <div style={{ fontSize: '0.85rem', lineHeight: '1.4' }}>\n            <p style={{ margin: '0.25rem 0', fontWeight: 'bold' }}>\n              {hoveredPerson.birthYear} - {hoveredPerson.deathYear}\n            </p>\n            <p style={{ margin: '0.25rem 0' }}>\n              <span style={{ color: getCategoryColor(hoveredPerson.category), fontWeight: 'bold' }}>\n                {hoveredPerson.category}\n              </span> • {hoveredPerson.country}\n            </p>\n            <p style={{ margin: '0.5rem 0', fontStyle: 'italic', opacity: 0.8 }}>\n              {hoveredPerson.description}\n            </p>\n            \n            {/* Ключевые достижения по годам */}\n            {filters.showAchievements && ([hoveredPerson.achievementYear1, hoveredPerson.achievementYear2, hoveredPerson.achievementYear3]\n              .filter(year => year !== undefined && year !== null).length > 0) && (\n              <div style={{ marginTop: '0.5rem' }}>\n                <strong style={{ fontSize: '0.8rem', color: getGroupColor(getPersonGroup(hoveredPerson)) }}>\n                  🎯 Ключевые достижения:\n                </strong>\n                <div style={{ \n                  margin: '0.25rem 0 0 0',\n                  fontSize: '0.8rem'\n                }}>\n                  {[hoveredPerson.achievementYear1, hoveredPerson.achievementYear2, hoveredPerson.achievementYear3]\n                    .filter(year => year !== undefined && year !== null)\n                    .map((year, index) => (\n                      <div key={index} style={{ \n                        marginBottom: '0.1rem',\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '0.5rem'\n                      }}>\n                        <span style={{ \n                          color: getGroupColor(getPersonGroup(hoveredPerson)),\n                          fontWeight: 'bold',\n                          fontSize: '0.75rem'\n                        }}>\n                          {year}\n                        </span>\n                        <span style={{ fontSize: '0.75rem' }}>\n                          {hoveredPerson.achievements[index] || 'Ключевое достижение'}\n                        </span>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n\n\n          </div>\n        </div>\n      )}\n\n      {/* Всплывающее окно для достижений */}\n      {hoveredAchievement && showAchievementTooltip && (\n        <div className=\"achievement-tooltip\" style={{ \n          position: 'fixed',\n          left: `${achievementTooltipPosition.x + 15}px`,\n          top: `${achievementTooltipPosition.y - 10}px`,\n          padding: '0.75rem',\n          zIndex: 1001,\n          maxWidth: '250px',\n          minWidth: '200px',\n          color: '#f4e4c1',\n          pointerEvents: 'none',\n          opacity: 0,\n          transform: 'translateY(10px) scale(0.95)',\n          animation: 'tooltipFadeIn 0.2s ease-out forwards',\n          backgroundColor: 'rgba(44, 24, 16, 0.95)',\n          borderRadius: '6px',\n                          border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)'\n        }}>\n          <div style={{ fontSize: '0.85rem', lineHeight: '1.4' }}>\n            {/* Фотография человека, если есть */}\n            {hoveredAchievement.person.imageUrl && (\n              <div style={{ \n                marginBottom: '0.5rem',\n                textAlign: 'center'\n              }}>\n                <img \n                  src={hoveredAchievement.person.imageUrl} \n                  alt={hoveredAchievement.person.name}\n                  style={{\n                    width: '50px',\n                    height: '50px',\n                    borderRadius: '50%',\n                    objectFit: 'cover',\n                    border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\n                    boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)'\n                  }}\n                  onError={(e) => {\n                    // Скрываем изображение если оно не загрузилось\n                    e.currentTarget.style.display = 'none';\n                  }}\n                />\n              </div>\n            )}\n            \n            <h4 style={{ \n              margin: '0 0 0.5rem 0', \n              color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\n              fontSize: '1rem',\n              fontWeight: 'bold'\n            }}>\n              {hoveredAchievement.person.name}\n            </h4>\n            \n            <p style={{ \n              margin: '0.25rem 0', \n              fontWeight: 'bold',\n              color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\n              fontSize: '0.9rem'\n            }}>\n              🎯 {hoveredAchievement.year}\n            </p>\n            \n            <p style={{ \n              margin: '0.25rem 0', \n              fontSize: '0.8rem',\n              fontStyle: 'italic'\n            }}>\n              {hoveredAchievement.person.achievements[hoveredAchievement.index] || 'Ключевое достижение'}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}