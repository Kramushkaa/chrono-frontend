{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useMobile}from'../hooks/useMobile';import{getPosition,getWidth,getCenturyColor,getCenturyNumber,toRomanNumeral}from'../utils/timelineUtils';// Типы для элементов временной линии\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";// Новый компонент для отображения информации о веках в центре экрана\nconst CenturyInfoOverlay=_ref=>{let{timelineElements,getAdjustedPosition,getCenturyNumber,toRomanNumeral,minYear,getCenturyColor,pixelsPerYear,getAdjustedTimelineWidth}=_ref;const[forceUpdate,setForceUpdate]=useState(0);useEffect(()=>{const handleScroll=()=>{// Принудительно обновляем компонент при скролле\nsetForceUpdate(prev=>prev+1);};const handleResize=()=>{// Принудительно обновляем компонент при изменении размера окна\nsetForceUpdate(prev=>prev+1);};window.addEventListener('scroll',handleScroll);window.addEventListener('resize',handleResize);return()=>{window.removeEventListener('scroll',handleScroll);window.removeEventListener('resize',handleResize);};},[]);// Находим элемент века, который находится в центре экрана\nconst getCenturyAtCenter=()=>{const timelineContainer=document.querySelector('.timeline-container');if(!timelineContainer)return null;const containerRect=timelineContainer.getBoundingClientRect();const centerX=containerRect.left+containerRect.width/2;// Находим элемент века, который находится ближе всего к центру\nlet closestElement=null;let minDistance=Infinity;timelineElements.forEach(element=>{if(element.type==='century'){const elementLeft=getAdjustedPosition(element.year);const elementCenter=elementLeft+pixelsPerYear*100/2;// 100 лет = 1 век\nconst distance=Math.abs(elementCenter-centerX);if(distance<minDistance){minDistance=distance;closestElement=element;}}});return closestElement;};const currentCentury=getCenturyAtCenter();// Используем forceUpdate для принудительного пересчета при скролле\nconst _=forceUpdate;if(!currentCentury||currentCentury.type!=='century'){return null;}const year=currentCentury.year;const centerYear=year+50;// Центр века\nconst centuryNumber=getCenturyNumber(centerYear);const isNegativeCentury=year<0;const romanNumeral=isNegativeCentury?`-${toRomanNumeral(Math.abs(centuryNumber))}`:toRomanNumeral(centuryNumber);return/*#__PURE__*/_jsxs(\"div\",{style:{position:'fixed',top:'50%',left:'50%',transform:'translate(-50%, -50%)',zIndex:1000,pointerEvents:'none',background:'rgba(44, 24, 16, 0.9)',border:'2px solid rgba(244, 228, 193, 0.3)',borderRadius:'12px',padding:'1rem 1.5rem',boxShadow:'0 8px 32px rgba(0, 0, 0, 0.5)',backdropFilter:'blur(8px)',minWidth:'120px',textAlign:'center'},children:[/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'2.5rem',fontWeight:'bold',color:'rgba(244, 228, 193, 0.9)',textShadow:'2px 2px 4px rgba(0, 0, 0, 0.8)',fontFamily:'serif',marginBottom:'0.5rem'},children:romanNumeral}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'0.9rem',color:'rgba(244, 228, 193, 0.7)',fontWeight:'normal'},children:[year,\" - \",year+99,\" \\u0433\\u0433.\"]})]});};export const Timeline=_ref2=>{let{isLoading,timelineWidth,totalHeight,centuryBoundaries,minYear,pixelsPerYear,LEFT_PADDING_PX,rowPlacement,filters,groupingType,categoryDividers,getGroupColor,getGroupColorDark,getGroupColorMuted,getPersonGroup,hoveredPerson,setHoveredPerson,mousePosition,setMousePosition,showTooltip,setShowTooltip,handlePersonHover,activeAchievementMarker,setActiveAchievementMarker,hoveredAchievement,setHoveredAchievement,achievementTooltipPosition,setAchievementTooltipPosition,showAchievementTooltip,setShowAchievementTooltip,hoverTimerRef,sortedData,selectedPerson,setSelectedPerson}=_ref2;const isMobile=useMobile();// Функция для определения пустых веков на основе отфильтрованных данных\nconst getEmptyCenturies=()=>{if(!sortedData||sortedData.length===0)return new Set();// Используем отфильтрованные данные для определения диапазона\nconst minYear=Math.min(...sortedData.map(p=>p.birthYear));const maxYear=Math.max(...sortedData.map(p=>p.deathYear));const startCentury=Math.floor(minYear/100)*100;const endCentury=Math.ceil(maxYear/100)*100;const emptyCenturies=new Set();for(let centuryStart=startCentury;centuryStart<=endCentury;centuryStart+=100){const centuryEnd=centuryStart+99;const hasDataInCentury=sortedData.some(person=>person.birthYear<=centuryEnd&&person.deathYear>=centuryStart);if(!hasDataInCentury){emptyCenturies.add(centuryStart);}}return emptyCenturies;};// Создаем массив для отображения веков с промежутками\nconst getTimelineElements=()=>{if(!filters.hideEmptyCenturies){return centuryBoundaries.map(year=>({type:'century',year}));}const emptyCenturies=getEmptyCenturies();const visibleCenturies=centuryBoundaries.filter(year=>!emptyCenturies.has(year));const elements=[];for(let i=0;i<visibleCenturies.length;i++){const currentYear=visibleCenturies[i];// Добавляем промежуток перед веком (кроме первого)\nif(i>0){const prevYear=visibleCenturies[i-1];const gapStart=prevYear+100;const gapEnd=currentYear;// Находим все скрытые века в промежутке\nconst hiddenCenturies=[];for(let year=gapStart;year<gapEnd;year+=100){if(emptyCenturies.has(year)){hiddenCenturies.push(year);}}if(hiddenCenturies.length>0){elements.push({type:'gap',startYear:gapStart,endYear:gapEnd,hiddenCenturies});}}// Добавляем сам век\nelements.push({type:'century',year:currentYear});}return elements;};const timelineElements=getTimelineElements();// Функция для вычисления позиции с учетом промежутков\nconst getAdjustedPosition=year=>{if(!filters.hideEmptyCenturies){return getPosition(year,minYear,pixelsPerYear,LEFT_PADDING_PX);}// Находим позицию года в оригинальной шкале\nconst originalPosition=getPosition(year,minYear,pixelsPerYear,LEFT_PADDING_PX);// Вычисляем смещение, проходя по всем промежуткам до этого года\nlet totalOffset=0;for(const element of timelineElements){if(element.type==='gap'){const gapStart=getPosition(element.startYear,minYear,pixelsPerYear,LEFT_PADDING_PX);const gapEnd=getPosition(element.endYear,minYear,pixelsPerYear,LEFT_PADDING_PX);const originalGapWidth=gapEnd-gapStart;const newGapWidth=pixelsPerYear*10;// 10 лет\n// Если год находится после этого промежутка, добавляем смещение\nif(year>=element.endYear){totalOffset+=originalGapWidth-newGapWidth;}}}return originalPosition-totalOffset;};// Функция для вычисления ширины с учетом промежутков\nconst getAdjustedWidth=(startYear,endYear)=>{if(!filters.hideEmptyCenturies){return getWidth(startYear,endYear,pixelsPerYear);}const startPos=getAdjustedPosition(startYear);const endPos=getAdjustedPosition(endYear);return endPos-startPos;};// Функция для вычисления скорректированной ширины таймлайна\nconst getAdjustedTimelineWidth=()=>{if(!filters.hideEmptyCenturies){return timelineWidth;}// Вычисляем общую ширину, проходя по всем элементам\nlet totalWidth=0;for(const element of timelineElements){if(element.type==='century'){// Век занимает 100 лет\ntotalWidth+=pixelsPerYear*100;}else if(element.type==='gap'){// Промежуток занимает 10 лет\ntotalWidth+=pixelsPerYear*10;}}return totalWidth+LEFT_PADDING_PX+50;// Добавляем отступы\n};return/*#__PURE__*/_jsxs(_Fragment,{children:[isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading-overlay\",role:\"status\",\"aria-live\":\"polite\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\",\"aria-hidden\":\"true\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"timeline-content\",id:\"timeline-content\",role:\"presentation\",\"aria-hidden\":\"true\",style:{position:'relative',height:'100%',overflow:'visible',padding:isMobile?'0':'1rem 0 2rem 0'},children:[/*#__PURE__*/_jsx(\"div\",{className:\"timeline-background\",id:\"timeline-background\",role:\"presentation\",\"aria-hidden\":\"true\",style:{position:'absolute',top:'0',left:'0',width:`${getAdjustedTimelineWidth()}px`,height:`${totalHeight+200}px`,pointerEvents:'none',zIndex:1},children:timelineElements.map((element,index)=>{if(element.type==='century'){const year=element.year;// Каждый век занимает ровно 100 лет\nconst nextYear=year+100;const startPos=getAdjustedPosition(year);const endPos=getAdjustedPosition(nextYear);const width=endPos-startPos;// Вычисляем век на основе центра года в столетии\nconst centerYear=year+50;const centuryNumber=getCenturyNumber(centerYear);// Для отрицательных веков добавляем знак минус\nconst isNegativeCentury=year<0;const romanNumeral=isNegativeCentury?`-${toRomanNumeral(Math.abs(centuryNumber))}`:toRomanNumeral(centuryNumber);return/*#__PURE__*/_jsx(\"div\",{className:\"century-background\",id:`century-${year}`,role:\"presentation\",\"aria-label\":`Век ${romanNumeral}`,style:{position:'absolute',left:`${startPos}px`,width:`${width}px`,height:'100%',background:getCenturyColor(year,minYear),opacity:0.3,zIndex:1},children:/*#__PURE__*/_jsx(\"div\",{className:\"century-label\",id:`century-label-${year}`,\"aria-label\":`Век ${romanNumeral}`,style:{position:'absolute',top:'50%',left:'50%',transform:'translate(-50%, -50%)',fontSize:'2rem',fontWeight:'bold',color:'rgba(244, 228, 193, 0.6)',textShadow:'2px 2px 4px rgba(0, 0, 0, 0.8)',pointerEvents:'none',zIndex:2,fontFamily:'serif',opacity:0// Скрываем оригинальные номера веков\n},children:romanNumeral})},`century-bg-${year}`);}else if(element.type==='gap'){var _element$hiddenCentur;// Промежуток между веками - компактный размер (1/10 века)\nconst gapWidth=pixelsPerYear*10;// 10 лет = 1/10 века\nconst startPos=getAdjustedPosition(element.startYear);return/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',left:`${startPos}px`,width:`${gapWidth}px`,height:'100%',background:'rgba(139, 69, 19, 0.1)',border:'1px dashed rgba(139, 69, 19, 0.3)',zIndex:1},children:/*#__PURE__*/_jsxs(\"div\",{style:{position:'absolute',top:'50%',left:'50%',transform:'translate(-50%, -50%)',fontSize:'0.8rem',color:'rgba(139, 69, 19, 0.7)',textAlign:'center',pointerEvents:'none',zIndex:2,fontWeight:'bold',opacity:0// Скрываем оригинальную информацию о скрытых веках\n},children:[/*#__PURE__*/_jsx(\"div\",{children:\"\\u0421\\u043A\\u0440\\u044B\\u0442\\u043E:\"}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:'0.7rem',marginTop:'2px'},children:((_element$hiddenCentur=element.hiddenCenturies)===null||_element$hiddenCentur===void 0?void 0:_element$hiddenCentur.map(year=>{const centuryNumber=getCenturyNumber(year+50);const isNegativeCentury=year<0;const romanNumeral=isNegativeCentury?`-${toRomanNumeral(Math.abs(centuryNumber))}`:toRomanNumeral(centuryNumber);return romanNumeral;}).join(', '))||''})]})},`gap-${element.startYear}`);}return null;})}),/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',top:'0',left:'0',width:`${getAdjustedTimelineWidth()}px`,height:`${totalHeight+200}px`,pointerEvents:'none',zIndex:5},children:timelineElements.map(element=>{if(element.type==='century'){return/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',left:`${getAdjustedPosition(element.year)}px`,width:'2px',height:'100%',background:'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',zIndex:5}},`century-line-${element.year}`);}else if(element.type==='gap'){return/*#__PURE__*/_jsx(\"div\",{style:{position:'absolute',left:`${getAdjustedPosition(element.startYear)}px`,width:'2px',height:'100%',background:'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',zIndex:5}},`gap-line-${element.startYear}`);}return null;})}),/*#__PURE__*/_jsx(\"div\",{className:\"category-dividers\",id:\"category-dividers\",role:\"presentation\",\"aria-hidden\":\"true\",style:{position:'absolute',top:'0',left:'0',width:`${getAdjustedTimelineWidth()}px`,height:`${totalHeight+200}px`,pointerEvents:'none',zIndex:8},children:categoryDividers.map(divider=>/*#__PURE__*/_jsx(\"div\",{className:\"category-divider\",id:`divider-${divider.category}`,role:\"separator\",\"aria-label\":`Разделитель группы: ${divider.category}`,style:{position:'absolute',top:`${divider.top}px`,left:'0',width:'100%',height:'10px',background:`linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,opacity:0.6,zIndex:8},children:/*#__PURE__*/_jsx(\"div\",{className:\"category-label\",id:`category-label-${divider.category}`,\"aria-label\":`Группа: ${divider.category}`,style:{position:'absolute',left:'20px',top:'50%',transform:'translateY(-50%)',background:getGroupColor(divider.category),color:'white',padding:'2px 8px',borderRadius:'4px',fontSize:'0.7rem',fontWeight:'bold',whiteSpace:'nowrap',zIndex:9},children:divider.category})},`category-divider-${divider.category}`))}),/*#__PURE__*/_jsx(\"div\",{className:\"person-timeline\",id:\"person-timeline\",role:\"list\",\"aria-label\":\"\\u0412\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043B\\u0438\\u043D\\u0438\\u0438 \\u0438\\u0441\\u0442\\u043E\\u0440\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0445 \\u043B\\u0438\\u0447\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\",style:{position:'relative',width:`${getAdjustedTimelineWidth()}px`,height:`${totalHeight+60}px`,zIndex:10},children:rowPlacement.map((row,rowIndex)=>/*#__PURE__*/_jsx(\"div\",{className:\"timeline-row\",id:`timeline-row-${rowIndex}`,role:\"listitem\",\"aria-label\":`Строка ${rowIndex+1} временной линии`,style:{position:'relative',height:row.length===0?'20px':'60px',marginBottom:row.length===0?'0px':'10px'},children:row.map(person=>/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"span\",{className:\"birth-year-label\",id:`birth-year-${person.id}`,\"aria-label\":`Год рождения: ${person.birthYear}`,style:{position:'absolute',left:`${getAdjustedPosition(person.birthYear)}px`,top:0,fontSize:'11px',color:'rgba(244, 228, 193, 0.6)',fontStyle:'italic',fontWeight:400,transform:'translateX(-100%) translateY(-10px)'},children:person.birthYear}),person.reignStart&&/*#__PURE__*/_jsxs(\"span\",{className:\"reign-label\",id:`reign-start-${person.id}`,\"aria-label\":`Начало правления: ${person.reignStart}`,style:{position:'absolute',left:`${getAdjustedPosition(person.reignStart)}px`,top:0,fontSize:'11px',color:'#E57373',// Темно-красный\nfontStyle:'italic',fontWeight:'bold',transform:'translateX(-100%) translateY(-22px)'},children:[\"\\uD83D\\uDC51 \",person.reignStart]}),person.reignEnd&&/*#__PURE__*/_jsx(\"span\",{className:\"reign-label\",id:`reign-end-${person.id}`,\"aria-label\":`Конец правления: ${person.reignEnd}`,style:{position:'absolute',left:`${getAdjustedPosition(person.reignEnd)}px`,top:0,fontSize:'11px',color:'#E57373',// Темно-красный\nfontStyle:'italic',fontWeight:'bold',transform:'translateY(-22px)'},children:person.reignEnd}),/*#__PURE__*/_jsx(\"span\",{className:\"death-year-label\",id:`death-year-${person.id}`,\"aria-label\":`Год смерти: ${person.deathYear}`,style:{position:'absolute',left:`${getAdjustedPosition(person.deathYear)}px`,top:0,fontSize:'11px',color:'rgba(244, 228, 193, 0.6)',fontStyle:'italic',fontWeight:400,transform:'translateY(-10px)'},children:person.deathYear}),filters.showAchievements&&[person.achievementYear1,person.achievementYear2,person.achievementYear3].filter(year=>year!==undefined&&year!==null).map((year,index)=>{return/*#__PURE__*/_jsx(\"div\",{className:\"achievement-marker\",id:`achievement-${person.id}-${index}`,role:\"button\",\"aria-label\":`Достижение ${index+1} в ${year} году`,tabIndex:0,style:{position:'absolute',left:`${getAdjustedPosition(year)}px`,top:'-4px',width:'2px',// Возвращаем стандартную ширину\nheight:'15px',// Возвращаем стандартную высоту\nbackgroundColor:getGroupColorDark(getPersonGroup(person)),zIndex:(activeAchievementMarker===null||activeAchievementMarker===void 0?void 0:activeAchievementMarker.personId)===person.id&&(activeAchievementMarker===null||activeAchievementMarker===void 0?void 0:activeAchievementMarker.index)===index?10:3,transform:'translateX(-50%)',cursor:'pointer',transition:'all 0.2s ease'// Убираем псевдоэлементы, так как они не работают в inline стилях\n},onMouseEnter:e=>{if(!isMobile){e.currentTarget.style.backgroundColor=getGroupColor(getPersonGroup(person));e.currentTarget.style.boxShadow=`0 0 3px ${getGroupColor(getPersonGroup(person))}`;// Устанавливаем активный маркер\nsetActiveAchievementMarker({personId:person.id,index});// Очищаем предыдущий таймер если он есть\nif(hoverTimerRef.current){clearTimeout(hoverTimerRef.current);}// Запускаем таймер для показа tooltip\nhoverTimerRef.current=setTimeout(()=>{setAchievementTooltipPosition({x:e.clientX,y:e.clientY});setHoveredAchievement({person,year:year,index});setShowAchievementTooltip(true);},500);}},onMouseLeave:e=>{if(!isMobile){e.currentTarget.style.backgroundColor=getGroupColorDark(getPersonGroup(person));e.currentTarget.style.boxShadow='none';// Сбрасываем активный маркер\nsetActiveAchievementMarker(null);// Очищаем таймер и скрываем tooltip\nif(hoverTimerRef.current){clearTimeout(hoverTimerRef.current);hoverTimerRef.current=null;}setShowAchievementTooltip(false);setHoveredAchievement(null);}},onMouseMove:e=>{if(!isMobile&&hoveredAchievement&&hoveredAchievement.person.id===person.id&&hoveredAchievement.index===index){setAchievementTooltipPosition({x:e.clientX,y:e.clientY});}},onTouchStart:e=>{if(isMobile){e.preventDefault();e.currentTarget.style.backgroundColor=getGroupColor(getPersonGroup(person));e.currentTarget.style.boxShadow=`0 0 3px ${getGroupColor(getPersonGroup(person))}`;// Устанавливаем активный маркер\nsetActiveAchievementMarker({personId:person.id,index});// Показываем tooltip сразу на мобильных\nconst touch=e.touches[0];setAchievementTooltipPosition({x:touch.clientX,y:touch.clientY});setHoveredAchievement({person,year:year,index});setShowAchievementTooltip(true);}},onTouchEnd:e=>{if(isMobile){// Убираем визуальные эффекты при отпускании, но НЕ скрываем tooltip\ne.currentTarget.style.backgroundColor=getGroupColorDark(getPersonGroup(person));e.currentTarget.style.boxShadow='none';// Сбрасываем активный маркер\nsetActiveAchievementMarker(null);// НЕ скрываем tooltip - он будет скрыт только по клику вне или по кнопке закрытия\n}},onKeyDown:e=>{if(e.key==='Enter'||e.key===' '){e.preventDefault();// Показываем tooltip при нажатии Enter или Space\nsetHoveredAchievement({person,year:year,index});// Используем позицию элемента для tooltip при нажатии клавиши\nconst rect=e.currentTarget.getBoundingClientRect();setAchievementTooltipPosition({x:rect.left+rect.width/2,y:rect.top-10});setShowAchievementTooltip(true);}},children:/*#__PURE__*/_jsx(\"span\",{style:{position:'absolute',top:'-12px',left:'50%',transform:'translateX(-50%)',fontSize:'8px',color:getGroupColorDark(getPersonGroup(person)),fontWeight:'bold',whiteSpace:'nowrap',backgroundColor:'rgba(44, 24, 16, 0.9)',padding:'1px 3px',borderRadius:'2px',border:`1px solid ${getGroupColorDark(getPersonGroup(person))}`,transition:'all 0.2s ease'},children:year})},index);}),person.reignStart&&person.reignEnd&&/*#__PURE__*/_jsx(\"div\",{className:\"reign-bar\",id:`reign-bar-${person.id}`,role:\"presentation\",\"aria-label\":`Период правления: ${person.reignStart} - ${person.reignEnd}`,style:{position:'absolute',top:'-15px',left:`${getAdjustedPosition(person.reignStart)}px`,width:`${getAdjustedWidth(person.reignStart,person.reignEnd)}px`,height:'65px',backgroundColor:'rgba(211, 47, 47, 0.25)',pointerEvents:'none',borderLeft:'2px solid #D32F2F',borderRight:'2px solid #D32F2F',borderRadius:'3px',zIndex:1}}),/*#__PURE__*/_jsx(\"div\",{className:\"life-bar\",id:`life-bar-${person.id}`,role:\"button\",\"aria-label\":`${person.name}, ${person.birthYear} - ${person.deathYear}, ${person.category}`,tabIndex:0,style:{position:'absolute',top:'10px',left:`${getAdjustedPosition(person.birthYear)}px`,width:`${getAdjustedWidth(person.birthYear,person.deathYear)}px`,height:'40px',background:`linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,borderRadius:'6px',cursor:'pointer',display:'flex',alignItems:'center',padding:'0 12px',color:'white',fontSize:'14px',fontWeight:'bold',minWidth:'60px',boxShadow:'0 2px 8px rgba(0,0,0,0.15)',border:'1.5px solid #a8926a',opacity:(selectedPerson===null||selectedPerson===void 0?void 0:selectedPerson.id)===person.id?0.8:1,zIndex:5,transform:(selectedPerson===null||selectedPerson===void 0?void 0:selectedPerson.id)===person.id?'scale(1.05)':'scale(1)',transition:'all 0.2s ease'},onMouseEnter:e=>{if(!isMobile){e.currentTarget.style.transform='translateY(-3px) scale(1.02)';e.currentTarget.style.boxShadow='0 8px 25px rgba(0, 0, 0, 0.4)';e.currentTarget.style.borderColor='rgba(255, 255, 255, 0.4)';// Используем handlePersonHover для правильной обработки\nhandlePersonHover(person,e.clientX,e.clientY);}},onMouseLeave:e=>{if(!isMobile){e.currentTarget.style.transform=(selectedPerson===null||selectedPerson===void 0?void 0:selectedPerson.id)===person.id?'scale(1.05)':'translateY(0) scale(1)';e.currentTarget.style.boxShadow='0 4px 12px rgba(0, 0, 0, 0.3)';e.currentTarget.style.borderColor='rgba(255, 255, 255, 0.2)';// Используем handlePersonHover для правильной обработки с задержкой\nhandlePersonHover(null,0,0);}},onMouseMove:e=>{if(!isMobile&&(hoveredPerson===null||hoveredPerson===void 0?void 0:hoveredPerson.id)===person.id){setMousePosition({x:e.clientX,y:e.clientY});}},onKeyDown:e=>{if(e.key==='Enter'||e.key===' '){e.preventDefault();if(isMobile){setSelectedPerson(person);}else{setHoveredPerson(person);setShowTooltip(true);}}},onClick:()=>{if(isMobile){setSelectedPerson(person);}},children:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',flexDirection:'column',lineHeight:'1.2'},children:/*#__PURE__*/_jsx(\"span\",{children:person.name})})})]},person.id))},rowIndex))})]}),/*#__PURE__*/_jsx(CenturyInfoOverlay,{timelineElements:timelineElements,getAdjustedPosition:getAdjustedPosition,getCenturyNumber:getCenturyNumber,toRomanNumeral:toRomanNumeral,minYear:minYear,getCenturyColor:getCenturyColor,pixelsPerYear:pixelsPerYear,getAdjustedTimelineWidth:getAdjustedTimelineWidth})]});};","map":{"version":3,"names":["React","useEffect","useState","useMobile","getPosition","getWidth","getCenturyColor","getCenturyNumber","toRomanNumeral","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","CenturyInfoOverlay","_ref","timelineElements","getAdjustedPosition","minYear","pixelsPerYear","getAdjustedTimelineWidth","forceUpdate","setForceUpdate","handleScroll","prev","handleResize","window","addEventListener","removeEventListener","getCenturyAtCenter","timelineContainer","document","querySelector","containerRect","getBoundingClientRect","centerX","left","width","closestElement","minDistance","Infinity","forEach","element","type","elementLeft","year","elementCenter","distance","Math","abs","currentCentury","_","centerYear","centuryNumber","isNegativeCentury","romanNumeral","style","position","top","transform","zIndex","pointerEvents","background","border","borderRadius","padding","boxShadow","backdropFilter","minWidth","textAlign","children","fontSize","fontWeight","color","textShadow","fontFamily","marginBottom","Timeline","_ref2","isLoading","timelineWidth","totalHeight","centuryBoundaries","LEFT_PADDING_PX","rowPlacement","filters","groupingType","categoryDividers","getGroupColor","getGroupColorDark","getGroupColorMuted","getPersonGroup","hoveredPerson","setHoveredPerson","mousePosition","setMousePosition","showTooltip","setShowTooltip","handlePersonHover","activeAchievementMarker","setActiveAchievementMarker","hoveredAchievement","setHoveredAchievement","achievementTooltipPosition","setAchievementTooltipPosition","showAchievementTooltip","setShowAchievementTooltip","hoverTimerRef","sortedData","selectedPerson","setSelectedPerson","isMobile","getEmptyCenturies","length","Set","min","map","p","birthYear","maxYear","max","deathYear","startCentury","floor","endCentury","ceil","emptyCenturies","centuryStart","centuryEnd","hasDataInCentury","some","person","add","getTimelineElements","hideEmptyCenturies","visibleCenturies","filter","has","elements","i","currentYear","prevYear","gapStart","gapEnd","hiddenCenturies","push","startYear","endYear","originalPosition","totalOffset","originalGapWidth","newGapWidth","getAdjustedWidth","startPos","endPos","totalWidth","className","role","id","height","overflow","index","nextYear","opacity","_element$hiddenCentur","gapWidth","marginTop","join","divider","category","whiteSpace","row","rowIndex","fontStyle","reignStart","reignEnd","showAchievements","achievementYear1","achievementYear2","achievementYear3","undefined","tabIndex","backgroundColor","personId","cursor","transition","onMouseEnter","e","currentTarget","current","clearTimeout","setTimeout","x","clientX","y","clientY","onMouseLeave","onMouseMove","onTouchStart","preventDefault","touch","touches","onTouchEnd","onKeyDown","key","rect","borderLeft","borderRight","name","display","alignItems","borderColor","onClick","flexDirection","lineHeight"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/components/Timeline.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useMobile } from '../hooks/useMobile'\nimport { Person } from '../types'\nimport { \n  getPosition, \n  getWidth, \n  getCenturyColor, \n  getCenturyNumber, \n  toRomanNumeral\n} from '../utils/timelineUtils'\n\ninterface TimelineProps {\n  isLoading: boolean\n  timelineWidth: number\n  totalHeight: number\n  centuryBoundaries: number[]\n  minYear: number\n  pixelsPerYear: number\n  LEFT_PADDING_PX: number\n  rowPlacement: Person[][]\n  filters: {\n    showAchievements: boolean\n    hideEmptyCenturies: boolean\n  }\n  groupingType: 'category' | 'country' | 'none'\n  categoryDividers: { category: string; top: number }[]\n  getGroupColor: (groupName: string) => string\n  getGroupColorDark: (groupName: string) => string\n  getGroupColorMuted: (groupName: string) => string\n  getPersonGroup: (person: Person) => string\n  hoveredPerson: Person | null\n  setHoveredPerson: (person: Person | null) => void\n  mousePosition: { x: number; y: number }\n  setMousePosition: (position: { x: number; y: number }) => void\n  showTooltip: boolean\n  setShowTooltip: (show: boolean) => void\n  handlePersonHover: (person: Person | null, x: number, y: number) => void\n  activeAchievementMarker: { personId: string; index: number } | null\n  setActiveAchievementMarker: (marker: { personId: string; index: number } | null) => void\n  hoveredAchievement: { person: Person; year: number; index: number } | null\n  setHoveredAchievement: (achievement: { person: Person; year: number; index: number } | null) => void\n  achievementTooltipPosition: { x: number; y: number }\n  setAchievementTooltipPosition: (position: { x: number; y: number }) => void\n  showAchievementTooltip: boolean\n  setShowAchievementTooltip: (show: boolean) => void\n  hoverTimerRef: React.MutableRefObject<NodeJS.Timeout | null>\n  sortedData: any[]\n  selectedPerson: Person | null\n  setSelectedPerson: (person: Person | null) => void\n}\n\n// Типы для элементов временной линии\ntype TimelineElement = \n  | { type: 'century'; year: number }\n  | { type: 'gap'; startYear: number; endYear: number; hiddenCenturies: number[] }\n\n// Новый компонент для отображения информации о веках в центре экрана\nconst CenturyInfoOverlay: React.FC<{\n  timelineElements: TimelineElement[]\n  getAdjustedPosition: (year: number) => number\n  getCenturyNumber: (year: number) => number\n  toRomanNumeral: (num: number) => string\n  minYear: number\n  getCenturyColor: (year: number, minYear: number) => string\n  pixelsPerYear: number\n  getAdjustedTimelineWidth: () => number\n}> = ({ \n  timelineElements, \n  getAdjustedPosition, \n  getCenturyNumber, \n  toRomanNumeral, \n  minYear, \n  getCenturyColor,\n  pixelsPerYear,\n  getAdjustedTimelineWidth\n}) => {\n  const [forceUpdate, setForceUpdate] = useState(0);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      // Принудительно обновляем компонент при скролле\n      setForceUpdate(prev => prev + 1);\n    };\n\n    const handleResize = () => {\n      // Принудительно обновляем компонент при изменении размера окна\n      setForceUpdate(prev => prev + 1);\n    };\n\n    window.addEventListener('scroll', handleScroll);\n    window.addEventListener('resize', handleResize);\n    \n    return () => {\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Находим элемент века, который находится в центре экрана\n  const getCenturyAtCenter = (): TimelineElement | null => {\n    const timelineContainer = document.querySelector('.timeline-container');\n    if (!timelineContainer) return null;\n\n    const containerRect = timelineContainer.getBoundingClientRect();\n    const centerX = containerRect.left + containerRect.width / 2;\n    \n    // Находим элемент века, который находится ближе всего к центру\n    let closestElement: TimelineElement | null = null;\n    let minDistance = Infinity;\n\n    timelineElements.forEach(element => {\n      if (element.type === 'century') {\n        const elementLeft = getAdjustedPosition(element.year);\n        const elementCenter = elementLeft + (pixelsPerYear * 100) / 2; // 100 лет = 1 век\n        const distance = Math.abs(elementCenter - centerX);\n        \n        if (distance < minDistance) {\n          minDistance = distance;\n          closestElement = element;\n        }\n      }\n    });\n\n    return closestElement;\n  };\n\n  const currentCentury = getCenturyAtCenter();\n  // Используем forceUpdate для принудительного пересчета при скролле\n  const _ = forceUpdate;\n\n  if (!currentCentury || currentCentury.type !== 'century') {\n    return null;\n  }\n\n  const year = currentCentury.year;\n  const centerYear = year + 50; // Центр века\n  const centuryNumber = getCenturyNumber(centerYear);\n  const isNegativeCentury = year < 0;\n  const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n\n  return (\n    <div\n      style={{\n        position: 'fixed',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        zIndex: 1000,\n        pointerEvents: 'none',\n        background: 'rgba(44, 24, 16, 0.9)',\n        border: '2px solid rgba(244, 228, 193, 0.3)',\n        borderRadius: '12px',\n        padding: '1rem 1.5rem',\n        boxShadow: '0 8px 32px rgba(0, 0, 0, 0.5)',\n        backdropFilter: 'blur(8px)',\n        minWidth: '120px',\n        textAlign: 'center'\n      }}\n    >\n      <div style={{\n        fontSize: '2.5rem',\n        fontWeight: 'bold',\n        color: 'rgba(244, 228, 193, 0.9)',\n        textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n        fontFamily: 'serif',\n        marginBottom: '0.5rem'\n      }}>\n        {romanNumeral}\n      </div>\n      <div style={{\n        fontSize: '0.9rem',\n        color: 'rgba(244, 228, 193, 0.7)',\n        fontWeight: 'normal'\n      }}>\n        {year} - {year + 99} гг.\n      </div>\n    </div>\n  );\n};\n\nexport const Timeline: React.FC<TimelineProps> = ({\n  isLoading,\n  timelineWidth,\n  totalHeight,\n  centuryBoundaries,\n  minYear,\n  pixelsPerYear,\n  LEFT_PADDING_PX,\n  rowPlacement,\n  filters,\n  groupingType,\n  categoryDividers,\n  getGroupColor,\n  getGroupColorDark,\n  getGroupColorMuted,\n  getPersonGroup,\n  hoveredPerson,\n  setHoveredPerson,\n  mousePosition,\n  setMousePosition,\n  showTooltip,\n  setShowTooltip,\n  handlePersonHover,\n  activeAchievementMarker,\n  setActiveAchievementMarker,\n  hoveredAchievement,\n  setHoveredAchievement,\n  achievementTooltipPosition,\n  setAchievementTooltipPosition,\n  showAchievementTooltip,\n  setShowAchievementTooltip,\n  hoverTimerRef,\n  sortedData,\n  selectedPerson,\n  setSelectedPerson\n}) => {\n  const isMobile = useMobile()\n\n  // Функция для определения пустых веков на основе отфильтрованных данных\n  const getEmptyCenturies = () => {\n    if (!sortedData || sortedData.length === 0) return new Set();\n    \n    // Используем отфильтрованные данные для определения диапазона\n    const minYear = Math.min(...sortedData.map(p => p.birthYear));\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear));\n    \n    const startCentury = Math.floor(minYear / 100) * 100;\n    const endCentury = Math.ceil(maxYear / 100) * 100;\n    \n    const emptyCenturies = new Set<number>();\n    \n    for (let centuryStart = startCentury; centuryStart <= endCentury; centuryStart += 100) {\n      const centuryEnd = centuryStart + 99;\n      const hasDataInCentury = sortedData.some(person => \n        (person.birthYear <= centuryEnd && person.deathYear >= centuryStart)\n      );\n      \n      if (!hasDataInCentury) {\n        emptyCenturies.add(centuryStart);\n      }\n    }\n    \n    return emptyCenturies;\n  };\n\n  // Создаем массив для отображения веков с промежутками\n  const getTimelineElements = (): TimelineElement[] => {\n    if (!filters.hideEmptyCenturies) {\n      return centuryBoundaries.map(year => ({ type: 'century', year }));\n    }\n\n    const emptyCenturies = getEmptyCenturies();\n    const visibleCenturies = centuryBoundaries.filter(year => !emptyCenturies.has(year));\n    \n    const elements: TimelineElement[] = [];\n    \n    for (let i = 0; i < visibleCenturies.length; i++) {\n      const currentYear = visibleCenturies[i];\n      \n      // Добавляем промежуток перед веком (кроме первого)\n      if (i > 0) {\n        const prevYear = visibleCenturies[i - 1];\n        const gapStart = prevYear + 100;\n        const gapEnd = currentYear;\n        \n        // Находим все скрытые века в промежутке\n        const hiddenCenturies: number[] = [];\n        for (let year = gapStart; year < gapEnd; year += 100) {\n          if (emptyCenturies.has(year)) {\n            hiddenCenturies.push(year);\n          }\n        }\n        \n        if (hiddenCenturies.length > 0) {\n          elements.push({\n            type: 'gap',\n            startYear: gapStart,\n            endYear: gapEnd,\n            hiddenCenturies\n          });\n        }\n      }\n      \n      // Добавляем сам век\n      elements.push({ type: 'century', year: currentYear });\n    }\n    \n    return elements;\n  };\n\n  const timelineElements = getTimelineElements();\n\n  // Функция для вычисления позиции с учетом промежутков\n  const getAdjustedPosition = (year: number) => {\n    if (!filters.hideEmptyCenturies) {\n      return getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    }\n\n    // Находим позицию года в оригинальной шкале\n    const originalPosition = getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    \n    // Вычисляем смещение, проходя по всем промежуткам до этого года\n    let totalOffset = 0;\n    \n    for (const element of timelineElements) {\n      if (element.type === 'gap') {\n        const gapStart = getPosition(element.startYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const gapEnd = getPosition(element.endYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const originalGapWidth = gapEnd - gapStart;\n        const newGapWidth = pixelsPerYear * 10; // 10 лет\n        \n        // Если год находится после этого промежутка, добавляем смещение\n        if (year >= element.endYear) {\n          totalOffset += (originalGapWidth - newGapWidth);\n        }\n      }\n    }\n    \n    return originalPosition - totalOffset;\n  };\n\n  // Функция для вычисления ширины с учетом промежутков\n  const getAdjustedWidth = (startYear: number, endYear: number) => {\n    if (!filters.hideEmptyCenturies) {\n      return getWidth(startYear, endYear, pixelsPerYear);\n    }\n\n    const startPos = getAdjustedPosition(startYear);\n    const endPos = getAdjustedPosition(endYear);\n    return endPos - startPos;\n  };\n\n  // Функция для вычисления скорректированной ширины таймлайна\n  const getAdjustedTimelineWidth = () => {\n    if (!filters.hideEmptyCenturies) {\n      return timelineWidth;\n    }\n\n    // Вычисляем общую ширину, проходя по всем элементам\n    let totalWidth = 0;\n    \n    for (const element of timelineElements) {\n      if (element.type === 'century') {\n        // Век занимает 100 лет\n        totalWidth += pixelsPerYear * 100;\n      } else if (element.type === 'gap') {\n        // Промежуток занимает 10 лет\n        totalWidth += pixelsPerYear * 10;\n      }\n    }\n\n    return totalWidth + LEFT_PADDING_PX + 50; // Добавляем отступы\n  };\n\n  return (\n    <>\n      {isLoading && (\n        <div className=\"loading-overlay\" role=\"status\" aria-live=\"polite\">\n          <div className=\"spinner\" aria-hidden=\"true\"></div>\n          <span>Загрузка данных...</span>\n        </div>\n      )}\n      \n      {/* Временная линия на весь экран */}\n      <div \n        className=\"timeline-content\" \n        id=\"timeline-content\"\n        role=\"presentation\" \n        aria-hidden=\"true\"\n        style={{ \n          position: 'relative', \n          height: '100%',\n          overflow: 'visible',\n          padding: isMobile ? '0' : '1rem 0 2rem 0'\n        }}\n      >\n        {/* Разноцветная заливка веков */}\n        <div \n          className=\"timeline-background\"\n          id=\"timeline-background\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${getAdjustedTimelineWidth()}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 1\n          }}\n        >\n          {timelineElements.map((element, index) => {\n                         if (element.type === 'century') {\n               const year = element.year;\n               // Каждый век занимает ровно 100 лет\n               const nextYear = year + 100\n               const startPos = getAdjustedPosition(year)\n               const endPos = getAdjustedPosition(nextYear)\n               const width = endPos - startPos\n\n              // Вычисляем век на основе центра года в столетии\n              const centerYear = year + 50\n              const centuryNumber = getCenturyNumber(centerYear)\n              // Для отрицательных веков добавляем знак минус\n              const isNegativeCentury = year < 0\n              const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber)\n              \n              return (\n                <div \n                  key={`century-bg-${year}`} \n                  className=\"century-background\"\n                  id={`century-${year}`}\n                  role=\"presentation\"\n                  aria-label={`Век ${romanNumeral}`}\n                  style={{\n                    position: 'absolute',\n                    left: `${startPos}px`,\n                    width: `${width}px`,\n                    height: '100%',\n                    background: getCenturyColor(year, minYear),\n                    opacity: 0.3,\n                    zIndex: 1\n                  }}\n                >\n                  {/* Римская цифра века в центре - скрыта, так как теперь отображается в фиксированном оверлее */}\n                  <div \n                    className=\"century-label\" \n                    id={`century-label-${year}`}\n                    aria-label={`Век ${romanNumeral}`}\n                    style={{\n                      position: 'absolute',\n                      top: '50%',\n                      left: '50%',\n                      transform: 'translate(-50%, -50%)',\n                      fontSize: '2rem',\n                      fontWeight: 'bold',\n                      color: 'rgba(244, 228, 193, 0.6)',\n                      textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n                      pointerEvents: 'none',\n                      zIndex: 2,\n                      fontFamily: 'serif',\n                      opacity: 0 // Скрываем оригинальные номера веков\n                    }}\n                  >\n                    {romanNumeral}\n                  </div>\n                </div>\n              )\n                                                   } else if (element.type === 'gap') {\n                // Промежуток между веками - компактный размер (1/10 века)\n                const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n                const startPos = getAdjustedPosition(element.startYear)\n               \n               return (\n                 <div key={`gap-${element.startYear}`} style={{\n                   position: 'absolute',\n                   left: `${startPos}px`,\n                   width: `${gapWidth}px`,\n                   height: '100%',\n                   background: 'rgba(139, 69, 19, 0.1)',\n                   border: '1px dashed rgba(139, 69, 19, 0.3)',\n                   zIndex: 1\n                 }}>\n                  {/* Информация о скрытых веках - скрыта, так как теперь отображается в фиксированном оверлее */}\n                  <div style={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    fontSize: '0.8rem',\n                    color: 'rgba(139, 69, 19, 0.7)',\n                    textAlign: 'center',\n                    pointerEvents: 'none',\n                    zIndex: 2,\n                    fontWeight: 'bold',\n                    opacity: 0 // Скрываем оригинальную информацию о скрытых веках\n                  }}>\n                                         <div>Скрыто:</div>\n                     <div style={{ fontSize: '0.7rem', marginTop: '2px' }}>\n                       {element.hiddenCenturies?.map(year => {\n                         const centuryNumber = getCenturyNumber(year + 50);\n                         const isNegativeCentury = year < 0;\n                         const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n                         return romanNumeral;\n                       }).join(', ') || ''}\n                     </div>\n                  </div>\n                </div>\n              )\n            }\n            return null;\n          })}\n        </div>\n\n                 {/* Границы веков и промежутков на всю высоту */}\n         <div style={{\n           position: 'absolute',\n           top: '0',\n           left: '0',\n           width: `${getAdjustedTimelineWidth()}px`,\n           height: `${totalHeight + 200}px`,\n           pointerEvents: 'none',\n           zIndex: 5\n         }}>\n                      {timelineElements.map((element) => {\n              if (element.type === 'century') {\n                return (\n                  <div key={`century-line-${element.year}`} style={{\n                    position: 'absolute',\n                    left: `${getAdjustedPosition(element.year)}px`,\n                    width: '2px',\n                    height: '100%',\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                    zIndex: 5\n                  }} />\n                );\n              } else if (element.type === 'gap') {\n                return (\n                  <div key={`gap-line-${element.startYear}`} style={{\n                    position: 'absolute',\n                    left: `${getAdjustedPosition(element.startYear)}px`,\n                    width: '2px',\n                    height: '100%',\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                    zIndex: 5\n                  }} />\n                );\n              }\n              return null;\n            })}\n         </div>\n\n                 {/* Разделители групп */}\n         <div \n           className=\"category-dividers\"\n           id=\"category-dividers\"\n           role=\"presentation\"\n           aria-hidden=\"true\"\n           style={{\n             position: 'absolute',\n             top: '0',\n             left: '0',\n             width: `${getAdjustedTimelineWidth()}px`,\n             height: `${totalHeight + 200}px`,\n             pointerEvents: 'none',\n             zIndex: 8\n           }}\n         >\n          {categoryDividers.map((divider) => (\n            <div \n              key={`category-divider-${divider.category}`} \n              className=\"category-divider\"\n              id={`divider-${divider.category}`}\n              role=\"separator\"\n              aria-label={`Разделитель группы: ${divider.category}`}\n              style={{\n                position: 'absolute',\n                top: `${divider.top}px`,\n                left: '0',\n                width: '100%',\n                height: '10px',\n                background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n                opacity: 0.6,\n                zIndex: 8\n              }}\n            >\n              <div \n                className=\"category-label\" \n                id={`category-label-${divider.category}`}\n                aria-label={`Группа: ${divider.category}`}\n                style={{\n                  position: 'absolute',\n                  left: '20px',\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: getGroupColor(divider.category),\n                  color: 'white',\n                  padding: '2px 8px',\n                  borderRadius: '4px',\n                  fontSize: '0.7rem',\n                  fontWeight: 'bold',\n                  whiteSpace: 'nowrap',\n                  zIndex: 9\n                }}\n              >\n                {divider.category}\n              </div>\n            </div>\n          ))}\n        </div>\n\n                 {/* Полоски жизни */}\n         <div \n           className=\"person-timeline\"\n           id=\"person-timeline\"\n           role=\"list\"\n           aria-label=\"Временные линии исторических личностей\"\n           style={{ \n             position: 'relative',\n             width: `${getAdjustedTimelineWidth()}px`,\n             height: `${totalHeight + 60}px`,\n             zIndex: 10\n           }}\n         >\n          {rowPlacement.map((row, rowIndex) => (\n            <div \n              key={rowIndex} \n              className=\"timeline-row\"\n              id={`timeline-row-${rowIndex}`}\n              role=\"listitem\"\n              aria-label={`Строка ${rowIndex + 1} временной линии`}\n              style={{\n                position: 'relative',\n                height: row.length === 0 ? '20px' : '60px',\n                marginBottom: row.length === 0 ? '0px' : '10px'\n              }}\n            >\n              {row.map((person) => (\n                <React.Fragment key={person.id}>\n                  {/* Годы жизни и правления над полоской */}\n                  <span \n                    className=\"birth-year-label\"\n                    id={`birth-year-${person.id}`}\n                    aria-label={`Год рождения: ${person.birthYear}`}\n                    style={{\n                      position: 'absolute',\n                      left: `${getAdjustedPosition(person.birthYear)}px`,\n                      top: 0,\n                      fontSize: '11px',\n                      color: 'rgba(244, 228, 193, 0.6)',\n                      fontStyle: 'italic',\n                      fontWeight: 400,\n                      transform: 'translateX(-100%) translateY(-10px)'\n                    }}\n                  >\n                    {person.birthYear}\n                  </span>\n\n                                     {person.reignStart && (\n                     <span \n                       className=\"reign-label\" \n                       id={`reign-start-${person.id}`}\n                       aria-label={`Начало правления: ${person.reignStart}`}\n                       style={{\n                         position: 'absolute',\n                         left: `${getAdjustedPosition(person.reignStart)}px`,\n                         top: 0,\n                         fontSize: '11px',\n                         color: '#E57373', // Темно-красный\n                         fontStyle: 'italic',\n                         fontWeight: 'bold',\n                         transform: 'translateX(-100%) translateY(-22px)'\n                       }}\n                     >\n                       👑 {person.reignStart}\n                     </span>\n                   )}\n\n                                     {person.reignEnd && (\n                     <span \n                       className=\"reign-label\" \n                       id={`reign-end-${person.id}`}\n                       aria-label={`Конец правления: ${person.reignEnd}`}\n                       style={{\n                         position: 'absolute',\n                         left: `${getAdjustedPosition(person.reignEnd)}px`,\n                         top: 0,\n                         fontSize: '11px',\n                         color: '#E57373', // Темно-красный\n                         fontStyle: 'italic',\n                         fontWeight: 'bold',\n                         transform: 'translateY(-22px)'\n                       }}\n                     >\n                       {person.reignEnd}\n                     </span>\n                   )}\n                  \n                                     <span \n                                       className=\"death-year-label\"\n                                       id={`death-year-${person.id}`}\n                                       aria-label={`Год смерти: ${person.deathYear}`}\n                                       style={{\n                                         position: 'absolute',\n                                         left: `${getAdjustedPosition(person.deathYear)}px`,\n                                         top: 0,\n                                         fontSize: '11px',\n                                         color: 'rgba(244, 228, 193, 0.6)',\n                                         fontStyle: 'italic',\n                                         fontWeight: 400,\n                                         transform: 'translateY(-10px)'\n                                       }}\n                                     >\n                                       {person.deathYear}\n                                     </span>\n\n                  {/* Маркеры ключевых достижений */}\n                  {filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3]\n                    .filter(year => year !== undefined && year !== null)\n                    .map((year, index) => {\n                      return (\n                        <div \n                          key={index} \n                          className=\"achievement-marker\"\n                          id={`achievement-${person.id}-${index}`}\n                          role=\"button\"\n                          aria-label={`Достижение ${index + 1} в ${year} году`}\n                          tabIndex={0}\n                          style={{\n                            position: 'absolute',\n                            left: `${getAdjustedPosition(year as number)}px`,\n                            top: '-4px',\n                            width: '2px', // Возвращаем стандартную ширину\n                            height: '15px', // Возвращаем стандартную высоту\n                            backgroundColor: getGroupColorDark(getPersonGroup(person)),\n                            zIndex: activeAchievementMarker?.personId === person.id && activeAchievementMarker?.index === index ? 10 : 3,\n                            transform: 'translateX(-50%)',\n                            cursor: 'pointer',\n                            transition: 'all 0.2s ease',\n                            // Убираем псевдоэлементы, так как они не работают в inline стилях\n                          }}\n                        onMouseEnter={(e) => {\n                          if (!isMobile) {\n                            e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n                            \n                            // Устанавливаем активный маркер\n                            setActiveAchievementMarker({ personId: person.id, index });\n                            \n                            // Очищаем предыдущий таймер если он есть\n                            if (hoverTimerRef.current) {\n                              clearTimeout(hoverTimerRef.current);\n                            }\n                            \n                            // Запускаем таймер для показа tooltip\n                            hoverTimerRef.current = setTimeout(() => {\n                              setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\n                              setHoveredAchievement({ person, year: year as number, index });\n                              setShowAchievementTooltip(true);\n                            }, 500);\n                          }\n                        }}\n                        onMouseLeave={(e) => {\n                          if (!isMobile) {\n                            e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = 'none';\n                            \n                            // Сбрасываем активный маркер\n                            setActiveAchievementMarker(null);\n                            \n                            // Очищаем таймер и скрываем tooltip\n                            if (hoverTimerRef.current) {\n                              clearTimeout(hoverTimerRef.current);\n                              hoverTimerRef.current = null;\n                            }\n                            setShowAchievementTooltip(false);\n                            setHoveredAchievement(null);\n                          }\n                        }}\n                        onMouseMove={(e) => {\n                          if (!isMobile && hoveredAchievement && hoveredAchievement.person.id === person.id && hoveredAchievement.index === index) {\n                            setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\n                          }\n                        }}\n                        onTouchStart={(e) => {\n                          if (isMobile) {\n                            e.preventDefault();\n                            e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n                            \n                            // Устанавливаем активный маркер\n                            setActiveAchievementMarker({ personId: person.id, index });\n                            \n                            // Показываем tooltip сразу на мобильных\n                            const touch = e.touches[0];\n                            setAchievementTooltipPosition({ x: touch.clientX, y: touch.clientY });\n                            setHoveredAchievement({ person, year: year as number, index });\n                            setShowAchievementTooltip(true);\n                          }\n                        }}\n                        onTouchEnd={(e) => {\n                          if (isMobile) {\n                            // Убираем визуальные эффекты при отпускании, но НЕ скрываем tooltip\n                            e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                            e.currentTarget.style.boxShadow = 'none';\n                            \n                            // Сбрасываем активный маркер\n                            setActiveAchievementMarker(null);\n                            \n                            // НЕ скрываем tooltip - он будет скрыт только по клику вне или по кнопке закрытия\n                          }\n                        }}\n                        onKeyDown={(e) => {\n                          if (e.key === 'Enter' || e.key === ' ') {\n                            e.preventDefault();\n                            // Показываем tooltip при нажатии Enter или Space\n                            setHoveredAchievement({ person, year: year as number, index });\n                            // Используем позицию элемента для tooltip при нажатии клавиши\n                            const rect = e.currentTarget.getBoundingClientRect();\n                            setAchievementTooltipPosition({ \n                              x: rect.left + rect.width / 2, \n                              y: rect.top - 10 \n                            });\n                            setShowAchievementTooltip(true);\n                          }\n                        }}\n                        >\n                          <span style={{\n                            position: 'absolute',\n                            top: '-12px',\n                            left: '50%',\n                            transform: 'translateX(-50%)',\n                            fontSize: '8px',\n                            color: getGroupColorDark(getPersonGroup(person)),\n                            fontWeight: 'bold',\n                            whiteSpace: 'nowrap',\n                            backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                            padding: '1px 3px',\n                            borderRadius: '2px',\n                            border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                            transition: 'all 0.2s ease'\n                          }}>\n                            {year}\n                          </span>\n                        </div>\n                      );\n                    })}\n\n                                     {/* полоса правления */}\n                   {person.reignStart && person.reignEnd && (\n                     <div \n                       className=\"reign-bar\"\n                       id={`reign-bar-${person.id}`}\n                       role=\"presentation\"\n                       aria-label={`Период правления: ${person.reignStart} - ${person.reignEnd}`}\n                       style={{\n                         position: 'absolute',\n                         top: '-15px',\n                         left: `${getAdjustedPosition(person.reignStart)}px`,\n                         width: `${getAdjustedWidth(person.reignStart, person.reignEnd)}px`,\n                         height: '65px',\n                         backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                         pointerEvents: 'none',\n                         borderLeft: '2px solid #D32F2F',\n                         borderRight: '2px solid #D32F2F',\n                         borderRadius: '3px',\n                         zIndex: 1\n                       }} \n                     />\n                   )}\n\n                                     <div\n                     className=\"life-bar\"\n                     id={`life-bar-${person.id}`}\n                     role=\"button\"\n                     aria-label={`${person.name}, ${person.birthYear} - ${person.deathYear}, ${person.category}`}\n                     tabIndex={0}\n                     style={{\n                       position: 'absolute',\n                       top: '10px',\n                       left: `${getAdjustedPosition(person.birthYear)}px`,\n                       width: `${getAdjustedWidth(person.birthYear, person.deathYear)}px`,\n                       height: '40px',\n                       background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                       borderRadius: '6px',\n                       cursor: 'pointer',\n                       display: 'flex',\n                       alignItems: 'center',\n                       padding: '0 12px',\n                       color: 'white',\n                       fontSize: '14px',\n                       fontWeight: 'bold',\n                       minWidth: '60px',\n                       boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                       border: '1.5px solid #a8926a',\n                       opacity: selectedPerson?.id === person.id ? 0.8 : 1,\n                       zIndex: 5,\n                       transform: selectedPerson?.id === person.id ? 'scale(1.05)' : 'scale(1)',\n                       transition: 'all 0.2s ease'\n                     }}\n                    onMouseEnter={(e) => {\n                      if (!isMobile) {\n                        e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)'\n                        e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)'\n                        // Используем handlePersonHover для правильной обработки\n                        handlePersonHover(person, e.clientX, e.clientY)\n                      }\n                    }}\n                    onMouseLeave={(e) => {\n                      if (!isMobile) {\n                        e.currentTarget.style.transform = selectedPerson?.id === person.id ? 'scale(1.05)' : 'translateY(0) scale(1)'\n                        e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)'\n                        // Используем handlePersonHover для правильной обработки с задержкой\n                        handlePersonHover(null, 0, 0)\n                      }\n                    }}\n                    onMouseMove={(e) => {\n                      if (!isMobile && hoveredPerson?.id === person.id) {\n                        setMousePosition({ x: e.clientX, y: e.clientY })\n                      }\n                    }}\n                    onKeyDown={(e) => {\n                      if (e.key === 'Enter' || e.key === ' ') {\n                        e.preventDefault();\n                        if (isMobile) {\n                          setSelectedPerson(person);\n                        } else {\n                          setHoveredPerson(person);\n                          setShowTooltip(true);\n                        }\n                      }\n                    }}\n                    onClick={() => {\n                      if (isMobile) {\n                        setSelectedPerson(person)\n                      }\n                    }}\n                  >\n                    <div style={{ display: 'flex', flexDirection: 'column', lineHeight: '1.2' }}>\n                      <span>{person.name}</span>\n                    </div>\n                  </div>\n                </React.Fragment>\n              ))}\n            </div>\n          ))}\n        </div>\n      </div>\n      <CenturyInfoOverlay \n        timelineElements={timelineElements} \n        getAdjustedPosition={getAdjustedPosition} \n        getCenturyNumber={getCenturyNumber} \n        toRomanNumeral={toRomanNumeral} \n        minYear={minYear} \n        getCenturyColor={getCenturyColor}\n        pixelsPerYear={pixelsPerYear}\n        getAdjustedTimelineWidth={getAdjustedTimelineWidth}\n      />\n    </>\n  )\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}