{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nexport const useSlider = () => {\n  _s();\n  const [isDraggingSlider, setIsDraggingSlider] = useState(false);\n  const [draggedHandle, setDraggedHandle] = useState(null);\n  const [sliderRect, setSliderRect] = useState(null);\n  const handleSliderMouseDown = useCallback((e, handle) => {\n    e.preventDefault();\n    setIsDraggingSlider(true);\n    setDraggedHandle(handle);\n\n    // Всегда ищем элемент слайдера по классу\n    const sliderElement = e.currentTarget.closest('.year-range-slider');\n    if (sliderElement) {\n      setSliderRect(sliderElement.getBoundingClientRect());\n    }\n  }, []);\n  const handleSliderMouseMove = useCallback((e, yearInputs, applyYearFilter, setYearInputs) => {\n    if (!isDraggingSlider || !draggedHandle) return;\n\n    // Получаем актуальные координаты слайдера\n    const sliderElement = document.querySelector('.year-range-slider');\n    if (!sliderElement) return;\n    const rect = sliderElement.getBoundingClientRect();\n    const clientX = 'touches' in e ? e.touches[0].clientX : e.clientX;\n    const x = clientX - rect.left;\n    const percentage = Math.max(0, Math.min(100, x / rect.width * 100));\n\n    // Преобразуем процент в год (от -800 до 2000)\n    const totalRange = 2800; // 2000 - (-800)\n    const year = Math.round(-800 + percentage / 100 * totalRange);\n\n    // Ограничиваем значения\n    const startYear = parseInt(yearInputs.start) || -800;\n    const endYear = parseInt(yearInputs.end) || 2000;\n    let newYear = year;\n    if (draggedHandle === 'start') {\n      newYear = Math.max(-800, Math.min(endYear - 100, year));\n      setYearInputs(prev => ({\n        ...prev,\n        start: newYear.toString()\n      }));\n      applyYearFilter('start', newYear.toString());\n    } else {\n      newYear = Math.max(startYear + 100, Math.min(2000, year));\n      setYearInputs(prev => ({\n        ...prev,\n        end: newYear.toString()\n      }));\n      applyYearFilter('end', newYear.toString());\n    }\n  }, [isDraggingSlider, draggedHandle]);\n  const handleSliderMouseUp = useCallback(() => {\n    setIsDraggingSlider(false);\n    setDraggedHandle(null);\n    setSliderRect(null);\n  }, []);\n  return {\n    isDraggingSlider,\n    draggedHandle,\n    sliderRect,\n    handleSliderMouseDown,\n    handleSliderMouseMove,\n    handleSliderMouseUp\n  };\n};\n_s(useSlider, \"GP8wEFBhSHIknxo4aOl8jlSMGiA=\");","map":{"version":3,"names":["useState","useCallback","useSlider","_s","isDraggingSlider","setIsDraggingSlider","draggedHandle","setDraggedHandle","sliderRect","setSliderRect","handleSliderMouseDown","e","handle","preventDefault","sliderElement","currentTarget","closest","getBoundingClientRect","handleSliderMouseMove","yearInputs","applyYearFilter","setYearInputs","document","querySelector","rect","clientX","touches","x","left","percentage","Math","max","min","width","totalRange","year","round","startYear","parseInt","start","endYear","end","newYear","prev","toString","handleSliderMouseUp"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/hooks/useSlider.ts"],"sourcesContent":["import { useState, useCallback } from 'react'\r\n\r\nexport const useSlider = () => {\r\n  const [isDraggingSlider, setIsDraggingSlider] = useState(false)\r\n  const [draggedHandle, setDraggedHandle] = useState<'start' | 'end' | null>(null)\r\n  const [sliderRect, setSliderRect] = useState<DOMRect | null>(null)\r\n\r\n  const handleSliderMouseDown = useCallback((e: React.MouseEvent | React.TouchEvent, handle: 'start' | 'end') => {\r\n    e.preventDefault()\r\n    setIsDraggingSlider(true)\r\n    setDraggedHandle(handle)\r\n    \r\n    // Всегда ищем элемент слайдера по классу\r\n    const sliderElement = e.currentTarget.closest('.year-range-slider') as Element\r\n    if (sliderElement) {\r\n      setSliderRect(sliderElement.getBoundingClientRect())\r\n    }\r\n  }, [])\r\n\r\n  const handleSliderMouseMove = useCallback((e: MouseEvent | TouchEvent, yearInputs: { start: string; end: string }, applyYearFilter: (field: 'start' | 'end', value: string) => void, setYearInputs: (inputs: { start: string; end: string } | ((prev: { start: string; end: string }) => { start: string; end: string })) => void) => {\r\n    if (!isDraggingSlider || !draggedHandle) return\r\n\r\n    // Получаем актуальные координаты слайдера\r\n    const sliderElement = document.querySelector('.year-range-slider') as Element\r\n    if (!sliderElement) return\r\n    \r\n    const rect = sliderElement.getBoundingClientRect()\r\n    const clientX = 'touches' in e ? e.touches[0].clientX : e.clientX\r\n    const x = clientX - rect.left\r\n    const percentage = Math.max(0, Math.min(100, (x / rect.width) * 100))\r\n    \r\n    // Преобразуем процент в год (от -800 до 2000)\r\n    const totalRange = 2800 // 2000 - (-800)\r\n    const year = Math.round(-800 + (percentage / 100) * totalRange)\r\n    \r\n    // Ограничиваем значения\r\n    const startYear = parseInt(yearInputs.start) || -800\r\n    const endYear = parseInt(yearInputs.end) || 2000\r\n    \r\n    let newYear = year\r\n    if (draggedHandle === 'start') {\r\n      newYear = Math.max(-800, Math.min(endYear - 100, year))\r\n      setYearInputs(prev => ({ ...prev, start: newYear.toString() }))\r\n      applyYearFilter('start', newYear.toString())\r\n    } else {\r\n      newYear = Math.max(startYear + 100, Math.min(2000, year))\r\n      setYearInputs(prev => ({ ...prev, end: newYear.toString() }))\r\n      applyYearFilter('end', newYear.toString())\r\n    }\r\n  }, [isDraggingSlider, draggedHandle])\r\n\r\n  const handleSliderMouseUp = useCallback(() => {\r\n    setIsDraggingSlider(false)\r\n    setDraggedHandle(null)\r\n    setSliderRect(null)\r\n  }, [])\r\n\r\n  return {\r\n    isDraggingSlider,\r\n    draggedHandle,\r\n    sliderRect,\r\n    handleSliderMouseDown,\r\n    handleSliderMouseMove,\r\n    handleSliderMouseUp\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}