{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selecty\\\\Documents\\\\PetProjects\\\\chronoline-frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport { AppHeader } from './components/AppHeader';\nimport { Timeline } from './components/Timeline';\nimport { Tooltips } from './components/Tooltips';\nimport { MobilePersonPanel } from './components/MobilePersonPanel';\nimport { useTimelineData } from './hooks/useTimelineData';\nimport { useFilters } from './hooks/useFilters';\nimport { useSlider } from './hooks/useSlider';\nimport { useTooltip } from './hooks/useTooltip';\nimport { useTimelineDrag } from './hooks/useTimelineDrag';\nimport { generateCenturyBoundaries, getFirstCountry } from './utils/timelineUtils';\nimport { getGroupColor, getGroupColorDark, getGroupColorMuted, getPersonGroup, sortGroupedData } from './utils/groupingUtils';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [activeAchievementMarker, setActiveAchievementMarker] = useState(null);\n  const [selectedPerson, setSelectedPerson] = useState(null);\n  const [showControls, setShowControls] = useState(true);\n\n  // Используем кастомные хуки\n  const {\n    filters,\n    setFilters,\n    groupingType,\n    setGroupingType,\n    yearInputs,\n    setYearInputs,\n    applyYearFilter,\n    handleYearKeyPress,\n    resetAllFilters\n  } = useFilters();\n  const {\n    persons,\n    allCategories,\n    allCountries,\n    isLoading\n  } = useTimelineData(filters);\n  const {\n    isDraggingSlider,\n    handleSliderMouseDown,\n    handleSliderMouseMove,\n    handleSliderMouseUp\n  } = useSlider();\n  const {\n    hoveredPerson,\n    mousePosition,\n    showTooltip,\n    hoveredAchievement,\n    achievementTooltipPosition,\n    showAchievementTooltip,\n    hoverTimerRef,\n    handlePersonHover,\n    handleAchievementHover\n  } = useTooltip();\n\n  // Добавляем обработчики событий мыши и touch\n  useEffect(() => {\n    if (isDraggingSlider) {\n      const handleMouseMove = e => handleSliderMouseMove(e, yearInputs, applyYearFilter, setYearInputs);\n      const handleMouseUp = () => handleSliderMouseUp();\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      document.addEventListener('touchmove', handleMouseMove);\n      document.addEventListener('touchend', handleMouseUp);\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n        document.removeEventListener('touchmove', handleMouseMove);\n        document.removeEventListener('touchend', handleMouseUp);\n      };\n    }\n  }, [isDraggingSlider, handleSliderMouseMove, handleSliderMouseUp, yearInputs, applyYearFilter, setYearInputs]);\n\n  // Функция фильтрации данных (теперь данные фильтруются на бэкенде, но сортировка остается)\n  const sortedData = sortGroupedData(persons, groupingType);\n\n  // Автоматически обновляем диапазон дат при изменении настройки скрытия пустых веков\n  useEffect(() => {\n    if (filters.hideEmptyCenturies && sortedData.length > 0) {\n      const effectiveMinYear = Math.min(...sortedData.map(p => p.birthYear));\n      const effectiveMaxYear = Math.max(...sortedData.map(p => p.deathYear));\n      const hasActiveFilters = filters.categories.length > 0 || filters.countries.length > 0;\n      let newTimeRange = {\n        ...filters.timeRange\n      };\n      if (hasActiveFilters) {\n        newTimeRange = {\n          start: Math.max(filters.timeRange.start, effectiveMinYear),\n          end: Math.min(filters.timeRange.end, effectiveMaxYear)\n        };\n      } else {\n        newTimeRange = filters.timeRange;\n      }\n      if (newTimeRange.start !== filters.timeRange.start || newTimeRange.end !== filters.timeRange.end) {\n        setFilters(prev => ({\n          ...prev,\n          timeRange: newTimeRange\n        }));\n        setYearInputs({\n          start: newTimeRange.start.toString(),\n          end: newTimeRange.end.toString()\n        });\n      }\n    }\n  }, [filters.hideEmptyCenturies, sortedData, filters.categories, filters.countries, filters.timeRange, setFilters, setYearInputs]);\n\n  // Отслеживаем скролл\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      setIsScrolled(scrollTop > 50);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Обработчик для закрытия achievement tooltip на мобильных\n  useEffect(() => {\n    const handleCloseAchievementTooltip = () => {\n      handleAchievementHover(null, 0, 0);\n    };\n    const handleClickOutside = event => {\n      const target = event.target;\n      const tooltip = document.getElementById('achievement-tooltip');\n      const isClickInsideTooltip = tooltip === null || tooltip === void 0 ? void 0 : tooltip.contains(target);\n      const isClickOnMarker = target.closest('.achievement-marker');\n      if (!isClickInsideTooltip && !isClickOnMarker && showAchievementTooltip) {\n        if (event.type === 'touchstart') {\n          setTimeout(() => {\n            handleAchievementHover(null, 0, 0);\n          }, 100);\n        } else {\n          handleAchievementHover(null, 0, 0);\n        }\n      }\n    };\n    window.addEventListener('closeAchievementTooltip', handleCloseAchievementTooltip);\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('touchstart', handleClickOutside);\n    return () => {\n      window.removeEventListener('closeAchievementTooltip', handleCloseAchievementTooltip);\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('touchstart', handleClickOutside);\n    };\n  }, [handleAchievementHover, showAchievementTooltip]);\n  const {\n    minYear,\n    totalYears,\n    effectiveMinYear,\n    effectiveMaxYear\n  } = useMemo(() => {\n    const minYear = Math.min(...sortedData.map(p => p.birthYear), filters.timeRange.start);\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear), filters.timeRange.end);\n    const totalYears = maxYear - minYear;\n    const effectiveMinYear = filters.hideEmptyCenturies ? Math.min(...sortedData.map(p => p.birthYear)) : minYear;\n    const effectiveMaxYear = filters.hideEmptyCenturies ? Math.max(...sortedData.map(p => p.deathYear)) : maxYear;\n    return {\n      minYear,\n      totalYears,\n      effectiveMinYear,\n      effectiveMaxYear\n    };\n  }, [sortedData, filters.timeRange.start, filters.timeRange.end, filters.hideEmptyCenturies]);\n  const pixelsPerYear = 3;\n  const LEFT_PADDING_PX = 30;\n  const timelineWidth = totalYears * pixelsPerYear + LEFT_PADDING_PX;\n  const {\n    timelineRef,\n    isDragging,\n    isDraggingTimeline,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    handleTouchStart,\n    handleTouchMove,\n    handleTouchEnd\n  } = useTimelineDrag({\n    timelineWidth,\n    containerWidth: window.innerWidth\n  });\n  const centuryBoundaries = useMemo(() => generateCenturyBoundaries(effectiveMinYear, effectiveMaxYear), [effectiveMinYear, effectiveMaxYear]);\n\n  // Мемоизируем алгоритм размещения полосок на строках\n  const calculateRowPlacement = useCallback(people => {\n    const rows = [];\n    if (groupingType === 'none') {\n      const allRows = [];\n      people.forEach(person => {\n        let placed = false;\n        for (let rowIndex = 0; rowIndex < allRows.length; rowIndex++) {\n          const row = allRows[rowIndex];\n          let canPlaceInRow = true;\n          for (const existingPerson of row) {\n            const BUFFER = 20;\n            if (person.birthYear - BUFFER <= existingPerson.deathYear && person.deathYear + BUFFER >= existingPerson.birthYear) {\n              canPlaceInRow = false;\n              break;\n            }\n          }\n          if (canPlaceInRow) {\n            allRows[rowIndex].push(person);\n            placed = true;\n            break;\n          }\n        }\n        if (!placed) {\n          allRows.push([person]);\n        }\n      });\n      return allRows;\n    }\n    const groupField = groupingType === 'category' ? 'category' : 'country';\n    const allGroups = groupingType === 'category' ? allCategories : allCountries;\n    const groups = {};\n    people.forEach(person => {\n      let groupValue;\n      if (groupField === 'country') {\n        groupValue = getFirstCountry(person.country);\n      } else {\n        groupValue = person[groupField];\n      }\n      if (!groups[groupValue]) {\n        groups[groupValue] = [];\n      }\n      groups[groupValue].push(person);\n    });\n    allGroups.forEach(groupValue => {\n      if (groups[groupValue]) {\n        const groupPeople = groups[groupValue];\n        const groupRows = [];\n        groupPeople.forEach(person => {\n          let placed = false;\n          for (let rowIndex = 0; rowIndex < groupRows.length; rowIndex++) {\n            const row = groupRows[rowIndex];\n            let canPlaceInRow = true;\n            for (const existingPerson of row) {\n              const BUFFER = 20;\n              if (person.birthYear - BUFFER <= existingPerson.deathYear && person.deathYear + BUFFER >= existingPerson.birthYear) {\n                canPlaceInRow = false;\n                break;\n              }\n            }\n            if (canPlaceInRow) {\n              groupRows[rowIndex].push(person);\n              placed = true;\n              break;\n            }\n          }\n          if (!placed) {\n            groupRows.push([person]);\n          }\n        });\n        rows.push(...groupRows);\n        if (groupValue !== allGroups[allGroups.length - 1]) {\n          rows.push([]);\n        }\n      }\n    });\n    return rows;\n  }, [groupingType, allCategories, allCountries]);\n  const rowPlacement = useMemo(() => calculateRowPlacement(sortedData), [calculateRowPlacement, sortedData]);\n  const totalHeight = useMemo(() => rowPlacement.reduce((height, row) => {\n    return height + (row.length === 0 ? 20 : 70);\n  }, 0), [rowPlacement]);\n  const ROW_HEIGHT = 60;\n  const ROW_MARGIN = 10;\n  const EMPTY_ROW_HEIGHT = 20;\n  const rowTops = useMemo(() => {\n    const tops = [];\n    let acc = 0;\n    rowPlacement.forEach(row => {\n      tops.push(acc);\n      if (row.length === 0) {\n        acc += EMPTY_ROW_HEIGHT;\n      } else {\n        acc += ROW_HEIGHT + ROW_MARGIN;\n      }\n    });\n    return tops;\n  }, [rowPlacement]);\n  const createCategoryDividers = useCallback(() => {\n    if (groupingType === 'none') {\n      return [];\n    }\n    const dividers = [];\n    let currentGroup = '';\n    rowPlacement.forEach((row, rowIndex) => {\n      if (row.length > 0) {\n        const firstPersonInRow = row[0];\n        let currentGroupValue;\n        if (groupingType === 'category') {\n          currentGroupValue = firstPersonInRow.category;\n        } else if (groupingType === 'country') {\n          currentGroupValue = getFirstCountry(firstPersonInRow.country);\n        } else {\n          currentGroupValue = firstPersonInRow.category;\n        }\n        if (currentGroupValue !== currentGroup) {\n          if (currentGroup !== '') {\n            dividers.push({\n              category: currentGroup,\n              top: rowTops[rowIndex] - 5\n            });\n          }\n          currentGroup = currentGroupValue;\n        }\n      }\n    });\n    if (currentGroup !== '') {\n      dividers.push({\n        category: currentGroup,\n        top: rowTops[rowPlacement.length - 1] - 5\n      });\n    }\n    return dividers;\n  }, [groupingType, rowPlacement, rowTops]);\n  const categoryDividers = useMemo(() => createCategoryDividers(), [createCategoryDividers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    id: \"chrononinja-app\",\n    role: \"main\",\n    \"aria-label\": \"Chrono Ninja - \\u0418\\u043D\\u0442\\u0435\\u0440\\u0430\\u043A\\u0442\\u0438\\u0432\\u043D\\u0430\\u044F \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u0430\\u044F \\u043B\\u0438\\u043D\\u0438\\u044F \\u0438\\u0441\\u0442\\u043E\\u0440\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0445 \\u043B\\u0438\\u0447\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\",\n    children: [/*#__PURE__*/_jsxDEV(AppHeader, {\n      isScrolled: isScrolled,\n      showControls: showControls,\n      setShowControls: setShowControls,\n      filters: filters,\n      setFilters: setFilters,\n      groupingType: groupingType,\n      setGroupingType: setGroupingType,\n      allCategories: allCategories,\n      allCountries: allCountries,\n      yearInputs: yearInputs,\n      setYearInputs: setYearInputs,\n      applyYearFilter: applyYearFilter,\n      handleYearKeyPress: handleYearKeyPress,\n      resetAllFilters: resetAllFilters,\n      getCategoryColor: getGroupColor,\n      sortedData: sortedData,\n      handleSliderMouseDown: handleSliderMouseDown,\n      handleSliderMouseMove: handleSliderMouseMove,\n      handleSliderMouseUp: handleSliderMouseUp,\n      isDraggingSlider: isDraggingSlider\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-wrapper\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        role: \"status\",\n        \"aria-live\": \"polite\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        ref: timelineRef,\n        className: `timeline-container ${isDragging ? 'dragging' : ''}`,\n        id: \"timeline-viewport\",\n        role: \"region\",\n        \"aria-label\": \"\\u041E\\u0431\\u043B\\u0430\\u0441\\u0442\\u044C \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u043E\\u0439 \\u043B\\u0438\\u043D\\u0438\\u0438\",\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: handleMouseUp,\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        onTouchEnd: handleTouchEnd,\n        children: /*#__PURE__*/_jsxDEV(Timeline, {\n          isLoading: false,\n          timelineWidth: timelineWidth,\n          totalHeight: totalHeight,\n          centuryBoundaries: centuryBoundaries,\n          minYear: minYear,\n          pixelsPerYear: pixelsPerYear,\n          LEFT_PADDING_PX: LEFT_PADDING_PX,\n          rowPlacement: rowPlacement,\n          filters: filters,\n          groupingType: groupingType,\n          categoryDividers: categoryDividers,\n          getGroupColor: getGroupColor,\n          getGroupColorDark: getGroupColorDark,\n          getGroupColorMuted: getGroupColorMuted,\n          getPersonGroup: person => getPersonGroup(person, groupingType),\n          hoveredPerson: hoveredPerson,\n          setHoveredPerson: person => {\n            if (person) {\n              handlePersonHover(person, mousePosition.x, mousePosition.y);\n            } else {\n              handlePersonHover(null, 0, 0);\n            }\n          },\n          mousePosition: mousePosition,\n          setMousePosition: position => {\n            if (hoveredPerson) {\n              handlePersonHover(hoveredPerson, position.x, position.y);\n            }\n          },\n          showTooltip: showTooltip,\n          setShowTooltip: show => {\n            if (!show && hoveredPerson) {\n              handlePersonHover(null, 0, 0);\n            }\n          },\n          activeAchievementMarker: activeAchievementMarker,\n          setActiveAchievementMarker: setActiveAchievementMarker,\n          hoveredAchievement: hoveredAchievement,\n          setHoveredAchievement: achievement => {\n            if (achievement) {\n              handleAchievementHover(achievement, achievementTooltipPosition.x, achievementTooltipPosition.y);\n            } else {\n              handleAchievementHover(null, 0, 0);\n            }\n          },\n          achievementTooltipPosition: achievementTooltipPosition,\n          setAchievementTooltipPosition: position => {\n            if (hoveredAchievement) {\n              handleAchievementHover(hoveredAchievement, position.x, position.y);\n            }\n          },\n          showAchievementTooltip: showAchievementTooltip,\n          setShowAchievementTooltip: show => {\n            if (!show && hoveredAchievement) {\n              handleAchievementHover(null, 0, 0);\n            }\n          },\n          handlePersonHover: handlePersonHover,\n          hoverTimerRef: hoverTimerRef,\n          sortedData: sortedData,\n          selectedPerson: selectedPerson,\n          setSelectedPerson: setSelectedPerson\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"tooltips-container\",\n      id: \"tooltips-aside\",\n      \"aria-label\": \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u044B\\u0435 \\u043F\\u043E\\u0434\\u0441\\u043A\\u0430\\u0437\\u043A\\u0438\",\n      children: /*#__PURE__*/_jsxDEV(Tooltips, {\n        hoveredPerson: hoveredPerson,\n        showTooltip: showTooltip,\n        mousePosition: mousePosition,\n        hoveredAchievement: hoveredAchievement,\n        showAchievementTooltip: showAchievementTooltip,\n        achievementTooltipPosition: achievementTooltipPosition,\n        getGroupColor: getGroupColor,\n        getPersonGroup: person => getPersonGroup(person, groupingType),\n        getCategoryColor: getGroupColor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 503,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MobilePersonPanel, {\n      selectedPerson: selectedPerson,\n      onClose: () => setSelectedPerson(null),\n      getGroupColor: getGroupColor,\n      getPersonGroup: person => getPersonGroup(person, groupingType),\n      getCategoryColor: getGroupColor\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nbncV841c7ks6l0OcTdZzS/u5yU=\", false, function () {\n  return [useFilters, useTimelineData, useSlider, useTooltip, useTimelineDrag];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","AppHeader","Timeline","Tooltips","MobilePersonPanel","useTimelineData","useFilters","useSlider","useTooltip","useTimelineDrag","generateCenturyBoundaries","getFirstCountry","getGroupColor","getGroupColorDark","getGroupColorMuted","getPersonGroup","sortGroupedData","jsxDEV","_jsxDEV","App","_s","isScrolled","setIsScrolled","activeAchievementMarker","setActiveAchievementMarker","selectedPerson","setSelectedPerson","showControls","setShowControls","filters","setFilters","groupingType","setGroupingType","yearInputs","setYearInputs","applyYearFilter","handleYearKeyPress","resetAllFilters","persons","allCategories","allCountries","isLoading","isDraggingSlider","handleSliderMouseDown","handleSliderMouseMove","handleSliderMouseUp","hoveredPerson","mousePosition","showTooltip","hoveredAchievement","achievementTooltipPosition","showAchievementTooltip","hoverTimerRef","handlePersonHover","handleAchievementHover","handleMouseMove","e","handleMouseUp","document","addEventListener","removeEventListener","sortedData","hideEmptyCenturies","length","effectiveMinYear","Math","min","map","p","birthYear","effectiveMaxYear","max","deathYear","hasActiveFilters","categories","countries","newTimeRange","timeRange","start","end","prev","toString","handleScroll","scrollTop","window","pageYOffset","documentElement","handleCloseAchievementTooltip","handleClickOutside","event","target","tooltip","getElementById","isClickInsideTooltip","contains","isClickOnMarker","closest","type","setTimeout","minYear","totalYears","maxYear","pixelsPerYear","LEFT_PADDING_PX","timelineWidth","timelineRef","isDragging","isDraggingTimeline","handleMouseDown","handleTouchStart","handleTouchMove","handleTouchEnd","containerWidth","innerWidth","centuryBoundaries","calculateRowPlacement","people","rows","allRows","forEach","person","placed","rowIndex","row","canPlaceInRow","existingPerson","BUFFER","push","groupField","allGroups","groups","groupValue","country","groupPeople","groupRows","rowPlacement","totalHeight","reduce","height","ROW_HEIGHT","ROW_MARGIN","EMPTY_ROW_HEIGHT","rowTops","tops","acc","createCategoryDividers","dividers","currentGroup","firstPersonInRow","currentGroupValue","category","top","categoryDividers","className","id","role","children","getCategoryColor","fileName","_jsxFileName","lineNumber","columnNumber","ref","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","setHoveredPerson","x","y","setMousePosition","position","setShowTooltip","show","setHoveredAchievement","achievement","setAchievementTooltipPosition","setShowAchievementTooltip","onClose","_c","$RefreshReg$"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react'\r\nimport { Person } from './types'\r\nimport { AppHeader } from './components/AppHeader'\r\nimport { Timeline } from './components/Timeline'\r\nimport { Tooltips } from './components/Tooltips'\r\nimport { MobilePersonPanel } from './components/MobilePersonPanel'\r\nimport { useTimelineData } from './hooks/useTimelineData'\r\nimport { useFilters } from './hooks/useFilters'\r\nimport { useSlider } from './hooks/useSlider'\r\nimport { useTooltip } from './hooks/useTooltip'\r\nimport { useTimelineDrag } from './hooks/useTimelineDrag'\r\nimport { \r\n  generateCenturyBoundaries,\r\n  getFirstCountry\r\n} from './utils/timelineUtils'\r\nimport { \r\n  getGroupColor, \r\n  getGroupColorDark, \r\n  getGroupColorMuted, \r\n  getPersonGroup,\r\n  sortGroupedData\r\n} from './utils/groupingUtils'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const [isScrolled, setIsScrolled] = useState(false)\r\n  const [activeAchievementMarker, setActiveAchievementMarker] = useState<{ personId: string; index: number } | null>(null)\r\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null)\r\n  const [showControls, setShowControls] = useState(true)\r\n\r\n  // Используем кастомные хуки\r\n  const { \r\n    filters, \r\n    setFilters, \r\n    groupingType, \r\n    setGroupingType, \r\n    yearInputs, \r\n    setYearInputs, \r\n    applyYearFilter, \r\n    handleYearKeyPress, \r\n    resetAllFilters \r\n  } = useFilters()\r\n  \r\n  const { persons, allCategories, allCountries, isLoading } = useTimelineData(filters)\r\n\r\n  const { \r\n    isDraggingSlider, \r\n    handleSliderMouseDown, \r\n    handleSliderMouseMove, \r\n    handleSliderMouseUp \r\n  } = useSlider()\r\n  \r\n  const { \r\n    hoveredPerson, \r\n    mousePosition, \r\n    showTooltip, \r\n    hoveredAchievement, \r\n    achievementTooltipPosition, \r\n    showAchievementTooltip, \r\n    hoverTimerRef, \r\n    handlePersonHover, \r\n    handleAchievementHover \r\n  } = useTooltip()\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  // Добавляем обработчики событий мыши и touch\r\n  useEffect(() => {\r\n    if (isDraggingSlider) {\r\n      const handleMouseMove = (e: MouseEvent | TouchEvent) => \r\n        handleSliderMouseMove(e, yearInputs, applyYearFilter, setYearInputs)\r\n      \r\n      const handleMouseUp = () => handleSliderMouseUp()\r\n      \r\n      document.addEventListener('mousemove', handleMouseMove)\r\n      document.addEventListener('mouseup', handleMouseUp)\r\n      document.addEventListener('touchmove', handleMouseMove)\r\n      document.addEventListener('touchend', handleMouseUp)\r\n      \r\n      return () => {\r\n        document.removeEventListener('mousemove', handleMouseMove)\r\n        document.removeEventListener('mouseup', handleMouseUp)\r\n        document.removeEventListener('touchmove', handleMouseMove)\r\n        document.removeEventListener('touchend', handleMouseUp)\r\n      }\r\n    }\r\n  }, [isDraggingSlider, handleSliderMouseMove, handleSliderMouseUp, yearInputs, applyYearFilter, setYearInputs])\r\n\r\n\r\n\r\n  // Функция фильтрации данных (теперь данные фильтруются на бэкенде, но сортировка остается)\r\n  const sortedData = sortGroupedData(persons, groupingType)\r\n\r\n  // Автоматически обновляем диапазон дат при изменении настройки скрытия пустых веков\r\n  useEffect(() => {\r\n    if (filters.hideEmptyCenturies && sortedData.length > 0) {\r\n      const effectiveMinYear = Math.min(...sortedData.map(p => p.birthYear));\r\n      const effectiveMaxYear = Math.max(...sortedData.map(p => p.deathYear));\r\n      \r\n      const hasActiveFilters = filters.categories.length > 0 || filters.countries.length > 0;\r\n      \r\n      let newTimeRange = { ...filters.timeRange };\r\n      \r\n      if (hasActiveFilters) {\r\n        newTimeRange = {\r\n          start: Math.max(filters.timeRange.start, effectiveMinYear),\r\n          end: Math.min(filters.timeRange.end, effectiveMaxYear)\r\n        };\r\n      } else {\r\n        newTimeRange = filters.timeRange;\r\n      }\r\n      \r\n      if (newTimeRange.start !== filters.timeRange.start || newTimeRange.end !== filters.timeRange.end) {\r\n        setFilters(prev => ({\r\n          ...prev,\r\n          timeRange: newTimeRange\r\n        }));\r\n        \r\n        setYearInputs({\r\n          start: newTimeRange.start.toString(),\r\n          end: newTimeRange.end.toString()\r\n        });\r\n      }\r\n    }\r\n  }, [filters.hideEmptyCenturies, sortedData, filters.categories, filters.countries, filters.timeRange, setFilters, setYearInputs]);\r\n\r\n  // Отслеживаем скролл\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop\r\n      setIsScrolled(scrollTop > 50)\r\n    }\r\n\r\n    window.addEventListener('scroll', handleScroll)\r\n    return () => window.removeEventListener('scroll', handleScroll)\r\n  }, [])\r\n\r\n  // Обработчик для закрытия achievement tooltip на мобильных\r\n  useEffect(() => {\r\n    const handleCloseAchievementTooltip = () => {\r\n      handleAchievementHover(null, 0, 0);\r\n    };\r\n\r\n    const handleClickOutside = (event: Event) => {\r\n      const target = event.target as Element;\r\n      const tooltip = document.getElementById('achievement-tooltip');\r\n      const isClickInsideTooltip = tooltip?.contains(target);\r\n      const isClickOnMarker = target.closest('.achievement-marker');\r\n      \r\n      if (!isClickInsideTooltip && !isClickOnMarker && showAchievementTooltip) {\r\n        if (event.type === 'touchstart') {\r\n          setTimeout(() => {\r\n            handleAchievementHover(null, 0, 0);\r\n          }, 100);\r\n        } else {\r\n          handleAchievementHover(null, 0, 0);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('closeAchievementTooltip', handleCloseAchievementTooltip);\r\n    document.addEventListener('mousedown', handleClickOutside);\r\n    document.addEventListener('touchstart', handleClickOutside);\r\n    \r\n    return () => {\r\n      window.removeEventListener('closeAchievementTooltip', handleCloseAchievementTooltip);\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n      document.removeEventListener('touchstart', handleClickOutside);\r\n    };\r\n  }, [handleAchievementHover, showAchievementTooltip]);\r\n\r\n  const { minYear, totalYears, effectiveMinYear, effectiveMaxYear } = useMemo(() => {\r\n    const minYear = Math.min(...sortedData.map(p => p.birthYear), filters.timeRange.start)\r\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear), filters.timeRange.end)\r\n    const totalYears = maxYear - minYear\r\n    \r\n    const effectiveMinYear = filters.hideEmptyCenturies \r\n      ? Math.min(...sortedData.map(p => p.birthYear))\r\n      : minYear\r\n    const effectiveMaxYear = filters.hideEmptyCenturies \r\n      ? Math.max(...sortedData.map(p => p.deathYear))\r\n      : maxYear\r\n    \r\n    return { minYear, totalYears, effectiveMinYear, effectiveMaxYear }\r\n  }, [sortedData, filters.timeRange.start, filters.timeRange.end, filters.hideEmptyCenturies])\r\n\r\n  const pixelsPerYear = 3\r\n  const LEFT_PADDING_PX = 30\r\n  const timelineWidth = totalYears * pixelsPerYear + LEFT_PADDING_PX\r\n\r\n  const {\r\n    timelineRef,\r\n    isDragging,\r\n    isDraggingTimeline,\r\n    handleMouseDown,\r\n    handleMouseMove,\r\n    handleMouseUp,\r\n    handleTouchStart,\r\n    handleTouchMove,\r\n    handleTouchEnd\r\n  } = useTimelineDrag({\r\n    timelineWidth,\r\n    containerWidth: window.innerWidth\r\n  })\r\n\r\n  const centuryBoundaries = useMemo(() => \r\n    generateCenturyBoundaries(effectiveMinYear, effectiveMaxYear),\r\n    [effectiveMinYear, effectiveMaxYear]\r\n  )\r\n\r\n  // Мемоизируем алгоритм размещения полосок на строках\r\n  const calculateRowPlacement = useCallback((people: Person[]) => {\r\n    const rows: Person[][] = []\r\n    \r\n    if (groupingType === 'none') {\r\n      const allRows: Person[][] = []\r\n      \r\n      people.forEach(person => {\r\n        let placed = false\r\n        \r\n        for (let rowIndex = 0; rowIndex < allRows.length; rowIndex++) {\r\n          const row = allRows[rowIndex]\r\n          let canPlaceInRow = true\r\n          \r\n          for (const existingPerson of row) {\r\n            const BUFFER = 20;\r\n            if (\r\n              person.birthYear - BUFFER <= existingPerson.deathYear &&\r\n              person.deathYear + BUFFER >= existingPerson.birthYear\r\n            ) {\r\n              canPlaceInRow = false\r\n              break\r\n            }\r\n          }\r\n          \r\n          if (canPlaceInRow) {\r\n            allRows[rowIndex].push(person)\r\n            placed = true\r\n            break\r\n          }\r\n        }\r\n        \r\n        if (!placed) {\r\n          allRows.push([person])\r\n        }\r\n      })\r\n      \r\n      return allRows\r\n    }\r\n    \r\n    const groupField = groupingType === 'category' ? 'category' : 'country'\r\n    const allGroups = groupingType === 'category' ? allCategories : allCountries\r\n    const groups: { [key: string]: Person[] } = {}\r\n    \r\n    people.forEach(person => {\r\n      let groupValue: string\r\n      if (groupField === 'country') {\r\n        groupValue = getFirstCountry(person.country)\r\n      } else {\r\n        groupValue = person[groupField]\r\n      }\r\n      \r\n      if (!groups[groupValue]) {\r\n        groups[groupValue] = []\r\n      }\r\n      groups[groupValue].push(person)\r\n    })\r\n    \r\n    allGroups.forEach(groupValue => {\r\n      if (groups[groupValue]) {\r\n        const groupPeople = groups[groupValue]\r\n        const groupRows: Person[][] = []\r\n        \r\n        groupPeople.forEach(person => {\r\n          let placed = false\r\n          \r\n          for (let rowIndex = 0; rowIndex < groupRows.length; rowIndex++) {\r\n            const row = groupRows[rowIndex]\r\n            let canPlaceInRow = true\r\n            \r\n            for (const existingPerson of row) {\r\n              const BUFFER = 20;\r\n              if (\r\n                person.birthYear - BUFFER <= existingPerson.deathYear &&\r\n                person.deathYear + BUFFER >= existingPerson.birthYear\r\n              ) {\r\n                canPlaceInRow = false\r\n                break\r\n              }\r\n            }\r\n            \r\n            if (canPlaceInRow) {\r\n              groupRows[rowIndex].push(person)\r\n              placed = true\r\n              break\r\n            }\r\n          }\r\n          \r\n          if (!placed) {\r\n            groupRows.push([person])\r\n          }\r\n        })\r\n        \r\n        rows.push(...groupRows)\r\n        \r\n        if (groupValue !== allGroups[allGroups.length - 1]) {\r\n          rows.push([])\r\n        }\r\n      }\r\n    })\r\n    \r\n    return rows\r\n  }, [groupingType, allCategories, allCountries])\r\n\r\n  const rowPlacement = useMemo(() => \r\n    calculateRowPlacement(sortedData),\r\n    [calculateRowPlacement, sortedData]\r\n  )\r\n\r\n  const totalHeight = useMemo(() => \r\n    rowPlacement.reduce((height, row) => {\r\n      return height + (row.length === 0 ? 20 : 70)\r\n    }, 0),\r\n    [rowPlacement]\r\n  )\r\n\r\n  const ROW_HEIGHT = 60;\r\n  const ROW_MARGIN = 10;\r\n  const EMPTY_ROW_HEIGHT = 20;\r\n\r\n  const rowTops = useMemo(() => {\r\n    const tops: number[] = [];\r\n    let acc = 0;\r\n    rowPlacement.forEach(row => {\r\n      tops.push(acc);\r\n      if (row.length === 0) {\r\n        acc += EMPTY_ROW_HEIGHT;\r\n      } else {\r\n        acc += ROW_HEIGHT + ROW_MARGIN;\r\n      }\r\n    });\r\n    return tops;\r\n  }, [rowPlacement]);\r\n\r\n  const createCategoryDividers = useCallback(() => {\r\n    if (groupingType === 'none') {\r\n      return [];\r\n    }\r\n\r\n    const dividers: { category: string; top: number }[] = [];\r\n    let currentGroup = '';\r\n\r\n    rowPlacement.forEach((row, rowIndex) => {\r\n      if (row.length > 0) {\r\n        const firstPersonInRow = row[0];\r\n        let currentGroupValue: string;\r\n        \r\n        if (groupingType === 'category') {\r\n          currentGroupValue = firstPersonInRow.category;\r\n        } else if (groupingType === 'country') {\r\n          currentGroupValue = getFirstCountry(firstPersonInRow.country);\r\n        } else {\r\n          currentGroupValue = firstPersonInRow.category;\r\n        }\r\n        \r\n        if (currentGroupValue !== currentGroup) {\r\n          if (currentGroup !== '') {\r\n            dividers.push({ category: currentGroup, top: rowTops[rowIndex] - 5 });\r\n          }\r\n          currentGroup = currentGroupValue;\r\n        }\r\n      }\r\n    });\r\n\r\n    if (currentGroup !== '') {\r\n      dividers.push({ category: currentGroup, top: rowTops[rowPlacement.length - 1] - 5 });\r\n    }\r\n\r\n    return dividers;\r\n  }, [groupingType, rowPlacement, rowTops]);\r\n\r\n  const categoryDividers = useMemo(() => createCategoryDividers(), [createCategoryDividers]);\r\n\r\n  return (\r\n    <div className=\"app\" id=\"chrononinja-app\" role=\"main\" aria-label=\"Chrono Ninja - Интерактивная временная линия исторических личностей\">\r\n      <AppHeader\r\n        isScrolled={isScrolled}\r\n        showControls={showControls}\r\n        setShowControls={setShowControls}\r\n        filters={filters}\r\n        setFilters={setFilters}\r\n        groupingType={groupingType}\r\n        setGroupingType={setGroupingType}\r\n        allCategories={allCategories}\r\n        allCountries={allCountries}\r\n        yearInputs={yearInputs}\r\n        setYearInputs={setYearInputs}\r\n        applyYearFilter={applyYearFilter}\r\n        handleYearKeyPress={handleYearKeyPress}\r\n        resetAllFilters={resetAllFilters}\r\n        getCategoryColor={getGroupColor}\r\n        sortedData={sortedData}\r\n        handleSliderMouseDown={handleSliderMouseDown}\r\n        handleSliderMouseMove={handleSliderMouseMove}\r\n        handleSliderMouseUp={handleSliderMouseUp}\r\n        isDraggingSlider={isDraggingSlider}\r\n      />\r\n      \r\n      <div className=\"timeline-wrapper\">\r\n        {isLoading && (\r\n          <div className=\"loading-overlay\" role=\"status\" aria-live=\"polite\">\r\n            <div className=\"spinner\" aria-hidden=\"true\"></div>\r\n            <span>Загрузка данных...</span>\r\n          </div>\r\n        )}\r\n        \r\n        <main \r\n          ref={timelineRef}\r\n          className={`timeline-container ${isDragging ? 'dragging' : ''}`}\r\n          id=\"timeline-viewport\" \r\n          role=\"region\" \r\n          aria-label=\"Область просмотра временной линии\"\r\n          onMouseDown={handleMouseDown}\r\n          onMouseMove={handleMouseMove}\r\n          onMouseUp={handleMouseUp}\r\n          onMouseLeave={handleMouseUp}\r\n          onTouchStart={handleTouchStart}\r\n          onTouchMove={handleTouchMove}\r\n          onTouchEnd={handleTouchEnd}\r\n        >\r\n          <Timeline\r\n          isLoading={false}\r\n          timelineWidth={timelineWidth}\r\n          totalHeight={totalHeight}\r\n          centuryBoundaries={centuryBoundaries}\r\n          minYear={minYear}\r\n          pixelsPerYear={pixelsPerYear}\r\n          LEFT_PADDING_PX={LEFT_PADDING_PX}\r\n          rowPlacement={rowPlacement}\r\n          filters={filters}\r\n          groupingType={groupingType}\r\n          categoryDividers={categoryDividers}\r\n          getGroupColor={getGroupColor}\r\n          getGroupColorDark={getGroupColorDark}\r\n          getGroupColorMuted={getGroupColorMuted}\r\n          getPersonGroup={(person) => getPersonGroup(person, groupingType)}\r\n          hoveredPerson={hoveredPerson}\r\n          setHoveredPerson={(person) => {\r\n            if (person) {\r\n              handlePersonHover(person, mousePosition.x, mousePosition.y);\r\n            } else {\r\n              handlePersonHover(null, 0, 0);\r\n            }\r\n          }}\r\n          mousePosition={mousePosition}\r\n          setMousePosition={(position) => {\r\n            if (hoveredPerson) {\r\n              handlePersonHover(hoveredPerson, position.x, position.y);\r\n            }\r\n          }}\r\n          showTooltip={showTooltip}\r\n          setShowTooltip={(show) => {\r\n            if (!show && hoveredPerson) {\r\n              handlePersonHover(null, 0, 0);\r\n            }\r\n          }}\r\n          activeAchievementMarker={activeAchievementMarker}\r\n          setActiveAchievementMarker={setActiveAchievementMarker}\r\n          hoveredAchievement={hoveredAchievement}\r\n          setHoveredAchievement={(achievement) => {\r\n            if (achievement) {\r\n              handleAchievementHover(achievement, achievementTooltipPosition.x, achievementTooltipPosition.y);\r\n            } else {\r\n              handleAchievementHover(null, 0, 0);\r\n            }\r\n          }}\r\n          achievementTooltipPosition={achievementTooltipPosition}\r\n          setAchievementTooltipPosition={(position) => {\r\n            if (hoveredAchievement) {\r\n              handleAchievementHover(hoveredAchievement, position.x, position.y);\r\n            }\r\n          }}\r\n          showAchievementTooltip={showAchievementTooltip}\r\n          setShowAchievementTooltip={(show) => {\r\n            if (!show && hoveredAchievement) {\r\n              handleAchievementHover(null, 0, 0);\r\n            }\r\n          }}\r\n          handlePersonHover={handlePersonHover}\r\n          hoverTimerRef={hoverTimerRef}\r\n          sortedData={sortedData}\r\n          selectedPerson={selectedPerson}\r\n          setSelectedPerson={setSelectedPerson}\r\n        />\r\n        </main>\r\n      </div>\r\n\r\n      <aside className=\"tooltips-container\" id=\"tooltips-aside\" aria-label=\"Информационные подсказки\">\r\n        <Tooltips\r\n          hoveredPerson={hoveredPerson}\r\n          showTooltip={showTooltip}\r\n          mousePosition={mousePosition}\r\n          hoveredAchievement={hoveredAchievement}\r\n          showAchievementTooltip={showAchievementTooltip}\r\n          achievementTooltipPosition={achievementTooltipPosition}\r\n          getGroupColor={getGroupColor}\r\n          getPersonGroup={(person) => getPersonGroup(person, groupingType)}\r\n          getCategoryColor={getGroupColor}\r\n        />\r\n      </aside>\r\n      \r\n      <MobilePersonPanel\r\n        selectedPerson={selectedPerson}\r\n        onClose={() => setSelectedPerson(null)}\r\n        getGroupColor={getGroupColor}\r\n        getPersonGroup={(person) => getPersonGroup(person, groupingType)}\r\n        getCategoryColor={getGroupColor}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}