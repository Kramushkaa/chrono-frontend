{"ast":null,"code":"import React,{createContext,useContext,useMemo,useState,useCallback}from'react';import*as authApi from'../services/auth';import{jsx as _jsx}from\"react/jsx-runtime\";const defaultState={user:null,accessToken:null,refreshToken:null};const AuthContext=/*#__PURE__*/createContext(undefined);export function AuthProvider(_ref){let{children}=_ref;const[state,setState]=useState(()=>authApi.authStorage.load());const login=useCallback(async(email,password)=>{const newState=await authApi.login({email,password});setState(newState);},[]);const logout=useCallback(async()=>{try{await authApi.logout(state);}finally{setState(defaultState);}},[state]);const refresh=useCallback(async()=>{const newState=await authApi.refresh(state);setState(newState);},[state]);const value=useMemo(()=>({user:state.user,isAuthenticated:Boolean(state.user&&state.accessToken),state,login,logout,refresh}),[state,login,logout,refresh]);return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});}export function useAuth(){const ctx=useContext(AuthContext);if(!ctx)throw new Error('useAuth must be used within AuthProvider');return ctx;}","map":{"version":3,"names":["React","createContext","useContext","useMemo","useState","useCallback","authApi","jsx","_jsx","defaultState","user","accessToken","refreshToken","AuthContext","undefined","AuthProvider","_ref","children","state","setState","authStorage","load","login","email","password","newState","logout","refresh","value","isAuthenticated","Boolean","Provider","useAuth","ctx","Error"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useMemo, useState, useCallback } from 'react';\r\nimport type { AuthState, AuthUser } from '../services/auth';\r\nimport * as authApi from '../services/auth';\r\n\r\ntype AuthContextValue = {\r\n  user: AuthUser | null;\r\n  isAuthenticated: boolean;\r\n  state: AuthState;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  refresh: () => Promise<void>;\r\n};\r\n\r\nconst defaultState: AuthState = { user: null, accessToken: null, refreshToken: null };\r\n\r\nconst AuthContext = createContext<AuthContextValue | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: React.ReactNode }) {\r\n  const [state, setState] = useState<AuthState>(() => authApi.authStorage.load());\r\n\r\n  const login = useCallback(async (email: string, password: string) => {\r\n    const newState = await authApi.login({ email, password });\r\n    setState(newState);\r\n  }, []);\r\n\r\n  const logout = useCallback(async () => {\r\n    try {\r\n      await authApi.logout(state);\r\n    } finally {\r\n      setState(defaultState);\r\n    }\r\n  }, [state]);\r\n\r\n  const refresh = useCallback(async () => {\r\n    const newState = await authApi.refresh(state);\r\n    setState(newState);\r\n  }, [state]);\r\n\r\n  const value: AuthContextValue = useMemo(() => ({\r\n    user: state.user,\r\n    isAuthenticated: Boolean(state.user && state.accessToken),\r\n    state,\r\n    login,\r\n    logout,\r\n    refresh,\r\n  }), [state, login, logout, refresh]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth(): AuthContextValue {\r\n  const ctx = useContext(AuthContext);\r\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\r\n  return ctx;\r\n}\r\n\r\n\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,OAAO,CAAEC,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAExF,MAAO,GAAK,CAAAC,OAAO,KAAM,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAW5C,KAAM,CAAAC,YAAuB,CAAG,CAAEC,IAAI,CAAE,IAAI,CAAEC,WAAW,CAAE,IAAI,CAAEC,YAAY,CAAE,IAAK,CAAC,CAErF,KAAM,CAAAC,WAAW,cAAGZ,aAAa,CAA+Ba,SAAS,CAAC,CAE1E,MAAO,SAAS,CAAAC,YAAYA,CAAAC,IAAA,CAA8C,IAA7C,CAAEC,QAAwC,CAAC,CAAAD,IAAA,CACtE,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAY,IAAME,OAAO,CAACc,WAAW,CAACC,IAAI,CAAC,CAAC,CAAC,CAE/E,KAAM,CAAAC,KAAK,CAAGjB,WAAW,CAAC,MAAOkB,KAAa,CAAEC,QAAgB,GAAK,CACnE,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAnB,OAAO,CAACgB,KAAK,CAAC,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAC,CACzDL,QAAQ,CAACM,QAAQ,CAAC,CACpB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,MAAM,CAAGrB,WAAW,CAAC,SAAY,CACrC,GAAI,CACF,KAAM,CAAAC,OAAO,CAACoB,MAAM,CAACR,KAAK,CAAC,CAC7B,CAAC,OAAS,CACRC,QAAQ,CAACV,YAAY,CAAC,CACxB,CACF,CAAC,CAAE,CAACS,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAS,OAAO,CAAGtB,WAAW,CAAC,SAAY,CACtC,KAAM,CAAAoB,QAAQ,CAAG,KAAM,CAAAnB,OAAO,CAACqB,OAAO,CAACT,KAAK,CAAC,CAC7CC,QAAQ,CAACM,QAAQ,CAAC,CACpB,CAAC,CAAE,CAACP,KAAK,CAAC,CAAC,CAEX,KAAM,CAAAU,KAAuB,CAAGzB,OAAO,CAAC,KAAO,CAC7CO,IAAI,CAAEQ,KAAK,CAACR,IAAI,CAChBmB,eAAe,CAAEC,OAAO,CAACZ,KAAK,CAACR,IAAI,EAAIQ,KAAK,CAACP,WAAW,CAAC,CACzDO,KAAK,CACLI,KAAK,CACLI,MAAM,CACNC,OACF,CAAC,CAAC,CAAE,CAACT,KAAK,CAAEI,KAAK,CAAEI,MAAM,CAAEC,OAAO,CAAC,CAAC,CAEpC,mBACEnB,IAAA,CAACK,WAAW,CAACkB,QAAQ,EAACH,KAAK,CAAEA,KAAM,CAAAX,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAEA,MAAO,SAAS,CAAAe,OAAOA,CAAA,CAAqB,CAC1C,KAAM,CAAAC,GAAG,CAAG/B,UAAU,CAACW,WAAW,CAAC,CACnC,GAAI,CAACoB,GAAG,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,0CAA0C,CAAC,CACrE,MAAO,CAAAD,GAAG,CACZ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}