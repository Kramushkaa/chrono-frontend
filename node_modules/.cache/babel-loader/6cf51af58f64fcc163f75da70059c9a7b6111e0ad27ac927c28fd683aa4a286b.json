{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selecty\\\\Documents\\\\PetProjects\\\\chronoline-frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useMemo, useState, useEffect } from 'react';\nimport { authStorage, login as apiLogin, logout as apiLogout, refresh as apiRefresh } from '../services/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [auth, setAuth] = useState(authStorage.load());\n  useEffect(() => {\n    authStorage.save(auth);\n  }, [auth]);\n  const login = async (email, password) => {\n    const state = await apiLogin({\n      email,\n      password\n    });\n    setAuth(state);\n  };\n  const logout = async () => {\n    await apiLogout(auth);\n    setAuth({\n      user: null,\n      accessToken: null,\n      refreshToken: null\n    });\n  };\n  const ensureAccessToken = async () => {\n    if (auth.accessToken) return auth.accessToken;\n    try {\n      const refreshed = await apiRefresh(auth);\n      setAuth(refreshed);\n      return refreshed.accessToken;\n    } catch {\n      return null;\n    }\n  };\n  const value = useMemo(() => ({\n    auth,\n    isAuthenticated: !!auth.user && !!auth.accessToken,\n    login,\n    logout,\n    ensureAccessToken\n  }), [auth]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"XuTRhJoQx/xmMpfVoM0z3Zmsrtc=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  const ctx = useContext(AuthContext);\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\n  return ctx;\n}\n_s2(useAuth, \"/dMy7t63NXD4eYACoT93CePwGrg=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useMemo","useState","useEffect","authStorage","login","apiLogin","logout","apiLogout","refresh","apiRefresh","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","auth","setAuth","load","save","email","password","state","user","accessToken","refreshToken","ensureAccessToken","refreshed","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","ctx","Error","$RefreshReg$"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useMemo, useState, useEffect, ReactNode } from 'react';\r\nimport { authStorage, login as apiLogin, logout as apiLogout, refresh as apiRefresh, type AuthState } from '../services/auth';\r\n\r\ninterface AuthContextValue {\r\n  auth: AuthState;\r\n  isAuthenticated: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  ensureAccessToken: () => Promise<string | null>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextValue | undefined>(undefined);\r\n\r\nexport function AuthProvider({ children }: { children: ReactNode }) {\r\n  const [auth, setAuth] = useState<AuthState>(authStorage.load());\r\n\r\n  useEffect(() => {\r\n    authStorage.save(auth);\r\n  }, [auth]);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    const state = await apiLogin({ email, password });\r\n    setAuth(state);\r\n  };\r\n\r\n  const logout = async () => {\r\n    await apiLogout(auth);\r\n    setAuth({ user: null, accessToken: null, refreshToken: null });\r\n  };\r\n\r\n  const ensureAccessToken = async (): Promise<string | null> => {\r\n    if (auth.accessToken) return auth.accessToken;\r\n    try {\r\n      const refreshed = await apiRefresh(auth);\r\n      setAuth(refreshed);\r\n      return refreshed.accessToken;\r\n    } catch {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const value = useMemo(() => ({\r\n    auth,\r\n    isAuthenticated: !!auth.user && !!auth.accessToken,\r\n    login,\r\n    logout,\r\n    ensureAccessToken\r\n  }), [auth]);\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n}\r\n\r\nexport function useAuth() {\r\n  const ctx = useContext(AuthContext);\r\n  if (!ctx) throw new Error('useAuth must be used within AuthProvider');\r\n  return ctx;\r\n}\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACjG,SAASC,WAAW,EAAEC,KAAK,IAAIC,QAAQ,EAAEC,MAAM,IAAIC,SAAS,EAAEC,OAAO,IAAIC,UAAU,QAAwB,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU9H,MAAMC,WAAW,gBAAGd,aAAa,CAA+Be,SAAS,CAAC;AAE1E,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAkC,CAAC,EAAE;EAAAC,EAAA;EAClE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAYE,WAAW,CAACgB,IAAI,CAAC,CAAC,CAAC;EAE/DjB,SAAS,CAAC,MAAM;IACdC,WAAW,CAACiB,IAAI,CAACH,IAAI,CAAC;EACxB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMb,KAAK,GAAG,MAAAA,CAAOiB,KAAa,EAAEC,QAAgB,KAAK;IACvD,MAAMC,KAAK,GAAG,MAAMlB,QAAQ,CAAC;MAAEgB,KAAK;MAAEC;IAAS,CAAC,CAAC;IACjDJ,OAAO,CAACK,KAAK,CAAC;EAChB,CAAC;EAED,MAAMjB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,SAAS,CAACU,IAAI,CAAC;IACrBC,OAAO,CAAC;MAAEM,IAAI,EAAE,IAAI;MAAEC,WAAW,EAAE,IAAI;MAAEC,YAAY,EAAE;IAAK,CAAC,CAAC;EAChE,CAAC;EAED,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAoC;IAC5D,IAAIV,IAAI,CAACQ,WAAW,EAAE,OAAOR,IAAI,CAACQ,WAAW;IAC7C,IAAI;MACF,MAAMG,SAAS,GAAG,MAAMnB,UAAU,CAACQ,IAAI,CAAC;MACxCC,OAAO,CAACU,SAAS,CAAC;MAClB,OAAOA,SAAS,CAACH,WAAW;IAC9B,CAAC,CAAC,MAAM;MACN,OAAO,IAAI;IACb;EACF,CAAC;EAED,MAAMI,KAAK,GAAG7B,OAAO,CAAC,OAAO;IAC3BiB,IAAI;IACJa,eAAe,EAAE,CAAC,CAACb,IAAI,CAACO,IAAI,IAAI,CAAC,CAACP,IAAI,CAACQ,WAAW;IAClDrB,KAAK;IACLE,MAAM;IACNqB;EACF,CAAC,CAAC,EAAE,CAACV,IAAI,CAAC,CAAC;EAEX,oBAAON,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAd,QAAA,EAAEA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E;AAACnB,EAAA,CArCeF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAuC5B,OAAO,SAASuB,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,MAAMC,GAAG,GAAGxC,UAAU,CAACa,WAAW,CAAC;EACnC,IAAI,CAAC2B,GAAG,EAAE,MAAM,IAAIC,KAAK,CAAC,0CAA0C,CAAC;EACrE,OAAOD,GAAG;AACZ;AAACD,GAAA,CAJeD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}