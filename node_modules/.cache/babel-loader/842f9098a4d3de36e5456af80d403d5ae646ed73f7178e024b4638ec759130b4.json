{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selecty\\\\Documents\\\\PetProjects\\\\chronoline-frontend\\\\src\\\\components\\\\Tooltips.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Tooltips = ({\n  hoveredPerson,\n  showTooltip,\n  mousePosition,\n  hoveredAchievement,\n  showAchievementTooltip,\n  achievementTooltipPosition,\n  getGroupColor,\n  getPersonGroup,\n  getCategoryColor\n}) => {\n  _s();\n  const [isMobile, setIsMobile] = useState(false);\n\n  // Определяем, является ли устройство мобильным\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n\n  // На мобильных устройствах не показываем tooltip\n  if (isMobile) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [hoveredPerson && showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        position: 'fixed',\n        left: `${mousePosition.x + 15}px`,\n        top: `${mousePosition.y - 10}px`,\n        padding: '1rem',\n        zIndex: 1000,\n        maxWidth: '300px',\n        minWidth: '250px',\n        color: '#f4e4c1',\n        pointerEvents: 'none',\n        opacity: 0,\n        transform: 'translateY(10px) scale(0.95)',\n        animation: 'tooltipFadeIn 0.2s ease-out forwards'\n      },\n      children: [hoveredPerson.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '0.75rem',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: hoveredPerson.imageUrl,\n          alt: hoveredPerson.name,\n          style: {\n            width: '80px',\n            height: '80px',\n            borderRadius: '50%',\n            objectFit: 'cover',\n            border: `2px solid ${getGroupColor(getPersonGroup(hoveredPerson))}`,\n            boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)'\n          },\n          onError: e => {\n            // Скрываем изображение если оно не загрузилось\n            e.currentTarget.style.display = 'none';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: '0 0 0.5rem 0',\n          color: getGroupColor(getPersonGroup(hoveredPerson)),\n          fontSize: '1.1rem',\n          fontWeight: 'bold'\n        },\n        children: hoveredPerson.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.85rem',\n          lineHeight: '1.4'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0',\n            fontWeight: 'bold'\n          },\n          children: [hoveredPerson.birthYear, \" - \", hoveredPerson.deathYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: getCategoryColor(hoveredPerson.category),\n              fontWeight: 'bold'\n            },\n            children: hoveredPerson.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), \" \\u2022 \", hoveredPerson.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.5rem 0',\n            fontStyle: 'italic',\n            opacity: 0.8\n          },\n          children: hoveredPerson.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), hoveredAchievement && showAchievementTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"achievement-tooltip\",\n      style: {\n        position: 'fixed',\n        left: `${achievementTooltipPosition.x + 15}px`,\n        top: `${achievementTooltipPosition.y - 10}px`,\n        padding: '0.75rem',\n        zIndex: 1001,\n        maxWidth: '250px',\n        minWidth: '200px',\n        color: '#f4e4c1',\n        pointerEvents: 'none',\n        opacity: 0,\n        transform: 'translateY(10px) scale(0.95)',\n        animation: 'tooltipFadeIn 0.2s ease-out forwards',\n        backgroundColor: 'rgba(44, 24, 16, 0.95)',\n        borderRadius: '6px',\n        border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.85rem',\n          lineHeight: '1.4'\n        },\n        children: [hoveredAchievement.person.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '0.5rem',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: hoveredAchievement.person.imageUrl,\n            alt: hoveredAchievement.person.name,\n            style: {\n              width: '50px',\n              height: '50px',\n              borderRadius: '50%',\n              objectFit: 'cover',\n              border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\n              boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)'\n            },\n            onError: e => {\n              // Скрываем изображение если оно не загрузилось\n              e.currentTarget.style.display = 'none';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: '0 0 0.5rem 0',\n            color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\n            fontSize: '1rem',\n            fontWeight: 'bold'\n          },\n          children: hoveredAchievement.person.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0',\n            fontWeight: 'bold',\n            color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\n            fontSize: '0.9rem'\n          },\n          children: [\"\\uD83C\\uDFAF \", hoveredAchievement.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0',\n            fontSize: '0.8rem',\n            fontStyle: 'italic'\n          },\n          children: hoveredAchievement.person.achievements[hoveredAchievement.index] || 'Ключевое достижение'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Tooltips, \"0VTTNJATKABQPGLm9RVT0tKGUgU=\");\n_c = Tooltips;\nvar _c;\n$RefreshReg$(_c, \"Tooltips\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Tooltips","hoveredPerson","showTooltip","mousePosition","hoveredAchievement","showAchievementTooltip","achievementTooltipPosition","getGroupColor","getPersonGroup","getCategoryColor","_s","isMobile","setIsMobile","checkMobile","window","innerWidth","addEventListener","removeEventListener","children","className","style","position","left","x","top","y","padding","zIndex","maxWidth","minWidth","color","pointerEvents","opacity","transform","animation","imageUrl","marginBottom","textAlign","src","alt","name","width","height","borderRadius","objectFit","border","boxShadow","onError","e","currentTarget","display","fileName","_jsxFileName","lineNumber","columnNumber","margin","fontSize","fontWeight","lineHeight","birthYear","deathYear","category","country","fontStyle","description","backgroundColor","person","year","achievements","index","_c","$RefreshReg$"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/components/Tooltips.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Person } from '../types'\r\n\r\ninterface TooltipsProps {\r\n  hoveredPerson: Person | null\r\n  showTooltip: boolean\r\n  mousePosition: { x: number; y: number }\r\n  hoveredAchievement: { person: Person; year: number; index: number } | null\r\n  showAchievementTooltip: boolean\r\n  achievementTooltipPosition: { x: number; y: number }\r\n  getGroupColor: (groupName: string) => string\r\n  getPersonGroup: (person: Person) => string\r\n  getCategoryColor: (category: string) => string\r\n}\r\n\r\nexport const Tooltips: React.FC<TooltipsProps> = ({\r\n  hoveredPerson,\r\n  showTooltip,\r\n  mousePosition,\r\n  hoveredAchievement,\r\n  showAchievementTooltip,\r\n  achievementTooltipPosition,\r\n  getGroupColor,\r\n  getPersonGroup,\r\n  getCategoryColor\r\n}) => {\r\n  const [isMobile, setIsMobile] = useState(false)\r\n  \r\n  // Определяем, является ли устройство мобильным\r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      setIsMobile(window.innerWidth <= 768)\r\n    }\r\n    \r\n    checkMobile()\r\n    window.addEventListener('resize', checkMobile)\r\n    return () => window.removeEventListener('resize', checkMobile)\r\n  }, [])\r\n\r\n  // На мобильных устройствах не показываем tooltip\r\n  if (isMobile) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Всплывающее окно с информацией */}\r\n      {hoveredPerson && showTooltip && (\r\n        <div className=\"tooltip\" style={{ \r\n          position: 'fixed',\r\n          left: `${mousePosition.x + 15}px`,\r\n          top: `${mousePosition.y - 10}px`,\r\n          padding: '1rem',\r\n          zIndex: 1000,\r\n          maxWidth: '300px',\r\n          minWidth: '250px',\r\n          color: '#f4e4c1',\r\n          pointerEvents: 'none',\r\n          opacity: 0,\r\n          transform: 'translateY(10px) scale(0.95)',\r\n          animation: 'tooltipFadeIn 0.2s ease-out forwards'\r\n        }}>\r\n          {/* Фотография человека, если есть */}\r\n          {hoveredPerson.imageUrl && (\r\n            <div style={{ \r\n              marginBottom: '0.75rem',\r\n              textAlign: 'center'\r\n            }}>\r\n              <img \r\n                src={hoveredPerson.imageUrl} \r\n                alt={hoveredPerson.name}\r\n                style={{\r\n                  width: '80px',\r\n                  height: '80px',\r\n                  borderRadius: '50%',\r\n                  objectFit: 'cover',\r\n                  border: `2px solid ${getGroupColor(getPersonGroup(hoveredPerson))}`,\r\n                  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)'\r\n                }}\r\n                onError={(e) => {\r\n                  // Скрываем изображение если оно не загрузилось\r\n                  e.currentTarget.style.display = 'none';\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          \r\n          <h3 style={{ \r\n            margin: '0 0 0.5rem 0', \r\n            color: getGroupColor(getPersonGroup(hoveredPerson)),\r\n            fontSize: '1.1rem',\r\n            fontWeight: 'bold'\r\n          }}>\r\n            {hoveredPerson.name}\r\n          </h3>\r\n          \r\n          <div style={{ fontSize: '0.85rem', lineHeight: '1.4' }}>\r\n            <p style={{ margin: '0.25rem 0', fontWeight: 'bold' }}>\r\n              {hoveredPerson.birthYear} - {hoveredPerson.deathYear}\r\n            </p>\r\n            <p style={{ margin: '0.25rem 0' }}>\r\n              <span style={{ color: getCategoryColor(hoveredPerson.category), fontWeight: 'bold' }}>\r\n                {hoveredPerson.category}\r\n              </span> • {hoveredPerson.country}\r\n            </p>\r\n            <p style={{ margin: '0.5rem 0', fontStyle: 'italic', opacity: 0.8 }}>\r\n              {hoveredPerson.description}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Всплывающее окно для достижений */}\r\n      {hoveredAchievement && showAchievementTooltip && (\r\n        <div className=\"achievement-tooltip\" style={{ \r\n          position: 'fixed',\r\n          left: `${achievementTooltipPosition.x + 15}px`,\r\n          top: `${achievementTooltipPosition.y - 10}px`,\r\n          padding: '0.75rem',\r\n          zIndex: 1001,\r\n          maxWidth: '250px',\r\n          minWidth: '200px',\r\n          color: '#f4e4c1',\r\n          pointerEvents: 'none',\r\n          opacity: 0,\r\n          transform: 'translateY(10px) scale(0.95)',\r\n          animation: 'tooltipFadeIn 0.2s ease-out forwards',\r\n          backgroundColor: 'rgba(44, 24, 16, 0.95)',\r\n          borderRadius: '6px',\r\n          border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\r\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)'\r\n        }}>\r\n          <div style={{ fontSize: '0.85rem', lineHeight: '1.4' }}>\r\n            {/* Фотография человека, если есть */}\r\n            {hoveredAchievement.person.imageUrl && (\r\n              <div style={{ \r\n                marginBottom: '0.5rem',\r\n                textAlign: 'center'\r\n              }}>\r\n                <img \r\n                  src={hoveredAchievement.person.imageUrl} \r\n                  alt={hoveredAchievement.person.name}\r\n                  style={{\r\n                    width: '50px',\r\n                    height: '50px',\r\n                    borderRadius: '50%',\r\n                    objectFit: 'cover',\r\n                    border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\r\n                    boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)'\r\n                  }}\r\n                  onError={(e) => {\r\n                    // Скрываем изображение если оно не загрузилось\r\n                    e.currentTarget.style.display = 'none';\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n            \r\n            <h4 style={{ \r\n              margin: '0 0 0.5rem 0', \r\n              color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\r\n              fontSize: '1rem',\r\n              fontWeight: 'bold'\r\n            }}>\r\n              {hoveredAchievement.person.name}\r\n            </h4>\r\n            \r\n            <p style={{ \r\n              margin: '0.25rem 0', \r\n              fontWeight: 'bold',\r\n              color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\r\n              fontSize: '0.9rem'\r\n            }}>\r\n              🎯 {hoveredAchievement.year}\r\n            </p>\r\n            \r\n            <p style={{ \r\n              margin: '0.25rem 0', \r\n              fontSize: '0.8rem',\r\n              fontStyle: 'italic'\r\n            }}>\r\n              {hoveredAchievement.person.achievements[hoveredAchievement.index] || 'Ключевое достижение'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n} "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAelD,OAAO,MAAMC,QAAiC,GAAGA,CAAC;EAChDC,aAAa;EACbC,WAAW;EACXC,aAAa;EACbC,kBAAkB;EAClBC,sBAAsB;EACtBC,0BAA0B;EAC1BC,aAAa;EACbC,cAAc;EACdC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMkB,WAAW,GAAGA,CAAA,KAAM;MACxBD,WAAW,CAACE,MAAM,CAACC,UAAU,IAAI,GAAG,CAAC;IACvC,CAAC;IAEDF,WAAW,CAAC,CAAC;IACbC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,WAAW,CAAC;IAC9C,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,WAAW,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIF,QAAQ,EAAE;IACZ,OAAO,IAAI;EACb;EAEA,oBACEd,OAAA,CAAAE,SAAA;IAAAmB,QAAA,GAEGjB,aAAa,IAAIC,WAAW,iBAC3BL,OAAA;MAAKsB,SAAS,EAAC,SAAS;MAACC,KAAK,EAAE;QAC9BC,QAAQ,EAAE,OAAO;QACjBC,IAAI,EAAE,GAAGnB,aAAa,CAACoB,CAAC,GAAG,EAAE,IAAI;QACjCC,GAAG,EAAE,GAAGrB,aAAa,CAACsB,CAAC,GAAG,EAAE,IAAI;QAChCC,OAAO,EAAE,MAAM;QACfC,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAE,OAAO;QACjBC,QAAQ,EAAE,OAAO;QACjBC,KAAK,EAAE,SAAS;QAChBC,aAAa,EAAE,MAAM;QACrBC,OAAO,EAAE,CAAC;QACVC,SAAS,EAAE,8BAA8B;QACzCC,SAAS,EAAE;MACb,CAAE;MAAAhB,QAAA,GAECjB,aAAa,CAACkC,QAAQ,iBACrBtC,OAAA;QAAKuB,KAAK,EAAE;UACVgB,YAAY,EAAE,SAAS;UACvBC,SAAS,EAAE;QACb,CAAE;QAAAnB,QAAA,eACArB,OAAA;UACEyC,GAAG,EAAErC,aAAa,CAACkC,QAAS;UAC5BI,GAAG,EAAEtC,aAAa,CAACuC,IAAK;UACxBpB,KAAK,EAAE;YACLqB,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE,MAAM;YACdC,YAAY,EAAE,KAAK;YACnBC,SAAS,EAAE,OAAO;YAClBC,MAAM,EAAE,aAAatC,aAAa,CAACC,cAAc,CAACP,aAAa,CAAC,CAAC,EAAE;YACnE6C,SAAS,EAAE;UACb,CAAE;UACFC,OAAO,EAAGC,CAAC,IAAK;YACd;YACAA,CAAC,CAACC,aAAa,CAAC7B,KAAK,CAAC8B,OAAO,GAAG,MAAM;UACxC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CACN,eAEDzD,OAAA;QAAIuB,KAAK,EAAE;UACTmC,MAAM,EAAE,cAAc;UACtBzB,KAAK,EAAEvB,aAAa,CAACC,cAAc,CAACP,aAAa,CAAC,CAAC;UACnDuD,QAAQ,EAAE,QAAQ;UAClBC,UAAU,EAAE;QACd,CAAE;QAAAvC,QAAA,EACCjB,aAAa,CAACuC;MAAI;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC,eAELzD,OAAA;QAAKuB,KAAK,EAAE;UAAEoC,QAAQ,EAAE,SAAS;UAAEE,UAAU,EAAE;QAAM,CAAE;QAAAxC,QAAA,gBACrDrB,OAAA;UAAGuB,KAAK,EAAE;YAAEmC,MAAM,EAAE,WAAW;YAAEE,UAAU,EAAE;UAAO,CAAE;UAAAvC,QAAA,GACnDjB,aAAa,CAAC0D,SAAS,EAAC,KAAG,EAAC1D,aAAa,CAAC2D,SAAS;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eACJzD,OAAA;UAAGuB,KAAK,EAAE;YAAEmC,MAAM,EAAE;UAAY,CAAE;UAAArC,QAAA,gBAChCrB,OAAA;YAAMuB,KAAK,EAAE;cAAEU,KAAK,EAAErB,gBAAgB,CAACR,aAAa,CAAC4D,QAAQ,CAAC;cAAEJ,UAAU,EAAE;YAAO,CAAE;YAAAvC,QAAA,EAClFjB,aAAa,CAAC4D;UAAQ;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnB,CAAC,YAAG,EAACrD,aAAa,CAAC6D,OAAO;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC,eACJzD,OAAA;UAAGuB,KAAK,EAAE;YAAEmC,MAAM,EAAE,UAAU;YAAEQ,SAAS,EAAE,QAAQ;YAAE/B,OAAO,EAAE;UAAI,CAAE;UAAAd,QAAA,EACjEjB,aAAa,CAAC+D;QAAW;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAGAlD,kBAAkB,IAAIC,sBAAsB,iBAC3CR,OAAA;MAAKsB,SAAS,EAAC,qBAAqB;MAACC,KAAK,EAAE;QAC1CC,QAAQ,EAAE,OAAO;QACjBC,IAAI,EAAE,GAAGhB,0BAA0B,CAACiB,CAAC,GAAG,EAAE,IAAI;QAC9CC,GAAG,EAAE,GAAGlB,0BAA0B,CAACmB,CAAC,GAAG,EAAE,IAAI;QAC7CC,OAAO,EAAE,SAAS;QAClBC,MAAM,EAAE,IAAI;QACZC,QAAQ,EAAE,OAAO;QACjBC,QAAQ,EAAE,OAAO;QACjBC,KAAK,EAAE,SAAS;QAChBC,aAAa,EAAE,MAAM;QACrBC,OAAO,EAAE,CAAC;QACVC,SAAS,EAAE,8BAA8B;QACzCC,SAAS,EAAE,sCAAsC;QACjD+B,eAAe,EAAE,wBAAwB;QACzCtB,YAAY,EAAE,KAAK;QACnBE,MAAM,EAAE,aAAatC,aAAa,CAACC,cAAc,CAACJ,kBAAkB,CAAC8D,MAAM,CAAC,CAAC,EAAE;QAC/EpB,SAAS,EAAE;MACb,CAAE;MAAA5B,QAAA,eACArB,OAAA;QAAKuB,KAAK,EAAE;UAAEoC,QAAQ,EAAE,SAAS;UAAEE,UAAU,EAAE;QAAM,CAAE;QAAAxC,QAAA,GAEpDd,kBAAkB,CAAC8D,MAAM,CAAC/B,QAAQ,iBACjCtC,OAAA;UAAKuB,KAAK,EAAE;YACVgB,YAAY,EAAE,QAAQ;YACtBC,SAAS,EAAE;UACb,CAAE;UAAAnB,QAAA,eACArB,OAAA;YACEyC,GAAG,EAAElC,kBAAkB,CAAC8D,MAAM,CAAC/B,QAAS;YACxCI,GAAG,EAAEnC,kBAAkB,CAAC8D,MAAM,CAAC1B,IAAK;YACpCpB,KAAK,EAAE;cACLqB,KAAK,EAAE,MAAM;cACbC,MAAM,EAAE,MAAM;cACdC,YAAY,EAAE,KAAK;cACnBC,SAAS,EAAE,OAAO;cAClBC,MAAM,EAAE,aAAatC,aAAa,CAACC,cAAc,CAACJ,kBAAkB,CAAC8D,MAAM,CAAC,CAAC,EAAE;cAC/EpB,SAAS,EAAE;YACb,CAAE;YACFC,OAAO,EAAGC,CAAC,IAAK;cACd;cACAA,CAAC,CAACC,aAAa,CAAC7B,KAAK,CAAC8B,OAAO,GAAG,MAAM;YACxC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,eAEDzD,OAAA;UAAIuB,KAAK,EAAE;YACTmC,MAAM,EAAE,cAAc;YACtBzB,KAAK,EAAEvB,aAAa,CAACC,cAAc,CAACJ,kBAAkB,CAAC8D,MAAM,CAAC,CAAC;YAC/DV,QAAQ,EAAE,MAAM;YAChBC,UAAU,EAAE;UACd,CAAE;UAAAvC,QAAA,EACCd,kBAAkB,CAAC8D,MAAM,CAAC1B;QAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7B,CAAC,eAELzD,OAAA;UAAGuB,KAAK,EAAE;YACRmC,MAAM,EAAE,WAAW;YACnBE,UAAU,EAAE,MAAM;YAClB3B,KAAK,EAAEvB,aAAa,CAACC,cAAc,CAACJ,kBAAkB,CAAC8D,MAAM,CAAC,CAAC;YAC/DV,QAAQ,EAAE;UACZ,CAAE;UAAAtC,QAAA,GAAC,eACE,EAACd,kBAAkB,CAAC+D,IAAI;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,eAEJzD,OAAA;UAAGuB,KAAK,EAAE;YACRmC,MAAM,EAAE,WAAW;YACnBC,QAAQ,EAAE,QAAQ;YAClBO,SAAS,EAAE;UACb,CAAE;UAAA7C,QAAA,EACCd,kBAAkB,CAAC8D,MAAM,CAACE,YAAY,CAAChE,kBAAkB,CAACiE,KAAK,CAAC,IAAI;QAAqB;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA,eACD,CAAC;AAEP,CAAC;AAAA5C,EAAA,CA7KYV,QAAiC;AAAAsE,EAAA,GAAjCtE,QAAiC;AAAA,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}