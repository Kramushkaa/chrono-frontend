{"ast":null,"code":"import React,{useState}from'react';import{register as apiRegister}from'../../services/auth';import{useAuth}from'../../context';import{useToast}from'../../context/ToastContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function RegisterForm(_ref){let{onSuccess}=_ref;const{login}=useAuth();const{showToast}=useToast();const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[username,setUsername]=useState('');const[fullName,setFullName]=useState('');const[loading,setLoading]=useState(false);const[error,setError]=useState(null);const validate=()=>{const errors=[];if(!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email))errors.push('Некорректный email');if(password.length<8)errors.push('Пароль: минимум 8 символов');if(!/[A-Z]/.test(password))errors.push('Пароль: хотя бы одна заглавная буква');if(!/[a-z]/.test(password))errors.push('Пароль: хотя бы одна строчная буква');if(!/\\d/.test(password))errors.push('Пароль: хотя бы одна цифра');if(username){if(username.length<3)errors.push('Имя пользователя: минимум 3 символа');if(username.length>50)errors.push('Имя пользователя: не более 50 символов');if(!/^[a-zA-Z0-9_-]+$/.test(username))errors.push('Имя пользователя: только латинские буквы, цифры, - и _');}if(fullName&&fullName.length>255)errors.push('Полное имя: не более 255 символов');return errors;};const handleSubmit=async e=>{e.preventDefault();setError(null);const validationErrors=validate();if(validationErrors.length){setError(validationErrors.join('\\n'));return;}setLoading(true);try{await apiRegister({email,password,username,full_name:fullName});showToast('Регистрация успешна','success');// Автовход после успешной регистрации\ntry{await login(email,password);showToast('Вход выполнен','success');}catch(_){// если автологин не удался — просто идём дальше по потоку\nshowToast('Не удалось автоматически войти','info');}onSuccess===null||onSuccess===void 0?void 0:onSuccess();}catch(err){setError((err===null||err===void 0?void 0:err.message)||'Ошибка регистрации');showToast((err===null||err===void 0?void 0:err.message)||'Ошибка регистрации','error');}finally{setLoading(false);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,style:{display:'grid',gap:8,maxWidth:320},children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",value:password,onChange:e=>setPassword(e.target.value),required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",value:username,onChange:e=>setUsername(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\u041F\\u043E\\u043B\\u043D\\u043E\\u0435 \\u0438\\u043C\\u044F\",value:fullName,onChange:e=>setFullName(e.target.value)}),error&&/*#__PURE__*/_jsx(\"pre\",{style:{whiteSpace:'pre-wrap',color:'red',fontSize:12},children:error}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",disabled:loading,children:loading?'Регистрируем...':'Зарегистрироваться'}),/*#__PURE__*/_jsx(\"div\",{style:{fontSize:12,color:'#666'},children:\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C: \\u043C\\u0438\\u043D\\u0438\\u043C\\u0443\\u043C 8 \\u0441\\u0438\\u043C\\u0432\\u043E\\u043B\\u043E\\u0432, \\u0445\\u043E\\u0442\\u044F \\u0431\\u044B \\u043E\\u0434\\u043D\\u0430 \\u0437\\u0430\\u0433\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F, \\u0441\\u0442\\u0440\\u043E\\u0447\\u043D\\u0430\\u044F \\u0431\\u0443\\u043A\\u0432\\u0430 \\u0438 \\u0446\\u0438\\u0444\\u0440\\u0430. \\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u2014 \\u043B\\u0430\\u0442\\u0438\\u043D\\u0438\\u0446\\u0430/\\u0446\\u0438\\u0444\\u0440\\u044B/\\\"-\\\"/\\\"_\\\".\"})]});}","map":{"version":3,"names":["React","useState","register","apiRegister","useAuth","useToast","jsx","_jsx","jsxs","_jsxs","RegisterForm","_ref","onSuccess","login","showToast","email","setEmail","password","setPassword","username","setUsername","fullName","setFullName","loading","setLoading","error","setError","validate","errors","test","push","length","handleSubmit","e","preventDefault","validationErrors","join","full_name","_","err","message","onSubmit","style","display","gap","maxWidth","children","type","placeholder","value","onChange","target","required","whiteSpace","color","fontSize","disabled"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/components/Auth/RegisterForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { register as apiRegister } from '../../services/auth';\r\nimport { useAuth } from '../../context';\r\nimport { useToast } from '../../context/ToastContext';\r\n\r\nexport function RegisterForm({ onSuccess }: { onSuccess?: () => void }) {\r\n  const { login } = useAuth();\r\n  const { showToast } = useToast();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [fullName, setFullName] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const validate = () => {\r\n    const errors: string[] = [];\r\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) errors.push('Некорректный email');\r\n    if (password.length < 8) errors.push('Пароль: минимум 8 символов');\r\n    if (!/[A-Z]/.test(password)) errors.push('Пароль: хотя бы одна заглавная буква');\r\n    if (!/[a-z]/.test(password)) errors.push('Пароль: хотя бы одна строчная буква');\r\n    if (!/\\d/.test(password)) errors.push('Пароль: хотя бы одна цифра');\r\n    if (username) {\r\n      if (username.length < 3) errors.push('Имя пользователя: минимум 3 символа');\r\n      if (username.length > 50) errors.push('Имя пользователя: не более 50 символов');\r\n      if (!/^[a-zA-Z0-9_-]+$/.test(username)) errors.push('Имя пользователя: только латинские буквы, цифры, - и _');\r\n    }\r\n    if (fullName && fullName.length > 255) errors.push('Полное имя: не более 255 символов');\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n    const validationErrors = validate();\r\n    if (validationErrors.length) {\r\n      setError(validationErrors.join('\\n'));\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    try {\r\n      await apiRegister({ email, password, username, full_name: fullName });\r\n      showToast('Регистрация успешна', 'success');\r\n      // Автовход после успешной регистрации\r\n      try {\r\n        await login(email, password);\r\n        showToast('Вход выполнен', 'success');\r\n      } catch (_) {\r\n        // если автологин не удался — просто идём дальше по потоку\r\n        showToast('Не удалось автоматически войти', 'info');\r\n      }\r\n      onSuccess?.();\r\n    } catch (err: any) {\r\n      setError(err?.message || 'Ошибка регистрации');\r\n      showToast(err?.message || 'Ошибка регистрации', 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} style={{ display: 'grid', gap: 8, maxWidth: 320 }}>\r\n      <h3>Регистрация</h3>\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n      <input type=\"password\" placeholder=\"Пароль\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n      <input type=\"text\" placeholder=\"Имя пользователя\" value={username} onChange={(e) => setUsername(e.target.value)} />\r\n      <input type=\"text\" placeholder=\"Полное имя\" value={fullName} onChange={(e) => setFullName(e.target.value)} />\r\n      {error && <pre style={{ whiteSpace: 'pre-wrap', color: 'red', fontSize: 12 }}>{error}</pre>}\r\n      <button type=\"submit\" disabled={loading}>{loading ? 'Регистрируем...' : 'Зарегистрироваться'}</button>\r\n      <div style={{ fontSize: 12, color: '#666' }}>\r\n        Пароль: минимум 8 символов, хотя бы одна заглавная, строчная буква и цифра. Имя пользователя — латиница/цифры/\"-\"/\"_\".\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}