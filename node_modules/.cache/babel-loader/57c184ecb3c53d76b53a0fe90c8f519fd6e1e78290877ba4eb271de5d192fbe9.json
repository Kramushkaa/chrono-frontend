{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selecty\\\\Documents\\\\PetProjects\\\\chronoline-frontend\\\\src\\\\components\\\\Timeline.tsx\";\nimport React from 'react';\nimport { getPosition, getWidth, getCenturyColor, getCenturyNumber, toRomanNumeral } from '../utils/timelineUtils';\n\n// Типы для элементов временной линии\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Timeline = ({\n  isLoading,\n  timelineWidth,\n  totalHeight,\n  centuryBoundaries,\n  minYear,\n  pixelsPerYear,\n  LEFT_PADDING_PX,\n  rowPlacement,\n  filters,\n  groupingType,\n  categoryDividers,\n  getGroupColor,\n  getGroupColorDark,\n  getGroupColorMuted,\n  getPersonGroup,\n  hoveredPerson,\n  setHoveredPerson,\n  mousePosition,\n  setMousePosition,\n  showTooltip,\n  setShowTooltip,\n  activeAchievementMarker,\n  setActiveAchievementMarker,\n  hoveredAchievement,\n  setHoveredAchievement,\n  achievementTooltipPosition,\n  setAchievementTooltipPosition,\n  showAchievementTooltip,\n  setShowAchievementTooltip,\n  hoverTimerRef,\n  sortedData\n}) => {\n  // Функция для определения пустых веков на основе отфильтрованных данных\n  const getEmptyCenturies = () => {\n    if (!sortedData || sortedData.length === 0) return new Set();\n\n    // Используем отфильтрованные данные для определения диапазона\n    const minYear = Math.min(...sortedData.map(p => p.birthYear));\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear));\n    const startCentury = Math.floor(minYear / 100) * 100;\n    const endCentury = Math.ceil(maxYear / 100) * 100;\n    const emptyCenturies = new Set();\n    for (let centuryStart = startCentury; centuryStart <= endCentury; centuryStart += 100) {\n      const centuryEnd = centuryStart + 99;\n      const hasDataInCentury = sortedData.some(person => person.birthYear <= centuryEnd && person.deathYear >= centuryStart);\n      if (!hasDataInCentury) {\n        emptyCenturies.add(centuryStart);\n      }\n    }\n    return emptyCenturies;\n  };\n\n  // Создаем массив для отображения веков с промежутками\n  const getTimelineElements = () => {\n    if (!filters.hideEmptyCenturies) {\n      return centuryBoundaries.map(year => ({\n        type: 'century',\n        year\n      }));\n    }\n    const emptyCenturies = getEmptyCenturies();\n    const visibleCenturies = centuryBoundaries.filter(year => !emptyCenturies.has(year));\n    const elements = [];\n    for (let i = 0; i < visibleCenturies.length; i++) {\n      const currentYear = visibleCenturies[i];\n\n      // Добавляем промежуток перед веком (кроме первого)\n      if (i > 0) {\n        const prevYear = visibleCenturies[i - 1];\n        const gapStart = prevYear + 100;\n        const gapEnd = currentYear;\n\n        // Находим все скрытые века в промежутке\n        const hiddenCenturies = [];\n        for (let year = gapStart; year < gapEnd; year += 100) {\n          if (emptyCenturies.has(year)) {\n            hiddenCenturies.push(year);\n          }\n        }\n        if (hiddenCenturies.length > 0) {\n          elements.push({\n            type: 'gap',\n            startYear: gapStart,\n            endYear: gapEnd,\n            hiddenCenturies\n          });\n        }\n      }\n\n      // Добавляем сам век\n      elements.push({\n        type: 'century',\n        year: currentYear\n      });\n    }\n    return elements;\n  };\n  const timelineElements = getTimelineElements();\n\n  // Функция для вычисления позиции с учетом промежутков\n  const getAdjustedPosition = year => {\n    if (!filters.hideEmptyCenturies) {\n      return getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    }\n\n    // Находим позицию года в оригинальной шкале\n    const originalPosition = getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n\n    // Вычисляем смещение, проходя по всем промежуткам до этого года\n    let totalOffset = 0;\n    for (const element of timelineElements) {\n      if (element.type === 'gap') {\n        const gapStart = getPosition(element.startYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const gapEnd = getPosition(element.endYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const originalGapWidth = gapEnd - gapStart;\n        const newGapWidth = pixelsPerYear * 10; // 10 лет\n\n        // Если год находится после этого промежутка, добавляем смещение\n        if (year >= element.endYear) {\n          totalOffset += originalGapWidth - newGapWidth;\n        }\n      }\n    }\n    return originalPosition - totalOffset;\n  };\n\n  // Функция для вычисления ширины с учетом промежутков\n  const getAdjustedWidth = (startYear, endYear) => {\n    if (!filters.hideEmptyCenturies) {\n      return getWidth(startYear, endYear, pixelsPerYear);\n    }\n    const startPos = getAdjustedPosition(startYear);\n    const endPos = getAdjustedPosition(endYear);\n    return endPos - startPos;\n  };\n\n  // Функция для вычисления скорректированной ширины таймлайна\n  const getAdjustedTimelineWidth = () => {\n    if (!filters.hideEmptyCenturies) {\n      return timelineWidth;\n    }\n\n    // Находим самый правый элемент\n    const lastElement = timelineElements[timelineElements.length - 1];\n    if (!lastElement) return timelineWidth;\n    let adjustedWidth = 0;\n    if (lastElement.type === 'century') {\n      // Если последний элемент - век, его правая граница\n      adjustedWidth = getAdjustedPosition(lastElement.year + 100);\n    } else if (lastElement.type === 'gap') {\n      // Если последний элемент - промежуток, его правая граница\n      adjustedWidth = getAdjustedPosition(lastElement.startYear) + pixelsPerYear * 10;\n    }\n    return Math.max(adjustedWidth + 100, timelineWidth); // Добавляем отступ справа\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"app-main\",\n    children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-container\",\n      style: {\n        position: 'relative',\n        height: 'calc(100vh - 100px)',\n        overflow: 'auto',\n        padding: '1rem 0 2rem 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 1\n        },\n        children: timelineElements.map((element, index) => {\n          if (element.type === 'century') {\n            const year = element.year;\n            // Каждый век занимает ровно 100 лет\n            const nextYear = year + 100;\n            const startPos = getAdjustedPosition(year);\n            const endPos = getAdjustedPosition(nextYear);\n            const width = endPos - startPos;\n\n            // Вычисляем век на основе центра года в столетии\n            const centerYear = year + 50;\n            const centuryNumber = getCenturyNumber(centerYear);\n            // Для отрицательных веков добавляем знак минус\n            const isNegativeCentury = year < 0;\n            const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${startPos}px`,\n                width: `${width}px`,\n                height: '100%',\n                background: getCenturyColor(year, minYear),\n                opacity: 0.3,\n                zIndex: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"century-label\",\n                style: {\n                  position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  fontSize: '2rem',\n                  fontWeight: 'bold',\n                  color: 'rgba(244, 228, 193, 0.6)',\n                  textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n                  pointerEvents: 'none',\n                  zIndex: 2,\n                  fontFamily: 'serif'\n                },\n                children: romanNumeral\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)\n            }, `century-bg-${year}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 17\n            }, this);\n          } else if (element.type === 'gap') {\n            var _element$hiddenCentur;\n            // Промежуток между веками - компактный размер (1/10 века)\n            const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n            const startPos = getAdjustedPosition(element.startYear);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${startPos}px`,\n                width: `${gapWidth}px`,\n                height: '100%',\n                background: 'rgba(139, 69, 19, 0.1)',\n                border: '1px dashed rgba(139, 69, 19, 0.3)',\n                zIndex: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  fontSize: '0.8rem',\n                  color: 'rgba(139, 69, 19, 0.7)',\n                  textAlign: 'center',\n                  pointerEvents: 'none',\n                  zIndex: 2,\n                  fontWeight: 'bold'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u043E:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 42\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    fontSize: '0.7rem',\n                    marginTop: '2px'\n                  },\n                  children: ((_element$hiddenCentur = element.hiddenCenturies) === null || _element$hiddenCentur === void 0 ? void 0 : _element$hiddenCentur.map(year => {\n                    const centuryNumber = getCenturyNumber(year + 50);\n                    const isNegativeCentury = year < 0;\n                    const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n                    return romanNumeral;\n                  }).join(', ')) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 22\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 19\n              }, this)\n            }, `gap-${element.startYear}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 18\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${timelineWidth}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 5\n        },\n        children: timelineElements.map(element => {\n          if (element.type === 'century') {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(element.year)}px`,\n                width: '2px',\n                height: '100%',\n                background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                zIndex: 5\n              }\n            }, `century-line-${element.year}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 19\n            }, this);\n          } else if (element.type === 'gap') {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(element.startYear)}px`,\n                width: '2px',\n                height: '100%',\n                background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                zIndex: 5\n              }\n            }, `gap-line-${element.startYear}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${timelineWidth}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 8\n        },\n        children: categoryDividers.map(divider => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: `${divider.top}px`,\n            left: '0',\n            width: '100%',\n            height: '10px',\n            background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n            opacity: 0.6,\n            zIndex: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-label\",\n            style: {\n              position: 'absolute',\n              left: '20px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              background: getGroupColor(divider.category),\n              color: 'white',\n              padding: '2px 8px',\n              borderRadius: '4px',\n              fontSize: '0.7rem',\n              fontWeight: 'bold',\n              whiteSpace: 'nowrap',\n              zIndex: 9\n            },\n            children: divider.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)\n        }, `category-divider-${divider.category}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'relative',\n          width: `${timelineWidth}px`,\n          height: `${totalHeight + 60}px`,\n          zIndex: 10\n        },\n        children: rowPlacement.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            height: row.length === 0 ? '20px' : '60px',\n            marginBottom: row.length === 0 ? '0px' : '10px'\n          },\n          children: row.map(person => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.birthYear)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: 'rgba(244, 228, 193, 0.6)',\n                fontStyle: 'italic',\n                fontWeight: 400,\n                transform: 'translateX(-100%) translateY(-10px)'\n              },\n              children: person.birthYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 38\n            }, this), person.reignStart && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reign-label\",\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.reignStart)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: '#E57373',\n                // Темно-красный\n                fontStyle: 'italic',\n                fontWeight: 'bold',\n                transform: 'translateX(-100%) translateY(-22px)'\n              },\n              children: [\"\\uD83D\\uDC51 \", person.reignStart]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 22\n            }, this), person.reignEnd && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reign-label\",\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.reignEnd)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: '#E57373',\n                // Темно-красный\n                fontStyle: 'italic',\n                fontWeight: 'bold',\n                transform: 'translateY(-22px)'\n              },\n              children: person.reignEnd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.deathYear)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: 'rgba(244, 228, 193, 0.6)',\n                fontStyle: 'italic',\n                fontWeight: 400,\n                transform: 'translateY(-10px)'\n              },\n              children: person.deathYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 38\n            }, this), filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3].filter(year => year !== undefined && year !== null).map((year, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  left: `${getAdjustedPosition(year)}px`,\n                  top: '-4px',\n                  width: '2px',\n                  height: '15px',\n                  backgroundColor: getGroupColorDark(getPersonGroup(person)),\n                  zIndex: (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.personId) === person.id && (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.index) === index ? 10 : 3,\n                  transform: 'translateX(-50%)',\n                  cursor: 'pointer',\n                  transition: 'all 0.2s ease'\n                },\n                onMouseEnter: e => {\n                  e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                  e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n\n                  // Устанавливаем активный маркер\n                  setActiveAchievementMarker({\n                    personId: person.id,\n                    index\n                  });\n\n                  // Очищаем предыдущий таймер если он есть\n                  if (hoverTimerRef.current) {\n                    clearTimeout(hoverTimerRef.current);\n                  }\n\n                  // Запускаем таймер для показа tooltip\n                  hoverTimerRef.current = setTimeout(() => {\n                    setHoveredAchievement({\n                      person,\n                      year: year,\n                      index\n                    });\n                    setAchievementTooltipPosition({\n                      x: e.clientX,\n                      y: e.clientY\n                    });\n                    setShowAchievementTooltip(true);\n                  }, 500);\n                },\n                onMouseLeave: e => {\n                  e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                  e.currentTarget.style.boxShadow = 'none';\n\n                  // Сбрасываем активный маркер\n                  setActiveAchievementMarker(null);\n\n                  // Очищаем таймер и скрываем tooltip\n                  if (hoverTimerRef.current) {\n                    clearTimeout(hoverTimerRef.current);\n                    hoverTimerRef.current = null;\n                  }\n                  setShowAchievementTooltip(false);\n                  setHoveredAchievement(null);\n                },\n                onMouseMove: e => {\n                  setAchievementTooltipPosition({\n                    x: e.clientX,\n                    y: e.clientY\n                  });\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    position: 'absolute',\n                    top: '-12px',\n                    left: '50%',\n                    transform: 'translateX(-50%)',\n                    fontSize: '8px',\n                    color: getGroupColorDark(getPersonGroup(person)),\n                    fontWeight: 'bold',\n                    whiteSpace: 'nowrap',\n                    backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                    padding: '1px 3px',\n                    borderRadius: '2px',\n                    border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                    transition: 'all 0.2s ease'\n                  },\n                  children: year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 27\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 50\n              }, this);\n            }), person.reignStart && person.reignEnd && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                top: '-15px',\n                left: `${getAdjustedPosition(person.reignStart)}px`,\n                width: `${getAdjustedWidth(person.reignStart, person.reignEnd)}px`,\n                height: '65px',\n                backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                pointerEvents: 'none',\n                borderLeft: '2px solid #D32F2F',\n                borderRight: '2px solid #D32F2F',\n                borderRadius: '3px',\n                zIndex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"life-bar\",\n              style: {\n                position: 'absolute',\n                top: '10px',\n                left: `${getAdjustedPosition(person.birthYear)}px`,\n                width: `${getAdjustedWidth(person.birthYear, person.deathYear)}px`,\n                height: '40px',\n                background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                borderRadius: '6px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0 12px',\n                color: 'white',\n                fontSize: '14px',\n                fontWeight: 'bold',\n                minWidth: '60px',\n                boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                border: '1.5px solid #a8926a',\n                opacity: 1,\n                zIndex: 5\n              },\n              onMouseEnter: e => {\n                e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)';\n                e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)';\n                e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n                setHoveredPerson(person);\n                setMousePosition({\n                  x: e.clientX,\n                  y: e.clientY\n                });\n                setTimeout(() => setShowTooltip(true), 300);\n              },\n              onMouseLeave: e => {\n                e.currentTarget.style.transform = 'translateY(0) scale(1)';\n                e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)';\n                e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)';\n                setHoveredPerson(null);\n                setShowTooltip(false);\n              },\n              onMouseMove: e => {\n                setMousePosition({\n                  x: e.clientX,\n                  y: e.clientY\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  lineHeight: '1.2'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: person.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 616,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 38\n            }, this)]\n          }, person.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n};\n_c = Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","getPosition","getWidth","getCenturyColor","getCenturyNumber","toRomanNumeral","jsxDEV","_jsxDEV","Timeline","isLoading","timelineWidth","totalHeight","centuryBoundaries","minYear","pixelsPerYear","LEFT_PADDING_PX","rowPlacement","filters","groupingType","categoryDividers","getGroupColor","getGroupColorDark","getGroupColorMuted","getPersonGroup","hoveredPerson","setHoveredPerson","mousePosition","setMousePosition","showTooltip","setShowTooltip","activeAchievementMarker","setActiveAchievementMarker","hoveredAchievement","setHoveredAchievement","achievementTooltipPosition","setAchievementTooltipPosition","showAchievementTooltip","setShowAchievementTooltip","hoverTimerRef","sortedData","getEmptyCenturies","length","Set","Math","min","map","p","birthYear","maxYear","max","deathYear","startCentury","floor","endCentury","ceil","emptyCenturies","centuryStart","centuryEnd","hasDataInCentury","some","person","add","getTimelineElements","hideEmptyCenturies","year","type","visibleCenturies","filter","has","elements","i","currentYear","prevYear","gapStart","gapEnd","hiddenCenturies","push","startYear","endYear","timelineElements","getAdjustedPosition","originalPosition","totalOffset","element","originalGapWidth","newGapWidth","getAdjustedWidth","startPos","endPos","getAdjustedTimelineWidth","lastElement","adjustedWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","height","overflow","padding","top","left","width","pointerEvents","zIndex","index","nextYear","centerYear","centuryNumber","isNegativeCentury","romanNumeral","abs","background","opacity","transform","fontSize","fontWeight","color","textShadow","fontFamily","_element$hiddenCentur","gapWidth","border","textAlign","marginTop","join","divider","category","borderRadius","whiteSpace","row","rowIndex","marginBottom","Fragment","fontStyle","reignStart","reignEnd","showAchievements","achievementYear1","achievementYear2","achievementYear3","undefined","backgroundColor","personId","id","cursor","transition","onMouseEnter","e","currentTarget","boxShadow","current","clearTimeout","setTimeout","x","clientX","y","clientY","onMouseLeave","onMouseMove","borderLeft","borderRight","display","alignItems","minWidth","borderColor","flexDirection","lineHeight","name","_c","$RefreshReg$"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/components/Timeline.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Person } from '../types'\r\nimport { \r\n  getPosition, \r\n  getWidth, \r\n  getCenturyColor, \r\n  getCenturyNumber, \r\n  toRomanNumeral\r\n} from '../utils/timelineUtils'\r\n\r\ninterface TimelineProps {\r\n  isLoading: boolean\r\n  timelineWidth: number\r\n  totalHeight: number\r\n  centuryBoundaries: number[]\r\n  minYear: number\r\n  pixelsPerYear: number\r\n  LEFT_PADDING_PX: number\r\n  rowPlacement: Person[][]\r\n  filters: {\r\n    showAchievements: boolean\r\n    hideEmptyCenturies: boolean\r\n  }\r\n  groupingType: 'category' | 'country' | 'none'\r\n  categoryDividers: { category: string; top: number }[]\r\n  getGroupColor: (groupName: string) => string\r\n  getGroupColorDark: (groupName: string) => string\r\n  getGroupColorMuted: (groupName: string) => string\r\n  getPersonGroup: (person: Person) => string\r\n  hoveredPerson: Person | null\r\n  setHoveredPerson: (person: Person | null) => void\r\n  mousePosition: { x: number; y: number }\r\n  setMousePosition: (position: { x: number; y: number }) => void\r\n  showTooltip: boolean\r\n  setShowTooltip: (show: boolean) => void\r\n  activeAchievementMarker: { personId: string; index: number } | null\r\n  setActiveAchievementMarker: (marker: { personId: string; index: number } | null) => void\r\n  hoveredAchievement: { person: Person; year: number; index: number } | null\r\n  setHoveredAchievement: (achievement: { person: Person; year: number; index: number } | null) => void\r\n  achievementTooltipPosition: { x: number; y: number }\r\n  setAchievementTooltipPosition: (position: { x: number; y: number }) => void\r\n  showAchievementTooltip: boolean\r\n  setShowAchievementTooltip: (show: boolean) => void\r\n  hoverTimerRef: React.MutableRefObject<NodeJS.Timeout | null>\r\n  sortedData: any[]\r\n}\r\n\r\n// Типы для элементов временной линии\r\ntype TimelineElement = \r\n  | { type: 'century'; year: number }\r\n  | { type: 'gap'; startYear: number; endYear: number; hiddenCenturies: number[] }\r\n\r\nexport const Timeline: React.FC<TimelineProps> = ({\r\n  isLoading,\r\n  timelineWidth,\r\n  totalHeight,\r\n  centuryBoundaries,\r\n  minYear,\r\n  pixelsPerYear,\r\n  LEFT_PADDING_PX,\r\n  rowPlacement,\r\n  filters,\r\n  groupingType,\r\n  categoryDividers,\r\n  getGroupColor,\r\n  getGroupColorDark,\r\n  getGroupColorMuted,\r\n  getPersonGroup,\r\n  hoveredPerson,\r\n  setHoveredPerson,\r\n  mousePosition,\r\n  setMousePosition,\r\n  showTooltip,\r\n  setShowTooltip,\r\n  activeAchievementMarker,\r\n  setActiveAchievementMarker,\r\n  hoveredAchievement,\r\n  setHoveredAchievement,\r\n  achievementTooltipPosition,\r\n  setAchievementTooltipPosition,\r\n  showAchievementTooltip,\r\n  setShowAchievementTooltip,\r\n  hoverTimerRef,\r\n  sortedData\r\n}) => {\r\n  // Функция для определения пустых веков на основе отфильтрованных данных\r\n  const getEmptyCenturies = () => {\r\n    if (!sortedData || sortedData.length === 0) return new Set();\r\n    \r\n    // Используем отфильтрованные данные для определения диапазона\r\n    const minYear = Math.min(...sortedData.map(p => p.birthYear));\r\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear));\r\n    \r\n    const startCentury = Math.floor(minYear / 100) * 100;\r\n    const endCentury = Math.ceil(maxYear / 100) * 100;\r\n    \r\n    const emptyCenturies = new Set<number>();\r\n    \r\n    for (let centuryStart = startCentury; centuryStart <= endCentury; centuryStart += 100) {\r\n      const centuryEnd = centuryStart + 99;\r\n      const hasDataInCentury = sortedData.some(person => \r\n        (person.birthYear <= centuryEnd && person.deathYear >= centuryStart)\r\n      );\r\n      \r\n      if (!hasDataInCentury) {\r\n        emptyCenturies.add(centuryStart);\r\n      }\r\n    }\r\n    \r\n    return emptyCenturies;\r\n  };\r\n\r\n  // Создаем массив для отображения веков с промежутками\r\n  const getTimelineElements = (): TimelineElement[] => {\r\n    if (!filters.hideEmptyCenturies) {\r\n      return centuryBoundaries.map(year => ({ type: 'century', year }));\r\n    }\r\n\r\n    const emptyCenturies = getEmptyCenturies();\r\n    const visibleCenturies = centuryBoundaries.filter(year => !emptyCenturies.has(year));\r\n    \r\n    const elements: TimelineElement[] = [];\r\n    \r\n    for (let i = 0; i < visibleCenturies.length; i++) {\r\n      const currentYear = visibleCenturies[i];\r\n      \r\n      // Добавляем промежуток перед веком (кроме первого)\r\n      if (i > 0) {\r\n        const prevYear = visibleCenturies[i - 1];\r\n        const gapStart = prevYear + 100;\r\n        const gapEnd = currentYear;\r\n        \r\n        // Находим все скрытые века в промежутке\r\n        const hiddenCenturies: number[] = [];\r\n        for (let year = gapStart; year < gapEnd; year += 100) {\r\n          if (emptyCenturies.has(year)) {\r\n            hiddenCenturies.push(year);\r\n          }\r\n        }\r\n        \r\n        if (hiddenCenturies.length > 0) {\r\n          elements.push({\r\n            type: 'gap',\r\n            startYear: gapStart,\r\n            endYear: gapEnd,\r\n            hiddenCenturies\r\n          });\r\n        }\r\n      }\r\n      \r\n      // Добавляем сам век\r\n      elements.push({ type: 'century', year: currentYear });\r\n    }\r\n    \r\n    return elements;\r\n  };\r\n\r\n  const timelineElements = getTimelineElements();\r\n\r\n  // Функция для вычисления позиции с учетом промежутков\r\n  const getAdjustedPosition = (year: number) => {\r\n    if (!filters.hideEmptyCenturies) {\r\n      return getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\r\n    }\r\n\r\n    // Находим позицию года в оригинальной шкале\r\n    const originalPosition = getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\r\n    \r\n    // Вычисляем смещение, проходя по всем промежуткам до этого года\r\n    let totalOffset = 0;\r\n    \r\n    for (const element of timelineElements) {\r\n      if (element.type === 'gap') {\r\n        const gapStart = getPosition(element.startYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\r\n        const gapEnd = getPosition(element.endYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\r\n        const originalGapWidth = gapEnd - gapStart;\r\n        const newGapWidth = pixelsPerYear * 10; // 10 лет\r\n        \r\n        // Если год находится после этого промежутка, добавляем смещение\r\n        if (year >= element.endYear) {\r\n          totalOffset += (originalGapWidth - newGapWidth);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return originalPosition - totalOffset;\r\n  };\r\n\r\n  // Функция для вычисления ширины с учетом промежутков\r\n  const getAdjustedWidth = (startYear: number, endYear: number) => {\r\n    if (!filters.hideEmptyCenturies) {\r\n      return getWidth(startYear, endYear, pixelsPerYear);\r\n    }\r\n\r\n    const startPos = getAdjustedPosition(startYear);\r\n    const endPos = getAdjustedPosition(endYear);\r\n    return endPos - startPos;\r\n  };\r\n\r\n  // Функция для вычисления скорректированной ширины таймлайна\r\n  const getAdjustedTimelineWidth = () => {\r\n    if (!filters.hideEmptyCenturies) {\r\n      return timelineWidth;\r\n    }\r\n\r\n    // Находим самый правый элемент\r\n    const lastElement = timelineElements[timelineElements.length - 1];\r\n    if (!lastElement) return timelineWidth;\r\n\r\n    let adjustedWidth = 0;\r\n    \r\n    if (lastElement.type === 'century') {\r\n      // Если последний элемент - век, его правая граница\r\n      adjustedWidth = getAdjustedPosition(lastElement.year + 100);\r\n    } else if (lastElement.type === 'gap') {\r\n      // Если последний элемент - промежуток, его правая граница\r\n      adjustedWidth = getAdjustedPosition(lastElement.startYear) + (pixelsPerYear * 10);\r\n    }\r\n\r\n    return Math.max(adjustedWidth + 100, timelineWidth); // Добавляем отступ справа\r\n  };\r\n\r\n  return (\r\n    <main className=\"app-main\">\r\n      {isLoading && (\r\n        <div className=\"loading-overlay\">\r\n          <div className=\"spinner\"></div>\r\n          <span>Загрузка данных...</span>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Временная линия на весь экран */}\r\n      <div className=\"timeline-container\" style={{ \r\n        position: 'relative', \r\n        height: 'calc(100vh - 100px)',\r\n        overflow: 'auto',\r\n        padding: '1rem 0 2rem 0'\r\n      }}>\r\n                 {/* Разноцветная заливка веков */}\r\n         <div style={{\r\n           position: 'absolute',\r\n           top: '0',\r\n           left: '0',\r\n           width: `${getAdjustedTimelineWidth()}px`,\r\n           height: `${totalHeight + 200}px`,\r\n           pointerEvents: 'none',\r\n           zIndex: 1\r\n         }}>\r\n          {timelineElements.map((element, index) => {\r\n                         if (element.type === 'century') {\r\n               const year = element.year;\r\n               // Каждый век занимает ровно 100 лет\r\n               const nextYear = year + 100\r\n               const startPos = getAdjustedPosition(year)\r\n               const endPos = getAdjustedPosition(nextYear)\r\n               const width = endPos - startPos\r\n\r\n              // Вычисляем век на основе центра года в столетии\r\n              const centerYear = year + 50\r\n              const centuryNumber = getCenturyNumber(centerYear)\r\n              // Для отрицательных веков добавляем знак минус\r\n              const isNegativeCentury = year < 0\r\n              const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber)\r\n              \r\n              return (\r\n                <div key={`century-bg-${year}`} style={{\r\n                  position: 'absolute',\r\n                  left: `${startPos}px`,\r\n                  width: `${width}px`,\r\n                  height: '100%',\r\n                  background: getCenturyColor(year, minYear),\r\n                  opacity: 0.3,\r\n                  zIndex: 1\r\n                }}>\r\n                  {/* Римская цифра века в центре */}\r\n                  <div className=\"century-label\" style={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%, -50%)',\r\n                    fontSize: '2rem',\r\n                    fontWeight: 'bold',\r\n                    color: 'rgba(244, 228, 193, 0.6)',\r\n                    textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\r\n                    pointerEvents: 'none',\r\n                    zIndex: 2,\r\n                    fontFamily: 'serif'\r\n                  }}>\r\n                    {romanNumeral}\r\n                  </div>\r\n                </div>\r\n              )\r\n                                                   } else if (element.type === 'gap') {\r\n                // Промежуток между веками - компактный размер (1/10 века)\r\n                const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\r\n                const startPos = getAdjustedPosition(element.startYear)\r\n               \r\n               return (\r\n                 <div key={`gap-${element.startYear}`} style={{\r\n                   position: 'absolute',\r\n                   left: `${startPos}px`,\r\n                   width: `${gapWidth}px`,\r\n                   height: '100%',\r\n                   background: 'rgba(139, 69, 19, 0.1)',\r\n                   border: '1px dashed rgba(139, 69, 19, 0.3)',\r\n                   zIndex: 1\r\n                 }}>\r\n                  {/* Информация о скрытых веках */}\r\n                  <div style={{\r\n                    position: 'absolute',\r\n                    top: '50%',\r\n                    left: '50%',\r\n                    transform: 'translate(-50%, -50%)',\r\n                    fontSize: '0.8rem',\r\n                    color: 'rgba(139, 69, 19, 0.7)',\r\n                    textAlign: 'center',\r\n                    pointerEvents: 'none',\r\n                    zIndex: 2,\r\n                    fontWeight: 'bold'\r\n                  }}>\r\n                                         <div>Скрыто:</div>\r\n                     <div style={{ fontSize: '0.7rem', marginTop: '2px' }}>\r\n                       {element.hiddenCenturies?.map(year => {\r\n                         const centuryNumber = getCenturyNumber(year + 50);\r\n                         const isNegativeCentury = year < 0;\r\n                         const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\r\n                         return romanNumeral;\r\n                       }).join(', ') || ''}\r\n                     </div>\r\n                  </div>\r\n                </div>\r\n              )\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n\r\n                 {/* Границы веков и промежутков на всю высоту */}\r\n         <div style={{\r\n           position: 'absolute',\r\n           top: '0',\r\n           left: '0',\r\n           width: `${timelineWidth}px`,\r\n           height: `${totalHeight + 200}px`,\r\n           pointerEvents: 'none',\r\n           zIndex: 5\r\n         }}>\r\n                      {timelineElements.map((element) => {\r\n              if (element.type === 'century') {\r\n                return (\r\n                  <div key={`century-line-${element.year}`} style={{\r\n                    position: 'absolute',\r\n                    left: `${getAdjustedPosition(element.year)}px`,\r\n                    width: '2px',\r\n                    height: '100%',\r\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\r\n                    zIndex: 5\r\n                  }} />\r\n                );\r\n              } else if (element.type === 'gap') {\r\n                return (\r\n                  <div key={`gap-line-${element.startYear}`} style={{\r\n                    position: 'absolute',\r\n                    left: `${getAdjustedPosition(element.startYear)}px`,\r\n                    width: '2px',\r\n                    height: '100%',\r\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\r\n                    zIndex: 5\r\n                  }} />\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n         </div>\r\n\r\n        {/* Разделители групп */}\r\n        <div style={{\r\n          position: 'absolute',\r\n          top: '0',\r\n          left: '0',\r\n          width: `${timelineWidth}px`,\r\n          height: `${totalHeight + 200}px`,\r\n          pointerEvents: 'none',\r\n          zIndex: 8\r\n        }}>\r\n          {categoryDividers.map((divider) => (\r\n            <div key={`category-divider-${divider.category}`} style={{\r\n              position: 'absolute',\r\n              top: `${divider.top}px`,\r\n              left: '0',\r\n              width: '100%',\r\n              height: '10px',\r\n              background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\r\n              opacity: 0.6,\r\n              zIndex: 8\r\n            }}>\r\n              <div className=\"category-label\" style={{\r\n                position: 'absolute',\r\n                left: '20px',\r\n                top: '50%',\r\n                transform: 'translateY(-50%)',\r\n                background: getGroupColor(divider.category),\r\n                color: 'white',\r\n                padding: '2px 8px',\r\n                borderRadius: '4px',\r\n                fontSize: '0.7rem',\r\n                fontWeight: 'bold',\r\n                whiteSpace: 'nowrap',\r\n                zIndex: 9\r\n              }}>\r\n                {divider.category}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Полоски жизни */}\r\n        <div style={{ \r\n          position: 'relative',\r\n          width: `${timelineWidth}px`,\r\n          height: `${totalHeight + 60}px`,\r\n          zIndex: 10\r\n        }}>\r\n          {rowPlacement.map((row, rowIndex) => (\r\n            <div key={rowIndex} style={{\r\n              position: 'relative',\r\n              height: row.length === 0 ? '20px' : '60px',\r\n              marginBottom: row.length === 0 ? '0px' : '10px'\r\n            }}>\r\n              {row.map((person) => (\r\n                <React.Fragment key={person.id}>\r\n                  {/* Годы жизни и правления над полоской */}\r\n                                     <span style={{\r\n                     position: 'absolute',\r\n                     left: `${getAdjustedPosition(person.birthYear)}px`,\r\n                     top: 0,\r\n                     fontSize: '11px',\r\n                     color: 'rgba(244, 228, 193, 0.6)',\r\n                     fontStyle: 'italic',\r\n                     fontWeight: 400,\r\n                     transform: 'translateX(-100%) translateY(-10px)'\r\n                   }}>{person.birthYear}</span>\r\n\r\n                                     {person.reignStart && (\r\n                     <span className=\"reign-label\" style={{\r\n                       position: 'absolute',\r\n                       left: `${getAdjustedPosition(person.reignStart)}px`,\r\n                       top: 0,\r\n                       fontSize: '11px',\r\n                       color: '#E57373', // Темно-красный\r\n                       fontStyle: 'italic',\r\n                       fontWeight: 'bold',\r\n                       transform: 'translateX(-100%) translateY(-22px)'\r\n                     }}>👑 {person.reignStart}</span>\r\n                   )}\r\n\r\n                                     {person.reignEnd && (\r\n                     <span className=\"reign-label\" style={{\r\n                       position: 'absolute',\r\n                       left: `${getAdjustedPosition(person.reignEnd)}px`,\r\n                       top: 0,\r\n                       fontSize: '11px',\r\n                       color: '#E57373', // Темно-красный\r\n                       fontStyle: 'italic',\r\n                       fontWeight: 'bold',\r\n                       transform: 'translateY(-22px)'\r\n                     }}>{person.reignEnd}</span>\r\n                   )}\r\n                  \r\n                                     <span style={{\r\n                     position: 'absolute',\r\n                     left: `${getAdjustedPosition(person.deathYear)}px`,\r\n                     top: 0,\r\n                     fontSize: '11px',\r\n                     color: 'rgba(244, 228, 193, 0.6)',\r\n                     fontStyle: 'italic',\r\n                     fontWeight: 400,\r\n                     transform: 'translateY(-10px)'\r\n                   }}>{person.deathYear}</span>\r\n\r\n                  {/* Маркеры ключевых достижений */}\r\n                  {filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3]\r\n                    .filter(year => year !== undefined && year !== null)\r\n                    .map((year, index) => {\r\n                      return (\r\n                                                 <div key={index} style={{\r\n                           position: 'absolute',\r\n                           left: `${getAdjustedPosition(year as number)}px`,\r\n                           top: '-4px',\r\n                           width: '2px',\r\n                           height: '15px',\r\n                           backgroundColor: getGroupColorDark(getPersonGroup(person)),\r\n                           zIndex: activeAchievementMarker?.personId === person.id && activeAchievementMarker?.index === index ? 10 : 3,\r\n                           transform: 'translateX(-50%)',\r\n                           cursor: 'pointer',\r\n                           transition: 'all 0.2s ease'\r\n                         }}\r\n                        onMouseEnter={(e) => {\r\n                          e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\r\n                          e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\r\n                          \r\n                          // Устанавливаем активный маркер\r\n                          setActiveAchievementMarker({ personId: person.id, index });\r\n                          \r\n                          // Очищаем предыдущий таймер если он есть\r\n                          if (hoverTimerRef.current) {\r\n                            clearTimeout(hoverTimerRef.current);\r\n                          }\r\n                          \r\n                          // Запускаем таймер для показа tooltip\r\n                          hoverTimerRef.current = setTimeout(() => {\r\n                            setHoveredAchievement({ person, year: year as number, index });\r\n                            setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\r\n                            setShowAchievementTooltip(true);\r\n                          }, 500);\r\n                        }}\r\n                        onMouseLeave={(e) => {\r\n                          e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\r\n                          e.currentTarget.style.boxShadow = 'none';\r\n                          \r\n                          // Сбрасываем активный маркер\r\n                          setActiveAchievementMarker(null);\r\n                          \r\n                          // Очищаем таймер и скрываем tooltip\r\n                          if (hoverTimerRef.current) {\r\n                            clearTimeout(hoverTimerRef.current);\r\n                            hoverTimerRef.current = null;\r\n                          }\r\n                          setShowAchievementTooltip(false);\r\n                          setHoveredAchievement(null);\r\n                        }}\r\n                        onMouseMove={(e) => {\r\n                          setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\r\n                        }}\r\n                        >\r\n                          <span style={{\r\n                            position: 'absolute',\r\n                            top: '-12px',\r\n                            left: '50%',\r\n                            transform: 'translateX(-50%)',\r\n                            fontSize: '8px',\r\n                            color: getGroupColorDark(getPersonGroup(person)),\r\n                            fontWeight: 'bold',\r\n                            whiteSpace: 'nowrap',\r\n                            backgroundColor: 'rgba(44, 24, 16, 0.9)',\r\n                            padding: '1px 3px',\r\n                            borderRadius: '2px',\r\n                            border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\r\n                            transition: 'all 0.2s ease'\r\n                          }}>\r\n                            {year}\r\n                          </span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                                     {/* полоса правления */}\r\n                   {person.reignStart && person.reignEnd && (\r\n                     <div style={{\r\n                       position: 'absolute',\r\n                       top: '-15px',\r\n                       left: `${getAdjustedPosition(person.reignStart)}px`,\r\n                       width: `${getAdjustedWidth(person.reignStart, person.reignEnd)}px`,\r\n                       height: '65px',\r\n                       backgroundColor: 'rgba(211, 47, 47, 0.25)',\r\n                       pointerEvents: 'none',\r\n                       borderLeft: '2px solid #D32F2F',\r\n                       borderRight: '2px solid #D32F2F',\r\n                       borderRadius: '3px',\r\n                       zIndex: 1\r\n                     }} />\r\n                   )}\r\n\r\n                                     <div\r\n                     className=\"life-bar\"\r\n                     style={{\r\n                       position: 'absolute',\r\n                       top: '10px',\r\n                       left: `${getAdjustedPosition(person.birthYear)}px`,\r\n                       width: `${getAdjustedWidth(person.birthYear, person.deathYear)}px`,\r\n                       height: '40px',\r\n                       background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\r\n                       borderRadius: '6px',\r\n                       cursor: 'pointer',\r\n                       display: 'flex',\r\n                       alignItems: 'center',\r\n                       padding: '0 12px',\r\n                       color: 'white',\r\n                       fontSize: '14px',\r\n                       fontWeight: 'bold',\r\n                       minWidth: '60px',\r\n                       boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\r\n                       border: '1.5px solid #a8926a',\r\n                       opacity: 1,\r\n                       zIndex: 5\r\n                     }}\r\n                    onMouseEnter={(e) => {\r\n                      e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)'\r\n                      e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)'\r\n                      e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)'\r\n                      setHoveredPerson(person)\r\n                      setMousePosition({ x: e.clientX, y: e.clientY })\r\n                      setTimeout(() => setShowTooltip(true), 300)\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      e.currentTarget.style.transform = 'translateY(0) scale(1)'\r\n                      e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)'\r\n                      e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)'\r\n                      setHoveredPerson(null)\r\n                      setShowTooltip(false)\r\n                    }}\r\n                    onMouseMove={(e) => {\r\n                      setMousePosition({ x: e.clientX, y: e.clientY })\r\n                    }}\r\n                  >\r\n                    <div style={{ display: 'flex', flexDirection: 'column', lineHeight: '1.2' }}>\r\n                      <span>{person.name}</span>\r\n                    </div>\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}