{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nexport const useMobile = () => {\n  _s();\n  const [isMobile, setIsMobile] = useState(false);\n  useEffect(() => {\n    const checkMobile = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n    checkMobile();\n    window.addEventListener('resize', checkMobile);\n    return () => window.removeEventListener('resize', checkMobile);\n  }, []);\n  return isMobile;\n};\n_s(useMobile, \"0VTTNJATKABQPGLm9RVT0tKGUgU=\");","map":{"version":3,"names":["useState","useEffect","useMobile","_s","isMobile","setIsMobile","checkMobile","window","innerWidth","addEventListener","removeEventListener"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/hooks/useMobile.ts"],"sourcesContent":["import { useState, useEffect } from 'react'\r\n\r\nexport const useMobile = () => {\r\n  const [isMobile, setIsMobile] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    const checkMobile = () => {\r\n      setIsMobile(window.innerWidth <= 768)\r\n    }\r\n    \r\n    checkMobile()\r\n    window.addEventListener('resize', checkMobile)\r\n    return () => window.removeEventListener('resize', checkMobile)\r\n  }, [])\r\n  \r\n  return isMobile\r\n} "],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMK,WAAW,GAAGA,CAAA,KAAM;MACxBD,WAAW,CAACE,MAAM,CAACC,UAAU,IAAI,GAAG,CAAC;IACvC,CAAC;IAEDF,WAAW,CAAC,CAAC;IACbC,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,WAAW,CAAC;IAC9C,OAAO,MAAMC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,WAAW,CAAC;EAChE,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,QAAQ;AACjB,CAAC;AAAAD,EAAA,CAdYD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}