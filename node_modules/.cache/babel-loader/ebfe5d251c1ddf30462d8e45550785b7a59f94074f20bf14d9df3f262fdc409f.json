{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selecty\\\\Documents\\\\PetProjects\\\\chronoline-frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { getPersons, getCategories, getCountries } from './services/api';\nimport { getCategoryColor, getCategoryColorDark, getCategoryColorMuted } from './utils/categoryColors';\nimport './App.css';\n\n// Компонент визуального маркера достижений\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AchievementMarker = ({\n  isActive\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '2px',\n      opacity: isActive ? 1 : 0.5,\n      transition: 'opacity 0.2s ease'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '20px',\n        height: '16px',\n        background: isActive ? '#f4e4c1' : 'rgba(244, 228, 193, 0.3)',\n        border: '1px solid rgba(139, 69, 19, 0.5)',\n        borderRadius: '2px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '7px',\n        color: isActive ? '#2c1810' : 'rgba(44, 24, 16, 0.5)',\n        fontWeight: 'bold',\n        lineHeight: 1\n      },\n      children: \"1825\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '2px',\n        height: '8px',\n        background: isActive ? '#f4e4c1' : 'rgba(244, 228, 193, 0.3)',\n        borderRadius: '1px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n// Компонент выпадающего фильтра\n_c = AchievementMarker;\nconst FilterDropdown = ({\n  title,\n  items,\n  selectedItems,\n  onSelectionChange,\n  getItemColor,\n  icon\n}) => {\n  const isActive = selectedItems.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"filter-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `filter-btn ${isActive ? 'active' : ''}`,\n      style: {\n        minWidth: '150px',\n        display: 'flex',\n        alignItems: 'center',\n        gap: '0.5rem'\n      },\n      children: [icon, title, \" \", isActive && `(${selectedItems.length})`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-dropdown-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: '0.5rem',\n          borderBottom: '1px solid rgba(139, 69, 19, 0.3)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation();\n            onSelectionChange(items);\n          },\n          style: {\n            padding: '0.25rem 0.5rem',\n            marginRight: '0.5rem',\n            background: '#27ae60',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '0.7rem'\n          },\n          children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => {\n            e.stopPropagation();\n            onSelectionChange([]);\n          },\n          style: {\n            padding: '0.25rem 0.5rem',\n            background: '#e74c3c',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer',\n            fontSize: '0.7rem'\n          },\n          children: \"\\u0421\\u043D\\u044F\\u0442\\u044C \\u0432\\u0441\\u0435\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), items.map(item => /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"filter-checkbox\",\n        onClick: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedItems.includes(item),\n          onChange: e => {\n            e.stopPropagation();\n            if (e.target.checked) {\n              onSelectionChange([...selectedItems, item]);\n            } else {\n              onSelectionChange(selectedItems.filter(i => i !== item));\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: getItemColor ? getItemColor(item) : '#f4e4c1',\n            fontWeight: getItemColor ? 'bold' : 'normal'\n          },\n          children: item\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, item, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n// Компонент переключателя группировки\n_c2 = FilterDropdown;\nconst GroupingToggle = ({\n  groupingType,\n  onGroupingChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grouping-toggle\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '0.4rem',\n      padding: '0.4rem 0.8rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '0.3rem',\n        alignItems: 'center',\n        height: '14px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '14px',\n          height: '14px',\n          background: groupingType === 'category' ? '#cd853f' : 'rgba(244, 228, 193, 0.2)',\n          borderRadius: '3px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontSize: '9px',\n          color: groupingType === 'category' ? '#2c1810' : 'rgba(44, 24, 16, 0.4)',\n          transition: 'all 0.3s ease',\n          opacity: groupingType === 'category' ? 1 : 0.6,\n          cursor: 'pointer'\n        },\n        onClick: () => onGroupingChange('category'),\n        title: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E \\u0440\\u043E\\u0434\\u0443 \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\",\n        onMouseEnter: e => {\n          if (groupingType !== 'category') {\n            e.currentTarget.style.background = 'rgba(205, 133, 63, 0.4)';\n            e.currentTarget.style.opacity = '0.8';\n          }\n        },\n        onMouseLeave: e => {\n          if (groupingType !== 'category') {\n            e.currentTarget.style.background = 'rgba(244, 228, 193, 0.2)';\n            e.currentTarget.style.opacity = '0.6';\n          }\n        },\n        children: \"\\uD83C\\uDFAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '14px',\n          height: '14px',\n          background: groupingType === 'country' ? '#cd853f' : 'rgba(244, 228, 193, 0.2)',\n          borderRadius: '3px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontSize: '9px',\n          color: groupingType === 'country' ? '#2c1810' : 'rgba(44, 24, 16, 0.4)',\n          transition: 'all 0.3s ease',\n          opacity: groupingType === 'country' ? 1 : 0.6,\n          cursor: 'pointer'\n        },\n        onClick: () => onGroupingChange('country'),\n        title: \"\\u0413\\u0440\\u0443\\u043F\\u043F\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u043E \\u0441\\u0442\\u0440\\u0430\\u043D\\u0430\\u043C\",\n        onMouseEnter: e => {\n          if (groupingType !== 'country') {\n            e.currentTarget.style.background = 'rgba(205, 133, 63, 0.4)';\n            e.currentTarget.style.opacity = '0.8';\n          }\n        },\n        onMouseLeave: e => {\n          if (groupingType !== 'country') {\n            e.currentTarget.style.background = 'rgba(244, 228, 193, 0.2)';\n            e.currentTarget.style.opacity = '0.6';\n          }\n        },\n        children: \"\\uD83C\\uDF0D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '14px',\n          height: '14px',\n          background: groupingType === 'none' ? '#cd853f' : 'rgba(244, 228, 193, 0.2)',\n          borderRadius: '3px',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          fontSize: '9px',\n          color: groupingType === 'none' ? '#2c1810' : 'rgba(44, 24, 16, 0.4)',\n          transition: 'all 0.3s ease',\n          opacity: groupingType === 'none' ? 1 : 0.6,\n          cursor: 'pointer'\n        },\n        onClick: () => onGroupingChange('none'),\n        title: \"\\u0411\\u0435\\u0437 \\u0433\\u0440\\u0443\\u043F\\u043F\\u0438\\u0440\\u043E\\u0432\\u043A\\u0438\",\n        onMouseEnter: e => {\n          if (groupingType !== 'none') {\n            e.currentTarget.style.background = 'rgba(205, 133, 63, 0.4)';\n            e.currentTarget.style.opacity = '0.8';\n          }\n        },\n        onMouseLeave: e => {\n          if (groupingType !== 'none') {\n            e.currentTarget.style.background = 'rgba(244, 228, 193, 0.2)';\n            e.currentTarget.style.opacity = '0.6';\n          }\n        },\n        children: \"\\uD83D\\uDCCA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '64px',\n        height: '22px',\n        background: 'rgba(44, 24, 16, 0.9)',\n        borderRadius: '11px',\n        cursor: 'pointer',\n        transition: 'all 0.3s ease',\n        boxShadow: 'inset 0 1px 3px rgba(0, 0, 0, 0.3)'\n      },\n      onClick: () => {\n        const options = ['category', 'country', 'none'];\n        const currentIndex = options.indexOf(groupingType);\n        const nextIndex = (currentIndex + 1) % options.length;\n        onGroupingChange(options[nextIndex]);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '3px',\n          left: groupingType === 'category' ? '3px' : groupingType === 'country' ? '23px' : '43px',\n          width: '18px',\n          height: '18px',\n          background: 'linear-gradient(135deg, #cd853f 0%, #daa520 100%)',\n          borderRadius: '50%',\n          transition: 'left 0.3s ease',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.4), inset 0 1px 1px rgba(255, 255, 255, 0.2)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          display: 'flex',\n          gap: '10px',\n          pointerEvents: 'none'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '3px',\n            height: '3px',\n            borderRadius: '50%',\n            background: groupingType === 'category' ? '#f4e4c1' : 'rgba(244, 228, 193, 0.2)',\n            transition: 'background 0.3s ease'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '3px',\n            height: '3px',\n            borderRadius: '50%',\n            background: groupingType === 'country' ? '#f4e4c1' : 'rgba(244, 228, 193, 0.2)',\n            transition: 'background 0.3s ease'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '3px',\n            height: '3px',\n            borderRadius: '50%',\n            background: groupingType === 'none' ? '#f4e4c1' : 'rgba(244, 228, 193, 0.2)',\n            transition: 'background 0.3s ease'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_c3 = GroupingToggle;\nfunction App() {\n  _s();\n  const [hoveredPerson, setHoveredPerson] = useState(null);\n  const [mousePosition, setMousePosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [showTooltip, setShowTooltip] = useState(false);\n  const [hoveredAchievement, setHoveredAchievement] = useState(null);\n  const [achievementTooltipPosition, setAchievementTooltipPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [showAchievementTooltip, setShowAchievementTooltip] = useState(false);\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [activeAchievementMarker, setActiveAchievementMarker] = useState(null);\n  const hoverTimerRef = useRef(null);\n  const [showFilters, setShowFilters] = useState(false);\n  const [filters, setFilters] = useState(() => {\n    const savedFilters = localStorage.getItem('chronoline-filters');\n    if (savedFilters) {\n      const parsed = JSON.parse(savedFilters);\n      return {\n        categories: parsed.categories || [],\n        countries: parsed.countries || [],\n        timeRange: parsed.timeRange || {\n          start: -800,\n          end: 2000\n        },\n        showAchievements: parsed.showAchievements !== undefined ? parsed.showAchievements : true\n      };\n    }\n    return {\n      categories: [],\n      countries: [],\n      timeRange: {\n        start: -800,\n        end: 2000\n      },\n      showAchievements: true\n    };\n  });\n\n  // Состояние для типа группировки\n  const [groupingType, setGroupingType] = useState(() => {\n    const savedGrouping = localStorage.getItem('chronoline-grouping');\n    return savedGrouping || 'category';\n  });\n\n  // Сохраняем фильтры в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('chronoline-filters', JSON.stringify(filters));\n  }, [filters]);\n\n  // Сохраняем тип группировки в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('chronoline-grouping', groupingType);\n  }, [groupingType]);\n\n  // Очищаем таймер при размонтировании компонента\n  useEffect(() => {\n    return () => {\n      if (hoverTimerRef.current) {\n        clearTimeout(hoverTimerRef.current);\n      }\n    };\n  }, []);\n  const [persons, setPersons] = useState([]);\n  const [allCategories, setAllCategories] = useState([]);\n  const [allCountries, setAllCountries] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Состояние для полей ввода годов\n  const [yearInputs, setYearInputs] = useState({\n    start: filters.timeRange.start.toString(),\n    end: filters.timeRange.end.toString()\n  });\n\n  // Функция для применения фильтра по году\n  const applyYearFilter = (field, value) => {\n    const numValue = parseInt(value) || (field === 'start' ? -800 : 2000);\n    setFilters(prev => ({\n      ...prev,\n      timeRange: {\n        ...prev.timeRange,\n        [field]: numValue\n      }\n    }));\n  };\n\n  // Функция для обработки нажатия Enter\n  const handleYearKeyPress = (field, e) => {\n    if (e.key === 'Enter') {\n      var _e$currentTarget$pare, _e$currentTarget$pare2;\n      applyYearFilter(field, e.currentTarget.value);\n      // Переводим фокус на следующий элемент\n      const inputs = (_e$currentTarget$pare = e.currentTarget.parentElement) === null || _e$currentTarget$pare === void 0 ? void 0 : (_e$currentTarget$pare2 = _e$currentTarget$pare.parentElement) === null || _e$currentTarget$pare2 === void 0 ? void 0 : _e$currentTarget$pare2.querySelectorAll('input');\n      if (inputs) {\n        const currentIndex = Array.from(inputs).indexOf(e.currentTarget);\n        const nextInput = inputs[currentIndex + 1];\n        if (nextInput) {\n          nextInput.focus();\n        }\n      }\n    }\n  };\n\n  // Функция для сброса всех фильтров\n  const resetAllFilters = () => {\n    setFilters({\n      categories: [],\n      countries: [],\n      timeRange: {\n        start: -800,\n        end: 2000\n      },\n      showAchievements: true\n    });\n    setYearInputs({\n      start: '-800',\n      end: '2000'\n    });\n  };\n\n  // Единый useEffect для загрузки и фильтрации данных\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Формируем параметры для запроса\n        const filtersToApply = {};\n        if (filters.categories.length > 0) {\n          filtersToApply.category = filters.categories.join(',');\n        }\n        if (filters.countries.length > 0) {\n          filtersToApply.country = filters.countries.join(',');\n        }\n        filtersToApply.startYear = filters.timeRange.start;\n        filtersToApply.endYear = filters.timeRange.end;\n\n        // Загружаем персон с учетом фильтров\n        const personsData = await getPersons(filtersToApply);\n        setPersons(personsData);\n\n        // Загружаем категории и страны только если они еще не загружены\n        if (allCategories.length === 0 || allCountries.length === 0) {\n          const [categoriesData, countriesData] = await Promise.all([getCategories(), getCountries()]);\n          setAllCategories(categoriesData);\n          setAllCountries(countriesData);\n        }\n      } catch (error) {\n        console.error(\"Ошибка при загрузке данных:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [filters, allCategories.length, allCountries.length]); // Перезагружаем данные при изменении фильтров\n\n  // Функция для получения приоритета категории\n  const getCategoryPriority = category => {\n    // Используем все категории из API, а не только жестко заданные\n    return allCategories.indexOf(category);\n  };\n\n  // Функция для получения цвета группы в зависимости от типа группировки\n  const getGroupColor = groupName => {\n    if (groupingType === 'category') {\n      return getCategoryColor(groupName);\n    } else if (groupingType === 'country') {\n      // Для стран используем другой набор цветов\n      const countryColors = ['#e74c3c', '#3498db', '#2ecc71', '#f39c12', '#9b59b6', '#1abc9c', '#e67e22', '#34495e', '#16a085', '#8e44ad', '#27ae60', '#2980b9', '#f1c40f', '#e74c3c', '#95a5a6'];\n      const index = allCountries.indexOf(groupName);\n      return countryColors[index % countryColors.length];\n    }\n    return '#95a5a6'; // серый цвет по умолчанию\n  };\n\n  // Функция для получения цвета группы (темный вариант)\n  const getGroupColorDark = groupName => {\n    if (groupingType === 'category') {\n      return getCategoryColorDark(groupName);\n    } else if (groupingType === 'country') {\n      // Для стран используем темные варианты цветов\n      const countryColorsDark = ['#c0392b', '#2980b9', '#27ae60', '#d68910', '#8e44ad', '#16a085', '#d35400', '#2c3e50', '#138d75', '#7d3c98', '#229954', '#1f618d', '#d4ac0f', '#c0392b', '#7f8c8d'];\n      const index = allCountries.indexOf(groupName);\n      return countryColorsDark[index % countryColorsDark.length];\n    }\n    return '#7f8c8d'; // темно-серый цвет по умолчанию\n  };\n\n  // Функция для получения цвета группы (приглушенный вариант)\n  const getGroupColorMuted = groupName => {\n    if (groupingType === 'category') {\n      return getCategoryColorMuted(groupName);\n    } else if (groupingType === 'country') {\n      // Для стран используем приглушенные варианты цветов\n      const countryColorsMuted = ['#e74c3c', '#3498db', '#2ecc71', '#f39c12', '#9b59b6', '#1abc9c', '#e67e22', '#34495e', '#16a085', '#8e44ad', '#27ae60', '#2980b9', '#f1c40f', '#e74c3c', '#95a5a6'];\n      const index = allCountries.indexOf(groupName);\n      return countryColorsMuted[index % countryColorsMuted.length];\n    }\n    return '#95a5a6'; // серый цвет по умолчанию\n  };\n\n  // Вспомогательная функция для извлечения первой страны из списка\n  const getFirstCountry = countryString => {\n    const countries = countryString.split('/').map(c => c.trim());\n    return countries[0] || countryString;\n  };\n\n  // Функция для получения значения группы для персонажа\n  const getPersonGroup = person => {\n    if (groupingType === 'category') {\n      return person.category;\n    } else if (groupingType === 'country') {\n      return getFirstCountry(person.country);\n    }\n    return person.category; // по умолчанию\n  };\n\n  // Функция фильтрации данных (теперь данные фильтруются на бэкенде, но сортировка остается)\n  const sortedData = [...persons].sort((a, b) => {\n    if (groupingType === 'category') {\n      // Сначала сортируем по категориям\n      const categoryDiff = getCategoryPriority(a.category) - getCategoryPriority(b.category);\n      if (categoryDiff !== 0) {\n        return categoryDiff;\n      }\n    } else if (groupingType === 'country') {\n      // Сначала сортируем по странам (берем первую страну из списка)\n      const countryDiff = allCountries.indexOf(getFirstCountry(a.country)) - allCountries.indexOf(getFirstCountry(b.country));\n      if (countryDiff !== 0) {\n        return countryDiff;\n      }\n    }\n    // Затем по году рождения\n    return a.birthYear - b.birthYear;\n  });\n\n  // Отслеживаем скролл\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;\n      setIsScrolled(scrollTop > 50);\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Вычисляем реальный диапазон лет из отфильтрованных данных\n  const minYear = Math.min(...sortedData.map(p => p.birthYear), filters.timeRange.start);\n  const maxYear = Math.max(...sortedData.map(p => p.deathYear), filters.timeRange.end);\n  const totalYears = maxYear - minYear;\n\n  // Настройки масштаба\n  const pixelsPerYear = 3; // 3 пикселя на год\n  const LEFT_PADDING_PX = 30; // отступ слева, чтобы крайняя левая подпись не упиралась в край\n  const timelineWidth = totalYears * pixelsPerYear + LEFT_PADDING_PX;\n\n  // Функция для вычисления позиции в пикселях\n  const getPosition = year => {\n    return LEFT_PADDING_PX + (year - minYear) * pixelsPerYear;\n  };\n\n  // Функция для вычисления ширины полоски в пикселях\n  const getWidth = (birthYear, deathYear) => {\n    return (deathYear - birthYear) * pixelsPerYear;\n  };\n\n  // Генерируем границы веков\n  const generateCenturyBoundaries = () => {\n    const boundaries = [];\n    const startCentury = Math.floor(minYear / 100) * 100;\n    const endCentury = Math.ceil(maxYear / 100) * 100;\n    for (let year = startCentury; year <= endCentury; year += 100) {\n      // Включаем границу, если она попадает в диапазон данных или является границей века\n      if (year <= maxYear) {\n        boundaries.push(year);\n      }\n    }\n    return boundaries;\n  };\n  const centuryBoundaries = generateCenturyBoundaries();\n\n  // Функция для получения цвета века\n  const getCenturyColor = year => {\n    const colors = ['rgba(255, 107, 107, 0.1)',\n    // Светло-красный\n    'rgba(78, 205, 196, 0.1)',\n    // Светло-голубой\n    'rgba(150, 206, 180, 0.1)',\n    // Светло-зеленый\n    'rgba(255, 234, 167, 0.1)',\n    // Светло-оранжевый\n    'rgba(221, 160, 221, 0.1)',\n    // Светло-фиолетовый\n    'rgba(120, 219, 255, 0.1)',\n    // Светло-бирюзовый\n    'rgba(255, 255, 229, 0.1)',\n    // Светло-желтый\n    'rgba(255, 229, 240, 0.1)' // Светло-розовый\n    ];\n    const centuryIndex = Math.floor((year - minYear) / 100);\n    return colors[centuryIndex % colors.length];\n  };\n\n  // Функция для конвертации в римские цифры\n  const toRomanNumeral = num => {\n    const romanNumerals = [{\n      value: 1000,\n      numeral: 'M'\n    }, {\n      value: 900,\n      numeral: 'CM'\n    }, {\n      value: 500,\n      numeral: 'D'\n    }, {\n      value: 400,\n      numeral: 'CD'\n    }, {\n      value: 100,\n      numeral: 'C'\n    }, {\n      value: 90,\n      numeral: 'XC'\n    }, {\n      value: 50,\n      numeral: 'L'\n    }, {\n      value: 40,\n      numeral: 'XL'\n    }, {\n      value: 10,\n      numeral: 'X'\n    }, {\n      value: 9,\n      numeral: 'IX'\n    }, {\n      value: 5,\n      numeral: 'V'\n    }, {\n      value: 4,\n      numeral: 'IV'\n    }, {\n      value: 1,\n      numeral: 'I'\n    }];\n    let result = '';\n    let remaining = Math.abs(num);\n    for (const {\n      value,\n      numeral\n    } of romanNumerals) {\n      while (remaining >= value) {\n        result += numeral;\n        remaining -= value;\n      }\n    }\n    return num < 0 ? `-${result}` : result;\n  };\n\n  // Функция для получения номера века\n  const getCenturyNumber = year => {\n    if (year < 0) {\n      // Для отрицательных лет: -1 до -100 = 1 век до н.э., -101 до -200 = 2 век до н.э.\n      return Math.floor((Math.abs(year) - 1) / 100) + 1;\n    } else if (year === 0) {\n      // Год 0 не существует в исторической хронологии\n      return 1;\n    } else {\n      // Для положительных лет: 1-100 = 1 век, 101-200 = 2 век и т.д.\n      return Math.floor((year - 1) / 100) + 1;\n    }\n  };\n\n  // Алгоритм размещения полосок на строках с полной группировкой по категориям\n  const calculateRowPlacement = people => {\n    const rows = [];\n    if (groupingType === 'none') {\n      // Без группировки - просто размещаем всех в строки\n      const allRows = [];\n      people.forEach(person => {\n        let placed = false;\n\n        // Проверяем каждую существующую строку\n        for (let rowIndex = 0; rowIndex < allRows.length; rowIndex++) {\n          const row = allRows[rowIndex];\n          let canPlaceInRow = true;\n\n          // Проверяем, не пересекается ли с кем-то в этой строке\n          for (const existingPerson of row) {\n            const BUFFER = 20; // минимальный зазор между персонами\n            if (person.birthYear - BUFFER <= existingPerson.deathYear && person.deathYear + BUFFER >= existingPerson.birthYear) {\n              canPlaceInRow = false;\n              break;\n            }\n          }\n\n          // Если можно разместить в этой строке\n          if (canPlaceInRow) {\n            allRows[rowIndex].push(person);\n            placed = true;\n            break;\n          }\n        }\n\n        // Если не удалось разместить в существующих строках, создаем новую\n        if (!placed) {\n          allRows.push([person]);\n        }\n      });\n      return allRows;\n    }\n\n    // Группировка по категориям или странам\n    const groupField = groupingType === 'category' ? 'category' : 'country';\n    const allGroups = groupingType === 'category' ? allCategories : allCountries;\n    const groups = {};\n\n    // Группируем людей по выбранному полю\n    people.forEach(person => {\n      let groupValue;\n      if (groupField === 'country') {\n        // Для стран берем первую из списка, если есть несколько через \"/\"\n        groupValue = getFirstCountry(person.country);\n      } else {\n        groupValue = person[groupField];\n      }\n      if (!groups[groupValue]) {\n        groups[groupValue] = [];\n      }\n      groups[groupValue].push(person);\n    });\n\n    // Обрабатываем каждую группу в заданном порядке\n    allGroups.forEach(groupValue => {\n      if (groups[groupValue]) {\n        const groupPeople = groups[groupValue];\n        const groupRows = [];\n\n        // Размещаем людей данной группы в отдельные строки\n        groupPeople.forEach(person => {\n          let placed = false;\n\n          // Проверяем каждую существующую строку для этой группы\n          for (let rowIndex = 0; rowIndex < groupRows.length; rowIndex++) {\n            const row = groupRows[rowIndex];\n            let canPlaceInRow = true;\n\n            // Проверяем, не пересекается ли с кем-то в этой строке\n            for (const existingPerson of row) {\n              const BUFFER = 20; // минимальный зазор между персонами\n              if (person.birthYear - BUFFER <= existingPerson.deathYear && person.deathYear + BUFFER >= existingPerson.birthYear) {\n                canPlaceInRow = false;\n                break;\n              }\n            }\n\n            // Если можно разместить в этой строке\n            if (canPlaceInRow) {\n              groupRows[rowIndex].push(person);\n              placed = true;\n              break;\n            }\n          }\n\n          // Если не удалось разместить в существующих строках, создаем новую\n          if (!placed) {\n            groupRows.push([person]);\n          }\n        });\n\n        // Добавляем строки данной группы к общему списку\n        rows.push(...groupRows);\n\n        // Добавляем пустую строку для визуального разделения (кроме последней группы)\n        if (groupValue !== allGroups[allGroups.length - 1]) {\n          rows.push([]);\n        }\n      }\n    });\n    return rows;\n  };\n\n  // Получаем размещение по строкам\n  const rowPlacement = calculateRowPlacement(sortedData);\n\n  // Вычисляем общую высоту с учетом пустых строк\n  const totalHeight = rowPlacement.reduce((height, row) => {\n    return height + (row.length === 0 ? 20 : 70); // 20px для пустых строк, 70px для обычных (60px + 10px margin)\n  }, 0);\n\n  // Функция для создания разделителей категорий\n  // Высота строки и отступ вниз для непустой строки\n  const ROW_HEIGHT = 60;\n  const ROW_MARGIN = 10; // margin-bottom, используется только для непустых строк\n  const EMPTY_ROW_HEIGHT = 20;\n\n  // Подсчитываем абсолютный top каждой строки, чтобы точно позиционировать разделители\n  const rowTops = [];\n  (() => {\n    let acc = 0;\n    rowPlacement.forEach(row => {\n      rowTops.push(acc);\n      if (row.length === 0) {\n        acc += EMPTY_ROW_HEIGHT;\n      } else {\n        acc += ROW_HEIGHT + ROW_MARGIN;\n      }\n    });\n  })();\n  const createCategoryDividers = () => {\n    if (groupingType === 'none') {\n      return []; // Без группировки нет разделителей\n    }\n    const dividers = [];\n    let currentGroup = '';\n    rowPlacement.forEach((row, rowIndex) => {\n      if (row.length > 0) {\n        const firstPersonInRow = row[0];\n        let currentGroupValue;\n        if (groupingType === 'category') {\n          currentGroupValue = firstPersonInRow.category;\n        } else if (groupingType === 'country') {\n          // Для стран берем первую из списка\n          currentGroupValue = getFirstCountry(firstPersonInRow.country);\n        } else {\n          currentGroupValue = firstPersonInRow.category;\n        }\n        if (currentGroupValue !== currentGroup) {\n          if (currentGroup !== '') {\n            // закрываем предыдущую группу\n            dividers.push({\n              category: currentGroup,\n              top: rowTops[rowIndex] - 5\n            });\n          }\n          currentGroup = currentGroupValue;\n        }\n      }\n    });\n\n    // Добавляем разделитель для последней группы\n    if (currentGroup !== '') {\n      dividers.push({\n        category: currentGroup,\n        top: rowTops[rowPlacement.length - 1] - 5\n      });\n    }\n    return dividers;\n  };\n  const categoryDividers = createCategoryDividers();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: `app-header ${isScrolled ? 'scrolled' : ''}`,\n      style: {\n        padding: isScrolled ? '0.5rem 1rem' : '0.75rem 1rem',\n        transition: 'all 0.3s ease'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          gap: '1rem',\n          width: '100%',\n          flexWrap: 'wrap'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            fontSize: isScrolled ? '1.5rem' : '1.8rem',\n            margin: 0,\n            transition: 'font-size 0.3s ease',\n            fontWeight: 'bold',\n            color: '#f4e4c1',\n            flexShrink: 0\n          },\n          children: \"Chronoline\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '0.5rem',\n            alignItems: 'center',\n            flexWrap: 'wrap',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              gap: '0.3rem',\n              padding: '0.3rem 0.6rem',\n              borderRadius: '6px',\n              background: filters.showAchievements ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.05)',\n              border: `1px solid ${filters.showAchievements ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)'}`,\n              transition: 'all 0.2s ease',\n              cursor: 'pointer'\n            },\n            onClick: () => setFilters(prev => ({\n              ...prev,\n              showAchievements: !prev.showAchievements\n            })),\n            title: filters.showAchievements ? 'Скрыть маркеры достижений' : 'Показать маркеры достижений',\n            children: /*#__PURE__*/_jsxDEV(AchievementMarker, {\n              isActive: filters.showAchievements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 914,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(GroupingToggle, {\n            groupingType: groupingType,\n            onGroupingChange: setGroupingType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 932,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '0.3rem',\n              alignItems: 'center',\n              flexWrap: 'wrap'\n            },\n            children: [/*#__PURE__*/_jsxDEV(FilterDropdown, {\n              title: \"\\uD83C\\uDFAD\",\n              items: allCategories,\n              selectedItems: filters.categories,\n              onSelectionChange: categories => setFilters(prev => ({\n                ...prev,\n                categories\n              })),\n              getItemColor: getCategoryColor,\n              icon: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"12\",\n                height: \"12\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 953,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 952,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FilterDropdown, {\n              title: \"\\uD83C\\uDF0D\",\n              items: allCountries,\n              selectedItems: filters.countries,\n              onSelectionChange: countries => setFilters(prev => ({\n                ...prev,\n                countries\n              })),\n              icon: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"12\",\n                height: \"12\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 966,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 965,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 959,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '0.2rem',\n                alignItems: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: yearInputs.start,\n                onChange: e => setYearInputs(prev => ({\n                  ...prev,\n                  start: e.target.value\n                })),\n                onBlur: e => applyYearFilter('start', e.target.value),\n                onKeyPress: e => handleYearKeyPress('start', e),\n                placeholder: \"\\u041E\\u0442\",\n                style: {\n                  width: '50px',\n                  padding: '0.2rem 0.3rem',\n                  border: '1px solid rgba(139, 69, 19, 0.3)',\n                  borderRadius: '3px',\n                  background: 'rgba(44, 24, 16, 0.8)',\n                  color: '#f4e4c1',\n                  fontSize: '0.6rem',\n                  textAlign: 'center'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 977,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '0.6rem',\n                  color: '#f4e4c1'\n                },\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 995,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: yearInputs.end,\n                onChange: e => setYearInputs(prev => ({\n                  ...prev,\n                  end: e.target.value\n                })),\n                onBlur: e => applyYearFilter('end', e.target.value),\n                onKeyPress: e => handleYearKeyPress('end', e),\n                placeholder: \"\\u0414\\u043E\",\n                style: {\n                  width: '50px',\n                  padding: '0.2rem 0.3rem',\n                  border: '1px solid rgba(139, 69, 19, 0.3)',\n                  borderRadius: '3px',\n                  background: 'rgba(44, 24, 16, 0.8)',\n                  color: '#f4e4c1',\n                  fontSize: '0.6rem',\n                  textAlign: 'center'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 996,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 972,\n              columnNumber: 15\n            }, this), (filters.categories.length > 0 || filters.countries.length > 0 || yearInputs.start !== '-800' || yearInputs.end !== '2000') && /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetAllFilters,\n              style: {\n                padding: '0.2rem 0.4rem',\n                background: 'rgba(231, 76, 60, 0.2)',\n                border: '1px solid rgba(231, 76, 60, 0.4)',\n                borderRadius: '3px',\n                color: '#e74c3c',\n                fontSize: '0.6rem',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease'\n              },\n              title: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u0432\\u0441\\u0435 \\u0444\\u0438\\u043B\\u044C\\u0442\\u0440\\u044B\",\n              children: \"\\u2715\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 906,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 9\n      }, this), showFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '0.75rem',\n          padding: '0.75rem',\n          background: 'rgba(44, 24, 16, 0.9)',\n          borderRadius: '8px',\n          border: '1px solid rgba(139, 69, 19, 0.3)',\n          backdropFilter: 'blur(10px)',\n          animation: 'slideDown 0.3s ease'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n            gap: '1rem',\n            alignItems: 'start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontSize: '0.8rem',\n                color: '#f4e4c1',\n                margin: '0 0 0.5rem 0',\n                fontWeight: 'bold'\n              },\n              children: \"\\u0420\\u043E\\u0434 \\u0434\\u0435\\u044F\\u0442\\u0435\\u043B\\u044C\\u043D\\u043E\\u0441\\u0442\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1059,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FilterDropdown, {\n              title: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u0438\",\n              items: allCategories,\n              selectedItems: filters.categories,\n              onSelectionChange: categories => setFilters(prev => ({\n                ...prev,\n                categories\n              })),\n              getItemColor: getCategoryColor,\n              icon: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"14\",\n                height: \"14\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1075,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1074,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1058,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontSize: '0.8rem',\n                color: '#f4e4c1',\n                margin: '0 0 0.5rem 0',\n                fontWeight: 'bold'\n              },\n              children: \"\\u0421\\u0442\\u0440\\u0430\\u043D\\u0430 \\u043F\\u0440\\u043E\\u0438\\u0441\\u0445\\u043E\\u0436\\u0434\\u0435\\u043D\\u0438\\u044F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FilterDropdown, {\n              title: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0441\\u0442\\u0440\\u0430\\u043D\\u044B\",\n              items: allCountries,\n              selectedItems: filters.countries,\n              onSelectionChange: countries => setFilters(prev => ({\n                ...prev,\n                countries\n              })),\n              icon: /*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"14\",\n                height: \"14\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1098,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1091,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1082,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                fontSize: '0.8rem',\n                color: '#f4e4c1',\n                margin: '0 0 0.5rem 0',\n                fontWeight: 'bold'\n              },\n              children: \"\\u0412\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u043E\\u0439 \\u043F\\u0435\\u0440\\u0438\\u043E\\u0434\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1106,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '0.5rem',\n                alignItems: 'center',\n                flexWrap: 'wrap'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    fontSize: '0.7rem',\n                    display: 'block',\n                    marginBottom: '0.2rem',\n                    color: '#f4e4c1'\n                  },\n                  children: \"\\u041E\\u0442:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1121,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: yearInputs.start,\n                  onChange: e => setYearInputs(prev => ({\n                    ...prev,\n                    start: e.target.value\n                  })),\n                  onBlur: e => applyYearFilter('start', e.target.value),\n                  onKeyPress: e => handleYearKeyPress('start', e),\n                  style: {\n                    width: '80px',\n                    padding: '0.3rem',\n                    border: '1px solid rgba(139, 69, 19, 0.5)',\n                    borderRadius: '4px',\n                    background: 'rgba(44, 24, 16, 0.8)',\n                    color: '#f4e4c1',\n                    fontSize: '0.7rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1124,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1120,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    fontSize: '0.7rem',\n                    display: 'block',\n                    marginBottom: '0.2rem',\n                    color: '#f4e4c1'\n                  },\n                  children: \"\\u0414\\u043E:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1142,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: yearInputs.end,\n                  onChange: e => setYearInputs(prev => ({\n                    ...prev,\n                    end: e.target.value\n                  })),\n                  onBlur: e => applyYearFilter('end', e.target.value),\n                  onKeyPress: e => handleYearKeyPress('end', e),\n                  style: {\n                    width: '80px',\n                    padding: '0.3rem',\n                    border: '1px solid rgba(139, 69, 19, 0.5)',\n                    borderRadius: '4px',\n                    background: 'rgba(44, 24, 16, 0.8)',\n                    color: '#f4e4c1',\n                    fontSize: '0.7rem'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1145,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'end'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: resetAllFilters,\n              style: {\n                padding: '0.4rem 0.8rem',\n                background: 'linear-gradient(135deg, #95a5a6 0%, #7f8c8d 100%)',\n                border: 'none',\n                borderRadius: '4px',\n                color: 'white',\n                fontSize: '0.7rem',\n                cursor: 'pointer',\n                transition: 'all 0.2s ease'\n              },\n              children: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C \\u0432\\u0441\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1167,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1166,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-overlay\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1192,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-container\",\n        style: {\n          position: 'relative',\n          height: 'calc(100vh - 100px)',\n          overflow: 'auto',\n          padding: '1rem 0 2rem 0'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 1\n          },\n          children: centuryBoundaries.map((year, index) => {\n            const nextYear = centuryBoundaries[index + 1] || year + 100;\n            const startPos = getPosition(year);\n            const endPos = getPosition(nextYear);\n            const width = endPos - startPos;\n\n            // Вычисляем век на основе центра года в столетии\n            const centerYear = year + 50;\n            const centuryNumber = getCenturyNumber(centerYear);\n            // Для отрицательных веков добавляем знак минус\n            const isNegativeCentury = year < 0;\n            const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${startPos}px`,\n                width: `${width}px`,\n                height: '100%',\n                background: getCenturyColor(year),\n                opacity: 0.3,\n                zIndex: 1\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"century-label\",\n                style: {\n                  position: 'absolute',\n                  top: '50%',\n                  left: '50%',\n                  transform: 'translate(-50%, -50%)',\n                  fontSize: '2rem',\n                  fontWeight: 'bold',\n                  color: 'rgba(244, 228, 193, 0.6)',\n                  textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n                  pointerEvents: 'none',\n                  zIndex: 2,\n                  fontFamily: 'serif'\n                },\n                children: romanNumeral\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1237,\n                columnNumber: 19\n              }, this)\n            }, `century-bg-${year}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1227,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 5\n          },\n          children: centuryBoundaries.map(year => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              left: `${getPosition(year)}px`,\n              width: '2px',\n              height: '100%',\n              background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n              zIndex: 5\n            }\n          }, `century-line-${year}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1268,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 8\n          },\n          children: categoryDividers.map(divider => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: `${divider.top}px`,\n              left: '0',\n              width: '100%',\n              height: '10px',\n              background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n              opacity: 0.6,\n              zIndex: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-label\",\n              style: {\n                position: 'absolute',\n                left: '20px',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                background: getGroupColor(divider.category),\n                color: 'white',\n                padding: '2px 8px',\n                borderRadius: '4px',\n                fontSize: '0.7rem',\n                fontWeight: 'bold',\n                whiteSpace: 'nowrap',\n                zIndex: 9\n              },\n              children: divider.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1300,\n              columnNumber: 17\n            }, this)\n          }, `category-divider-${divider.category}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1290,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1280,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'relative',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 60}px`,\n            zIndex: 10\n          },\n          children: rowPlacement.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'relative',\n              height: row.length === 0 ? '20px' : '60px',\n              marginBottom: row.length === 0 ? '0px' : '10px'\n            },\n            children: row.map(person => /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: 'absolute',\n                  left: `${getPosition(person.birthYear)}px`,\n                  top: 0,\n                  fontSize: '11px',\n                  color: 'rgba(244, 228, 193, 0.6)',\n                  fontStyle: 'italic',\n                  fontWeight: 400,\n                  transform: 'translateX(-100%) translateY(-10px)'\n                },\n                children: person.birthYear\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1336,\n                columnNumber: 21\n              }, this), person.reignStart && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"reign-label\",\n                style: {\n                  position: 'absolute',\n                  left: `${getPosition(person.reignStart)}px`,\n                  top: 0,\n                  fontSize: '11px',\n                  color: '#E57373',\n                  // Темно-красный\n                  fontStyle: 'italic',\n                  fontWeight: 'bold',\n                  transform: 'translateX(-100%) translateY(-22px)'\n                },\n                children: [\"\\uD83D\\uDC51 \", person.reignStart]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1348,\n                columnNumber: 23\n              }, this), person.reignEnd && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"reign-label\",\n                style: {\n                  position: 'absolute',\n                  left: `${getPosition(person.reignEnd)}px`,\n                  top: 0,\n                  fontSize: '11px',\n                  color: '#E57373',\n                  // Темно-красный\n                  fontStyle: 'italic',\n                  fontWeight: 'bold',\n                  transform: 'translateY(-22px)'\n                },\n                children: person.reignEnd\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1361,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  position: 'absolute',\n                  left: `${getPosition(person.deathYear)}px`,\n                  top: 0,\n                  fontSize: '11px',\n                  color: 'rgba(244, 228, 193, 0.6)',\n                  fontStyle: 'italic',\n                  fontWeight: 400,\n                  transform: 'translateY(-10px)'\n                },\n                children: person.deathYear\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1373,\n                columnNumber: 21\n              }, this), filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3].filter(year => year !== undefined && year !== null).map((year, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'absolute',\n                    left: `${getPosition(year)}px`,\n                    top: '-4px',\n                    width: '2px',\n                    height: '15px',\n                    backgroundColor: getCategoryColorDark(person.category),\n                    zIndex: (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.personId) === person.id && (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.index) === index ? 10 : 3,\n                    transform: 'translateX(-50%)',\n                    cursor: 'pointer',\n                    transition: 'all 0.2s ease'\n                  },\n                  onMouseEnter: e => {\n                    e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n                    // Находим span внутри и обновляем его стили\n                    const span = e.currentTarget.querySelector('span');\n                    if (span) {\n                      span.style.backgroundColor = 'rgba(44, 24, 16, 0.95)';\n                      span.style.borderColor = getGroupColor(getPersonGroup(person));\n                      span.style.color = getGroupColor(getPersonGroup(person));\n                      span.style.fontSize = '9px';\n                      span.style.padding = '2px 4px';\n                      span.style.borderRadius = '3px';\n                    }\n\n                    // Устанавливаем активный маркер\n                    setActiveAchievementMarker({\n                      personId: person.id,\n                      index\n                    });\n\n                    // Очищаем предыдущий таймер если он есть\n                    if (hoverTimerRef.current) {\n                      clearTimeout(hoverTimerRef.current);\n                    }\n\n                    // Запускаем таймер для показа tooltip\n                    hoverTimerRef.current = setTimeout(() => {\n                      setHoveredAchievement({\n                        person,\n                        year: year,\n                        index\n                      });\n                      setAchievementTooltipPosition({\n                        x: e.clientX,\n                        y: e.clientY\n                      });\n                      setShowAchievementTooltip(true);\n                    }, 500);\n                  },\n                  onMouseLeave: e => {\n                    e.currentTarget.style.backgroundColor = getCategoryColorDark(person.category);\n                    e.currentTarget.style.boxShadow = 'none';\n                    // Возвращаем стили span к исходным\n                    const span = e.currentTarget.querySelector('span');\n                    if (span) {\n                      span.style.backgroundColor = 'rgba(44, 24, 16, 0.9)';\n                      span.style.borderColor = getGroupColorDark(getPersonGroup(person));\n                      span.style.color = getGroupColorDark(getPersonGroup(person));\n                      span.style.fontSize = '8px';\n                      span.style.padding = '1px 3px';\n                      span.style.borderRadius = '2px';\n                    }\n\n                    // Сбрасываем активный маркер\n                    setActiveAchievementMarker(null);\n\n                    // Очищаем таймер и скрываем tooltip\n                    if (hoverTimerRef.current) {\n                      clearTimeout(hoverTimerRef.current);\n                      hoverTimerRef.current = null;\n                    }\n                    setShowAchievementTooltip(false);\n                    setHoveredAchievement(null);\n                  },\n                  onMouseMove: e => {\n                    setAchievementTooltipPosition({\n                      x: e.clientX,\n                      y: e.clientY\n                    });\n                  },\n                  onMouseOut: e => {\n                    // Дополнительная проверка на случай, если onMouseLeave не сработал\n                    if (!e.currentTarget.contains(e.relatedTarget)) {\n                      setActiveAchievementMarker(null);\n                      if (hoverTimerRef.current) {\n                        clearTimeout(hoverTimerRef.current);\n                        hoverTimerRef.current = null;\n                      }\n                      setShowAchievementTooltip(false);\n                      setHoveredAchievement(null);\n                    }\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      position: 'absolute',\n                      top: '-12px',\n                      left: '50%',\n                      transform: 'translateX(-50%)',\n                      fontSize: '8px',\n                      color: getGroupColorDark(getPersonGroup(person)),\n                      fontWeight: 'bold',\n                      whiteSpace: 'nowrap',\n                      backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                      padding: '1px 3px',\n                      borderRadius: '2px',\n                      border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                      transition: 'all 0.2s ease'\n                    },\n                    children: year\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1471,\n                    columnNumber: 29\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1389,\n                  columnNumber: 27\n                }, this);\n              }), person.reignStart && person.reignEnd && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  top: '-15px',\n                  left: `${getPosition(person.reignStart)}px`,\n                  width: `${getWidth(person.reignStart, person.reignEnd)}px`,\n                  height: '65px',\n                  backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                  pointerEvents: 'none',\n                  borderLeft: '2px solid #D32F2F',\n                  borderRight: '2px solid #D32F2F',\n                  borderRadius: '3px',\n                  zIndex: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1494,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"life-bar\",\n                style: {\n                  position: 'absolute',\n                  top: '10px',\n                  left: `${getPosition(person.birthYear)}px`,\n                  width: `${getWidth(person.birthYear, person.deathYear)}px`,\n                  height: '40px',\n                  background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  padding: '0 12px',\n                  color: 'white',\n                  fontSize: '14px',\n                  fontWeight: 'bold',\n                  minWidth: '60px',\n                  boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                  border: '1.5px solid #a8926a',\n                  opacity: 1,\n                  zIndex: 5\n                },\n                onMouseEnter: e => {\n                  e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)';\n                  e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)';\n                  e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n                  setHoveredPerson(person);\n                  setMousePosition({\n                    x: e.clientX,\n                    y: e.clientY\n                  });\n                  setTimeout(() => setShowTooltip(true), 300);\n                },\n                onMouseLeave: e => {\n                  e.currentTarget.style.transform = 'translateY(0) scale(1)';\n                  e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)';\n                  e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)';\n                  setHoveredPerson(null);\n                  setShowTooltip(false);\n                },\n                onMouseMove: e => {\n                  setMousePosition({\n                    x: e.clientX,\n                    y: e.clientY\n                  });\n                },\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    display: 'flex',\n                    flexDirection: 'column',\n                    lineHeight: '1.2'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: person.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1552,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1551,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1509,\n                columnNumber: 21\n              }, this)]\n            }, person.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1334,\n              columnNumber: 19\n            }, this))\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1328,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1196,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1188,\n      columnNumber: 7\n    }, this), hoveredPerson && showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        position: 'fixed',\n        left: `${mousePosition.x + 15}px`,\n        top: `${mousePosition.y - 10}px`,\n        padding: '1rem',\n        zIndex: 1000,\n        maxWidth: '300px',\n        minWidth: '250px',\n        color: '#f4e4c1',\n        pointerEvents: 'none',\n        opacity: 0,\n        transform: 'translateY(10px) scale(0.95)',\n        animation: 'tooltipFadeIn 0.2s ease-out forwards'\n      },\n      children: [hoveredPerson.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '0.75rem',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: hoveredPerson.imageUrl,\n          alt: hoveredPerson.name,\n          style: {\n            width: '80px',\n            height: '80px',\n            borderRadius: '50%',\n            objectFit: 'cover',\n            border: `2px solid ${getGroupColor(getPersonGroup(hoveredPerson))}`,\n            boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)'\n          },\n          onError: e => {\n            // Скрываем изображение если оно не загрузилось\n            e.currentTarget.style.display = 'none';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1585,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1581,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: '0 0 0.5rem 0',\n          color: getGroupColor(getPersonGroup(hoveredPerson)),\n          fontSize: '1.1rem',\n          fontWeight: 'bold'\n        },\n        children: hoveredPerson.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1604,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.85rem',\n          lineHeight: '1.4'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0',\n            fontWeight: 'bold'\n          },\n          children: [hoveredPerson.birthYear, \" - \", hoveredPerson.deathYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1614,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: getCategoryColor(hoveredPerson.category),\n              fontWeight: 'bold'\n            },\n            children: hoveredPerson.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1618,\n            columnNumber: 15\n          }, this), \" \\u2022 \", hoveredPerson.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1617,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.5rem 0',\n            fontStyle: 'italic',\n            opacity: 0.8\n          },\n          children: hoveredPerson.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1622,\n          columnNumber: 13\n        }, this), filters.showAchievements && [hoveredPerson.achievementYear1, hoveredPerson.achievementYear2, hoveredPerson.achievementYear3].filter(year => year !== undefined && year !== null).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '0.5rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              fontSize: '0.8rem',\n              color: getGroupColor(getPersonGroup(hoveredPerson))\n            },\n            children: \"\\uD83C\\uDFAF \\u041A\\u043B\\u044E\\u0447\\u0435\\u0432\\u044B\\u0435 \\u0434\\u043E\\u0441\\u0442\\u0438\\u0436\\u0435\\u043D\\u0438\\u044F:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1630,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: '0.25rem 0 0 0',\n              fontSize: '0.8rem'\n            },\n            children: [hoveredPerson.achievementYear1, hoveredPerson.achievementYear2, hoveredPerson.achievementYear3].filter(year => year !== undefined && year !== null).map((year, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '0.1rem',\n                display: 'flex',\n                alignItems: 'center',\n                gap: '0.5rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: getGroupColor(getPersonGroup(hoveredPerson)),\n                  fontWeight: 'bold',\n                  fontSize: '0.75rem'\n                },\n                children: year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1646,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: '0.75rem'\n                },\n                children: hoveredPerson.achievements[index] || 'Ключевое достижение'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1653,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1640,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1633,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1629,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1613,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1565,\n      columnNumber: 9\n    }, this), hoveredAchievement && showAchievementTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"achievement-tooltip\",\n      style: {\n        position: 'fixed',\n        left: `${achievementTooltipPosition.x + 15}px`,\n        top: `${achievementTooltipPosition.y - 10}px`,\n        padding: '0.75rem',\n        zIndex: 1001,\n        maxWidth: '250px',\n        minWidth: '200px',\n        color: '#f4e4c1',\n        pointerEvents: 'none',\n        opacity: 0,\n        transform: 'translateY(10px) scale(0.95)',\n        animation: 'tooltipFadeIn 0.2s ease-out forwards',\n        backgroundColor: 'rgba(44, 24, 16, 0.95)',\n        borderRadius: '6px',\n        border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.85rem',\n          lineHeight: '1.4'\n        },\n        children: [hoveredAchievement.person.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '0.5rem',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: hoveredAchievement.person.imageUrl,\n            alt: hoveredAchievement.person.name,\n            style: {\n              width: '50px',\n              height: '50px',\n              borderRadius: '50%',\n              objectFit: 'cover',\n              border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\n              boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)'\n            },\n            onError: e => {\n              // Скрываем изображение если оно не загрузилось\n              e.currentTarget.style.display = 'none';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1694,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1690,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: '0 0 0.5rem 0',\n            color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\n            fontSize: '1rem',\n            fontWeight: 'bold'\n          },\n          children: hoveredAchievement.person.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1713,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0',\n            fontWeight: 'bold',\n            color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\n            fontSize: '0.9rem'\n          },\n          children: [\"\\uD83C\\uDFAF \", hoveredAchievement.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1722,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0',\n            fontSize: '0.8rem',\n            fontStyle: 'italic'\n          },\n          children: hoveredAchievement.person.achievements[hoveredAchievement.index] || 'Ключевое достижение'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1731,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1687,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1669,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 876,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"r9gA0E1I6v8s7/kIUjX1GbadiEg=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AchievementMarker\");\n$RefreshReg$(_c2, \"FilterDropdown\");\n$RefreshReg$(_c3, \"GroupingToggle\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","getPersons","getCategories","getCountries","getCategoryColor","getCategoryColorDark","getCategoryColorMuted","jsxDEV","_jsxDEV","AchievementMarker","isActive","style","display","flexDirection","alignItems","gap","opacity","transition","children","width","height","background","border","borderRadius","justifyContent","fontSize","color","fontWeight","lineHeight","fileName","_jsxFileName","lineNumber","columnNumber","_c","FilterDropdown","title","items","selectedItems","onSelectionChange","getItemColor","icon","length","className","minWidth","padding","borderBottom","onClick","e","stopPropagation","marginRight","cursor","map","item","type","checked","includes","onChange","target","filter","i","_c2","GroupingToggle","groupingType","onGroupingChange","onMouseEnter","currentTarget","onMouseLeave","position","boxShadow","options","currentIndex","indexOf","nextIndex","top","left","transform","pointerEvents","_c3","App","_s","hoveredPerson","setHoveredPerson","mousePosition","setMousePosition","x","y","showTooltip","setShowTooltip","hoveredAchievement","setHoveredAchievement","achievementTooltipPosition","setAchievementTooltipPosition","showAchievementTooltip","setShowAchievementTooltip","isScrolled","setIsScrolled","activeAchievementMarker","setActiveAchievementMarker","hoverTimerRef","showFilters","setShowFilters","filters","setFilters","savedFilters","localStorage","getItem","parsed","JSON","parse","categories","countries","timeRange","start","end","showAchievements","undefined","setGroupingType","savedGrouping","setItem","stringify","current","clearTimeout","persons","setPersons","allCategories","setAllCategories","allCountries","setAllCountries","isLoading","setIsLoading","yearInputs","setYearInputs","toString","applyYearFilter","field","value","numValue","parseInt","prev","handleYearKeyPress","key","_e$currentTarget$pare","_e$currentTarget$pare2","inputs","parentElement","querySelectorAll","Array","from","nextInput","focus","resetAllFilters","fetchData","filtersToApply","category","join","country","startYear","endYear","personsData","categoriesData","countriesData","Promise","all","error","console","getCategoryPriority","getGroupColor","groupName","countryColors","index","getGroupColorDark","countryColorsDark","getGroupColorMuted","countryColorsMuted","getFirstCountry","countryString","split","c","trim","getPersonGroup","person","sortedData","sort","a","b","categoryDiff","countryDiff","birthYear","handleScroll","scrollTop","window","pageYOffset","document","documentElement","addEventListener","removeEventListener","minYear","Math","min","p","maxYear","max","deathYear","totalYears","pixelsPerYear","LEFT_PADDING_PX","timelineWidth","getPosition","year","getWidth","generateCenturyBoundaries","boundaries","startCentury","floor","endCentury","ceil","push","centuryBoundaries","getCenturyColor","colors","centuryIndex","toRomanNumeral","num","romanNumerals","numeral","result","remaining","abs","getCenturyNumber","calculateRowPlacement","people","rows","allRows","forEach","placed","rowIndex","row","canPlaceInRow","existingPerson","BUFFER","groupField","allGroups","groups","groupValue","groupPeople","groupRows","rowPlacement","totalHeight","reduce","ROW_HEIGHT","ROW_MARGIN","EMPTY_ROW_HEIGHT","rowTops","acc","createCategoryDividers","dividers","currentGroup","firstPersonInRow","currentGroupValue","categoryDividers","flexWrap","margin","flexShrink","viewBox","fill","d","onBlur","onKeyPress","placeholder","textAlign","marginTop","backdropFilter","animation","gridTemplateColumns","marginBottom","overflow","zIndex","nextYear","startPos","endPos","centerYear","centuryNumber","isNegativeCentury","romanNumeral","textShadow","fontFamily","divider","whiteSpace","Fragment","fontStyle","reignStart","reignEnd","achievementYear1","achievementYear2","achievementYear3","backgroundColor","personId","id","span","querySelector","borderColor","setTimeout","clientX","clientY","onMouseMove","onMouseOut","contains","relatedTarget","borderLeft","borderRight","name","maxWidth","imageUrl","src","alt","objectFit","onError","description","achievements","_c4","$RefreshReg$"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Person } from './types'\nimport { getPersons, getCategories, getCountries } from './services/api'\nimport { getCategoryColor, getCategoryColorDark, getCategoryColorMuted } from './utils/categoryColors'\nimport './App.css'\n\n// Компонент визуального маркера достижений\nconst AchievementMarker = ({ isActive }: { isActive: boolean }) => {\n  return (\n    <div style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '2px',\n      opacity: isActive ? 1 : 0.5,\n      transition: 'opacity 0.2s ease'\n    }}>\n      {/* Квадрат с годом */}\n      <div style={{\n        width: '20px',\n        height: '16px',\n        background: isActive ? '#f4e4c1' : 'rgba(244, 228, 193, 0.3)',\n        border: '1px solid rgba(139, 69, 19, 0.5)',\n        borderRadius: '2px',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '7px',\n        color: isActive ? '#2c1810' : 'rgba(44, 24, 16, 0.5)',\n        fontWeight: 'bold',\n        lineHeight: 1\n      }}>\n        1825\n      </div>\n      {/* Палочка */}\n      <div style={{\n        width: '2px',\n        height: '8px',\n        background: isActive ? '#f4e4c1' : 'rgba(244, 228, 193, 0.3)',\n        borderRadius: '1px'\n      }} />\n    </div>\n  )\n}\n\n// Компонент выпадающего фильтра\nconst FilterDropdown = ({ \n  title, \n  items, \n  selectedItems, \n  onSelectionChange, \n  getItemColor,\n  icon\n}: {\n  title: string\n  items: string[]\n  selectedItems: string[]\n  onSelectionChange: (items: string[]) => void\n  getItemColor?: (item: string) => string\n  icon?: React.ReactNode\n}) => {\n  const isActive = selectedItems.length > 0\n  \n  return (\n    <div className=\"filter-dropdown\">\n      <button \n        className={`filter-btn ${isActive ? 'active' : ''}`}\n        style={{ minWidth: '150px', display: 'flex', alignItems: 'center', gap: '0.5rem' }}\n      >\n        {icon}\n        {title} {isActive && `(${selectedItems.length})`}\n      </button>\n      <div className=\"filter-dropdown-content\">\n        <div style={{ padding: '0.5rem', borderBottom: '1px solid rgba(139, 69, 19, 0.3)' }}>\n          <button\n            onClick={(e) => {\n              e.stopPropagation()\n              onSelectionChange(items)\n            }}\n            style={{\n              padding: '0.25rem 0.5rem',\n              marginRight: '0.5rem',\n              background: '#27ae60',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '0.7rem'\n            }}\n          >\n            Выбрать все\n          </button>\n          <button\n            onClick={(e) => {\n              e.stopPropagation()\n              onSelectionChange([])\n            }}\n            style={{\n              padding: '0.25rem 0.5rem',\n              background: '#e74c3c',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer',\n              fontSize: '0.7rem'\n            }}\n          >\n            Снять все\n          </button>\n        </div>\n        {items.map(item => (\n          <label key={item} className=\"filter-checkbox\" onClick={(e) => e.stopPropagation()}>\n            <input\n              type=\"checkbox\"\n              checked={selectedItems.includes(item)}\n              onChange={(e) => {\n                e.stopPropagation()\n                if (e.target.checked) {\n                  onSelectionChange([...selectedItems, item])\n                } else {\n                  onSelectionChange(selectedItems.filter(i => i !== item))\n                }\n              }}\n            />\n            <span style={{ \n              color: getItemColor ? getItemColor(item) : '#f4e4c1',\n              fontWeight: getItemColor ? 'bold' : 'normal'\n            }}>\n              {item}\n            </span>\n          </label>\n        ))}\n      </div>\n    </div>\n  )\n}\n\n// Компонент переключателя группировки\nconst GroupingToggle = ({ \n  groupingType, \n  onGroupingChange \n}: {\n  groupingType: 'category' | 'country' | 'none'\n  onGroupingChange: (type: 'category' | 'country' | 'none') => void\n}) => {\n  return (\n    <div className=\"grouping-toggle\" style={{\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      gap: '0.4rem',\n      padding: '0.4rem 0.8rem'\n    }}>\n      {/* Изображения над переключателем */}\n      <div style={{\n        display: 'flex',\n        gap: '0.3rem',\n        alignItems: 'center',\n        height: '14px'\n      }}>\n        {/* Иконка категорий */}\n        <div \n          style={{\n            width: '14px',\n            height: '14px',\n            background: groupingType === 'category' ? '#cd853f' : 'rgba(244, 228, 193, 0.2)',\n            borderRadius: '3px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '9px',\n            color: groupingType === 'category' ? '#2c1810' : 'rgba(44, 24, 16, 0.4)',\n            transition: 'all 0.3s ease',\n            opacity: groupingType === 'category' ? 1 : 0.6,\n            cursor: 'pointer'\n          }}\n          onClick={() => onGroupingChange('category')}\n          title=\"Группировать по роду деятельности\"\n          onMouseEnter={(e) => {\n            if (groupingType !== 'category') {\n              e.currentTarget.style.background = 'rgba(205, 133, 63, 0.4)';\n              e.currentTarget.style.opacity = '0.8';\n            }\n          }}\n          onMouseLeave={(e) => {\n            if (groupingType !== 'category') {\n              e.currentTarget.style.background = 'rgba(244, 228, 193, 0.2)';\n              e.currentTarget.style.opacity = '0.6';\n            }\n          }}\n        >\n          🎭\n        </div>\n        \n        {/* Иконка стран */}\n        <div \n          style={{\n            width: '14px',\n            height: '14px',\n            background: groupingType === 'country' ? '#cd853f' : 'rgba(244, 228, 193, 0.2)',\n            borderRadius: '3px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '9px',\n            color: groupingType === 'country' ? '#2c1810' : 'rgba(44, 24, 16, 0.4)',\n            transition: 'all 0.3s ease',\n            opacity: groupingType === 'country' ? 1 : 0.6,\n            cursor: 'pointer'\n          }}\n          onClick={() => onGroupingChange('country')}\n          title=\"Группировать по странам\"\n          onMouseEnter={(e) => {\n            if (groupingType !== 'country') {\n              e.currentTarget.style.background = 'rgba(205, 133, 63, 0.4)';\n              e.currentTarget.style.opacity = '0.8';\n            }\n          }}\n          onMouseLeave={(e) => {\n            if (groupingType !== 'country') {\n              e.currentTarget.style.background = 'rgba(244, 228, 193, 0.2)';\n              e.currentTarget.style.opacity = '0.6';\n            }\n          }}\n        >\n          🌍\n        </div>\n        \n        {/* Иконка без группировки */}\n        <div \n          style={{\n            width: '14px',\n            height: '14px',\n            background: groupingType === 'none' ? '#cd853f' : 'rgba(244, 228, 193, 0.2)',\n            borderRadius: '3px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '9px',\n            color: groupingType === 'none' ? '#2c1810' : 'rgba(44, 24, 16, 0.4)',\n            transition: 'all 0.3s ease',\n            opacity: groupingType === 'none' ? 1 : 0.6,\n            cursor: 'pointer'\n          }}\n          onClick={() => onGroupingChange('none')}\n          title=\"Без группировки\"\n          onMouseEnter={(e) => {\n            if (groupingType !== 'none') {\n              e.currentTarget.style.background = 'rgba(205, 133, 63, 0.4)';\n              e.currentTarget.style.opacity = '0.8';\n            }\n          }}\n          onMouseLeave={(e) => {\n            if (groupingType !== 'none') {\n              e.currentTarget.style.background = 'rgba(244, 228, 193, 0.2)';\n              e.currentTarget.style.opacity = '0.6';\n            }\n          }}\n        >\n          📊\n        </div>\n      </div>\n      \n      {/* Переключатель в виде слайдера */}\n      <div style={{\n        position: 'relative',\n        width: '64px',\n        height: '22px',\n        background: 'rgba(44, 24, 16, 0.9)',\n        borderRadius: '11px',\n        cursor: 'pointer',\n        transition: 'all 0.3s ease',\n        boxShadow: 'inset 0 1px 3px rgba(0, 0, 0, 0.3)'\n      }}\n      onClick={() => {\n        const options: ('category' | 'country' | 'none')[] = ['category', 'country', 'none']\n        const currentIndex = options.indexOf(groupingType)\n        const nextIndex = (currentIndex + 1) % options.length\n        onGroupingChange(options[nextIndex])\n      }}\n      >\n        {/* Ползунок */}\n        <div style={{\n          position: 'absolute',\n          top: '3px',\n          left: groupingType === 'category' ? '3px' : groupingType === 'country' ? '23px' : '43px',\n          width: '18px',\n          height: '18px',\n          background: 'linear-gradient(135deg, #cd853f 0%, #daa520 100%)',\n          borderRadius: '50%',\n          transition: 'left 0.3s ease',\n          boxShadow: '0 2px 4px rgba(0, 0, 0, 0.4), inset 0 1px 1px rgba(255, 255, 255, 0.2)'\n        }} />\n        \n        {/* Индикаторы позиций */}\n        <div style={{\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          display: 'flex',\n          gap: '10px',\n          pointerEvents: 'none'\n        }}>\n          <div style={{\n            width: '3px',\n            height: '3px',\n            borderRadius: '50%',\n            background: groupingType === 'category' ? '#f4e4c1' : 'rgba(244, 228, 193, 0.2)',\n            transition: 'background 0.3s ease'\n          }} />\n          <div style={{\n            width: '3px',\n            height: '3px',\n            borderRadius: '50%',\n            background: groupingType === 'country' ? '#f4e4c1' : 'rgba(244, 228, 193, 0.2)',\n            transition: 'background 0.3s ease'\n          }} />\n          <div style={{\n            width: '3px',\n            height: '3px',\n            borderRadius: '50%',\n            background: groupingType === 'none' ? '#f4e4c1' : 'rgba(244, 228, 193, 0.2)',\n            transition: 'background 0.3s ease'\n          }} />\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nfunction App() {\n\n  const [hoveredPerson, setHoveredPerson] = useState<Person | null>(null)\n  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 })\n  const [showTooltip, setShowTooltip] = useState(false)\n  const [hoveredAchievement, setHoveredAchievement] = useState<{ person: Person; year: number; index: number } | null>(null)\n  const [achievementTooltipPosition, setAchievementTooltipPosition] = useState({ x: 0, y: 0 })\n  const [showAchievementTooltip, setShowAchievementTooltip] = useState(false)\n  const [isScrolled, setIsScrolled] = useState(false)\n  const [activeAchievementMarker, setActiveAchievementMarker] = useState<{ personId: string; index: number } | null>(null)\n  const hoverTimerRef = useRef<NodeJS.Timeout | null>(null)\n  const [showFilters, setShowFilters] = useState(false)\n  const [filters, setFilters] = useState(() => {\n    const savedFilters = localStorage.getItem('chronoline-filters');\n    if (savedFilters) {\n      const parsed = JSON.parse(savedFilters);\n      return {\n        categories: parsed.categories || [],\n        countries: parsed.countries || [],\n        timeRange: parsed.timeRange || { start: -800, end: 2000 },\n        showAchievements: parsed.showAchievements !== undefined ? parsed.showAchievements : true\n      };\n    }\n    return {\n      categories: [] as string[],\n      countries: [] as string[],\n      timeRange: { start: -800, end: 2000 },\n      showAchievements: true\n    };\n  })\n\n  // Состояние для типа группировки\n  const [groupingType, setGroupingType] = useState<'category' | 'country' | 'none'>(() => {\n    const savedGrouping = localStorage.getItem('chronoline-grouping');\n    return savedGrouping as 'category' | 'country' | 'none' || 'category';\n  })\n\n  // Сохраняем фильтры в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('chronoline-filters', JSON.stringify(filters));\n  }, [filters]);\n\n  // Сохраняем тип группировки в localStorage при изменении\n  useEffect(() => {\n    localStorage.setItem('chronoline-grouping', groupingType);\n  }, [groupingType]);\n\n  // Очищаем таймер при размонтировании компонента\n  useEffect(() => {\n    return () => {\n      if (hoverTimerRef.current) {\n        clearTimeout(hoverTimerRef.current);\n      }\n    };\n  }, []);\n  const [persons, setPersons] = useState<Person[]>([])\n  const [allCategories, setAllCategories] = useState<string[]>([])\n  const [allCountries, setAllCountries] = useState<string[]>([])\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Состояние для полей ввода годов\n  const [yearInputs, setYearInputs] = useState({\n    start: filters.timeRange.start.toString(),\n    end: filters.timeRange.end.toString()\n  })\n\n  // Функция для применения фильтра по году\n  const applyYearFilter = (field: 'start' | 'end', value: string) => {\n    const numValue = parseInt(value) || (field === 'start' ? -800 : 2000)\n    setFilters(prev => ({\n      ...prev,\n      timeRange: { ...prev.timeRange, [field]: numValue }\n    }))\n  }\n\n  // Функция для обработки нажатия Enter\n  const handleYearKeyPress = (field: 'start' | 'end', e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      applyYearFilter(field, e.currentTarget.value)\n      // Переводим фокус на следующий элемент\n      const inputs = e.currentTarget.parentElement?.parentElement?.querySelectorAll('input')\n      if (inputs) {\n        const currentIndex = Array.from(inputs).indexOf(e.currentTarget)\n        const nextInput = inputs[currentIndex + 1] as HTMLInputElement\n        if (nextInput) {\n          nextInput.focus()\n        }\n      }\n    }\n  }\n\n  // Функция для сброса всех фильтров\n  const resetAllFilters = () => {\n    setFilters({\n      categories: [],\n      countries: [],\n      timeRange: { start: -800, end: 2000 },\n      showAchievements: true\n    })\n    setYearInputs({\n      start: '-800',\n      end: '2000'\n    })\n  }\n\n\n  // Единый useEffect для загрузки и фильтрации данных\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n\n        // Формируем параметры для запроса\n        const filtersToApply: any = {};\n        if (filters.categories.length > 0) {\n          filtersToApply.category = filters.categories.join(',');\n        }\n        if (filters.countries.length > 0) {\n          filtersToApply.country = filters.countries.join(',');\n        }\n        filtersToApply.startYear = filters.timeRange.start;\n        filtersToApply.endYear = filters.timeRange.end;\n\n        // Загружаем персон с учетом фильтров\n        const personsData = await getPersons(filtersToApply);\n        setPersons(personsData);\n\n        // Загружаем категории и страны только если они еще не загружены\n        if (allCategories.length === 0 || allCountries.length === 0) {\n          const [categoriesData, countriesData] = await Promise.all([\n            getCategories(),\n            getCountries()\n          ]);\n          setAllCategories(categoriesData);\n          setAllCountries(countriesData);\n        }\n      } catch (error) {\n        console.error(\"Ошибка при загрузке данных:\", error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [filters, allCategories.length, allCountries.length]); // Перезагружаем данные при изменении фильтров\n\n    // Функция для получения приоритета категории\n  const getCategoryPriority = (category: string) => {\n    // Используем все категории из API, а не только жестко заданные\n    return allCategories.indexOf(category)\n  }\n\n  // Функция для получения цвета группы в зависимости от типа группировки\n  const getGroupColor = (groupName: string) => {\n    if (groupingType === 'category') {\n      return getCategoryColor(groupName)\n    } else if (groupingType === 'country') {\n      // Для стран используем другой набор цветов\n      const countryColors = [\n        '#e74c3c', '#3498db', '#2ecc71', '#f39c12', '#9b59b6',\n        '#1abc9c', '#e67e22', '#34495e', '#16a085', '#8e44ad',\n        '#27ae60', '#2980b9', '#f1c40f', '#e74c3c', '#95a5a6'\n      ]\n      const index = allCountries.indexOf(groupName)\n      return countryColors[index % countryColors.length]\n    }\n    return '#95a5a6' // серый цвет по умолчанию\n  }\n\n  // Функция для получения цвета группы (темный вариант)\n  const getGroupColorDark = (groupName: string) => {\n    if (groupingType === 'category') {\n      return getCategoryColorDark(groupName)\n    } else if (groupingType === 'country') {\n      // Для стран используем темные варианты цветов\n      const countryColorsDark = [\n        '#c0392b', '#2980b9', '#27ae60', '#d68910', '#8e44ad',\n        '#16a085', '#d35400', '#2c3e50', '#138d75', '#7d3c98',\n        '#229954', '#1f618d', '#d4ac0f', '#c0392b', '#7f8c8d'\n      ]\n      const index = allCountries.indexOf(groupName)\n      return countryColorsDark[index % countryColorsDark.length]\n    }\n    return '#7f8c8d' // темно-серый цвет по умолчанию\n  }\n\n  // Функция для получения цвета группы (приглушенный вариант)\n  const getGroupColorMuted = (groupName: string) => {\n    if (groupingType === 'category') {\n      return getCategoryColorMuted(groupName)\n    } else if (groupingType === 'country') {\n      // Для стран используем приглушенные варианты цветов\n      const countryColorsMuted = [\n        '#e74c3c', '#3498db', '#2ecc71', '#f39c12', '#9b59b6',\n        '#1abc9c', '#e67e22', '#34495e', '#16a085', '#8e44ad',\n        '#27ae60', '#2980b9', '#f1c40f', '#e74c3c', '#95a5a6'\n      ]\n      const index = allCountries.indexOf(groupName)\n      return countryColorsMuted[index % countryColorsMuted.length]\n    }\n    return '#95a5a6' // серый цвет по умолчанию\n  }\n\n  // Вспомогательная функция для извлечения первой страны из списка\n  const getFirstCountry = (countryString: string): string => {\n    const countries = countryString.split('/').map(c => c.trim())\n    return countries[0] || countryString\n  }\n\n  // Функция для получения значения группы для персонажа\n  const getPersonGroup = (person: Person) => {\n    if (groupingType === 'category') {\n      return person.category\n    } else if (groupingType === 'country') {\n      return getFirstCountry(person.country)\n    }\n    return person.category // по умолчанию\n  }\n\n  // Функция фильтрации данных (теперь данные фильтруются на бэкенде, но сортировка остается)\n  const sortedData = [...persons].sort((a, b) => {\n    if (groupingType === 'category') {\n      // Сначала сортируем по категориям\n      const categoryDiff = getCategoryPriority(a.category) - getCategoryPriority(b.category)\n      if (categoryDiff !== 0) {\n        return categoryDiff\n      }\n    } else if (groupingType === 'country') {\n      // Сначала сортируем по странам (берем первую страну из списка)\n      const countryDiff = allCountries.indexOf(getFirstCountry(a.country)) - allCountries.indexOf(getFirstCountry(b.country))\n      if (countryDiff !== 0) {\n        return countryDiff\n      }\n    }\n    // Затем по году рождения\n    return a.birthYear - b.birthYear\n  })\n\n  // Отслеживаем скролл\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop\n      setIsScrolled(scrollTop > 50)\n    }\n\n    window.addEventListener('scroll', handleScroll)\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [])\n\n\n\n  // Вычисляем реальный диапазон лет из отфильтрованных данных\n  const minYear = Math.min(...sortedData.map(p => p.birthYear), filters.timeRange.start)\n  const maxYear = Math.max(...sortedData.map(p => p.deathYear), filters.timeRange.end)\n  const totalYears = maxYear - minYear\n\n  // Настройки масштаба\n  const pixelsPerYear = 3 // 3 пикселя на год\n  const LEFT_PADDING_PX = 30 // отступ слева, чтобы крайняя левая подпись не упиралась в край\n  const timelineWidth = totalYears * pixelsPerYear + LEFT_PADDING_PX\n\n  // Функция для вычисления позиции в пикселях\n  const getPosition = (year: number) => {\n    return LEFT_PADDING_PX + (year - minYear) * pixelsPerYear\n  }\n\n  // Функция для вычисления ширины полоски в пикселях\n  const getWidth = (birthYear: number, deathYear: number) => {\n    return (deathYear - birthYear) * pixelsPerYear\n  }\n\n  // Генерируем границы веков\n  const generateCenturyBoundaries = () => {\n    const boundaries = []\n    const startCentury = Math.floor(minYear / 100) * 100\n    const endCentury = Math.ceil(maxYear / 100) * 100\n    \n    for (let year = startCentury; year <= endCentury; year += 100) {\n      // Включаем границу, если она попадает в диапазон данных или является границей века\n      if (year <= maxYear) {\n        boundaries.push(year)\n      }\n    }\n    return boundaries\n  }\n\n  const centuryBoundaries = generateCenturyBoundaries()\n\n  // Функция для получения цвета века\n  const getCenturyColor = (year: number) => {\n    const colors = [\n      'rgba(255, 107, 107, 0.1)', // Светло-красный\n      'rgba(78, 205, 196, 0.1)', // Светло-голубой\n      'rgba(150, 206, 180, 0.1)', // Светло-зеленый\n      'rgba(255, 234, 167, 0.1)', // Светло-оранжевый\n      'rgba(221, 160, 221, 0.1)', // Светло-фиолетовый\n      'rgba(120, 219, 255, 0.1)', // Светло-бирюзовый\n      'rgba(255, 255, 229, 0.1)', // Светло-желтый\n      'rgba(255, 229, 240, 0.1)', // Светло-розовый\n    ]\n    \n    const centuryIndex = Math.floor((year - minYear) / 100)\n    return colors[centuryIndex % colors.length]\n  }\n\n  // Функция для конвертации в римские цифры\n  const toRomanNumeral = (num: number): string => {\n    const romanNumerals = [\n      { value: 1000, numeral: 'M' },\n      { value: 900, numeral: 'CM' },\n      { value: 500, numeral: 'D' },\n      { value: 400, numeral: 'CD' },\n      { value: 100, numeral: 'C' },\n      { value: 90, numeral: 'XC' },\n      { value: 50, numeral: 'L' },\n      { value: 40, numeral: 'XL' },\n      { value: 10, numeral: 'X' },\n      { value: 9, numeral: 'IX' },\n      { value: 5, numeral: 'V' },\n      { value: 4, numeral: 'IV' },\n      { value: 1, numeral: 'I' }\n    ]\n\n    let result = ''\n    let remaining = Math.abs(num)\n\n    for (const { value, numeral } of romanNumerals) {\n      while (remaining >= value) {\n        result += numeral\n        remaining -= value\n      }\n    }\n\n    return num < 0 ? `-${result}` : result\n  }\n\n  // Функция для получения номера века\n  const getCenturyNumber = (year: number): number => {\n    if (year < 0) {\n      // Для отрицательных лет: -1 до -100 = 1 век до н.э., -101 до -200 = 2 век до н.э.\n      return Math.floor((Math.abs(year) - 1) / 100) + 1\n    } else if (year === 0) {\n      // Год 0 не существует в исторической хронологии\n      return 1\n    } else {\n      // Для положительных лет: 1-100 = 1 век, 101-200 = 2 век и т.д.\n      return Math.floor((year - 1) / 100) + 1\n    }\n  }\n\n  // Алгоритм размещения полосок на строках с полной группировкой по категориям\n  const calculateRowPlacement = (people: Person[]) => {\n    const rows: Person[][] = []\n    \n    if (groupingType === 'none') {\n      // Без группировки - просто размещаем всех в строки\n      const allRows: Person[][] = []\n      \n      people.forEach(person => {\n        let placed = false\n        \n        // Проверяем каждую существующую строку\n        for (let rowIndex = 0; rowIndex < allRows.length; rowIndex++) {\n          const row = allRows[rowIndex]\n          let canPlaceInRow = true\n          \n          // Проверяем, не пересекается ли с кем-то в этой строке\n          for (const existingPerson of row) {\n            const BUFFER = 20; // минимальный зазор между персонами\n            if (\n              person.birthYear - BUFFER <= existingPerson.deathYear &&\n              person.deathYear + BUFFER >= existingPerson.birthYear\n            ) {\n              canPlaceInRow = false\n              break\n            }\n          }\n          \n          // Если можно разместить в этой строке\n          if (canPlaceInRow) {\n            allRows[rowIndex].push(person)\n            placed = true\n            break\n          }\n        }\n        \n        // Если не удалось разместить в существующих строках, создаем новую\n        if (!placed) {\n          allRows.push([person])\n        }\n      })\n      \n      return allRows\n    }\n    \n    // Группировка по категориям или странам\n    const groupField = groupingType === 'category' ? 'category' : 'country'\n    const allGroups = groupingType === 'category' ? allCategories : allCountries\n    const groups: { [key: string]: Person[] } = {}\n    \n    // Группируем людей по выбранному полю\n    people.forEach(person => {\n      let groupValue: string\n      if (groupField === 'country') {\n        // Для стран берем первую из списка, если есть несколько через \"/\"\n        groupValue = getFirstCountry(person.country)\n      } else {\n        groupValue = person[groupField]\n      }\n      \n      if (!groups[groupValue]) {\n        groups[groupValue] = []\n      }\n      groups[groupValue].push(person)\n    })\n    \n    // Обрабатываем каждую группу в заданном порядке\n    allGroups.forEach(groupValue => {\n      if (groups[groupValue]) {\n        const groupPeople = groups[groupValue]\n        const groupRows: Person[][] = []\n        \n        // Размещаем людей данной группы в отдельные строки\n        groupPeople.forEach(person => {\n          let placed = false\n          \n          // Проверяем каждую существующую строку для этой группы\n          for (let rowIndex = 0; rowIndex < groupRows.length; rowIndex++) {\n            const row = groupRows[rowIndex]\n            let canPlaceInRow = true\n            \n            // Проверяем, не пересекается ли с кем-то в этой строке\n            for (const existingPerson of row) {\n              const BUFFER = 20; // минимальный зазор между персонами\n              if (\n                person.birthYear - BUFFER <= existingPerson.deathYear &&\n                person.deathYear + BUFFER >= existingPerson.birthYear\n              ) {\n                canPlaceInRow = false\n                break\n              }\n            }\n            \n            // Если можно разместить в этой строке\n            if (canPlaceInRow) {\n              groupRows[rowIndex].push(person)\n              placed = true\n              break\n            }\n          }\n          \n          // Если не удалось разместить в существующих строках, создаем новую\n          if (!placed) {\n            groupRows.push([person])\n          }\n        })\n        \n        // Добавляем строки данной группы к общему списку\n        rows.push(...groupRows)\n        \n        // Добавляем пустую строку для визуального разделения (кроме последней группы)\n        if (groupValue !== allGroups[allGroups.length - 1]) {\n          rows.push([])\n        }\n      }\n    })\n    \n    return rows\n  }\n\n  // Получаем размещение по строкам\n  const rowPlacement = calculateRowPlacement(sortedData)\n\n  // Вычисляем общую высоту с учетом пустых строк\n  const totalHeight = rowPlacement.reduce((height, row) => {\n    return height + (row.length === 0 ? 20 : 70) // 20px для пустых строк, 70px для обычных (60px + 10px margin)\n  }, 0)\n\n  // Функция для создания разделителей категорий\n    // Высота строки и отступ вниз для непустой строки\n  const ROW_HEIGHT = 60;\n  const ROW_MARGIN = 10; // margin-bottom, используется только для непустых строк\n  const EMPTY_ROW_HEIGHT = 20;\n\n  // Подсчитываем абсолютный top каждой строки, чтобы точно позиционировать разделители\n  const rowTops: number[] = [];\n  (() => {\n    let acc = 0;\n    rowPlacement.forEach(row => {\n      rowTops.push(acc);\n      if (row.length === 0) {\n        acc += EMPTY_ROW_HEIGHT;\n      } else {\n        acc += ROW_HEIGHT + ROW_MARGIN;\n      }\n    });\n  })();\n\n  const createCategoryDividers = () => {\n    if (groupingType === 'none') {\n      return []; // Без группировки нет разделителей\n    }\n\n    const dividers: { category: string; top: number }[] = [];\n    let currentGroup = '';\n\n    rowPlacement.forEach((row, rowIndex) => {\n      if (row.length > 0) {\n        const firstPersonInRow = row[0];\n        let currentGroupValue: string;\n        \n        if (groupingType === 'category') {\n          currentGroupValue = firstPersonInRow.category;\n        } else if (groupingType === 'country') {\n          // Для стран берем первую из списка\n          currentGroupValue = getFirstCountry(firstPersonInRow.country);\n        } else {\n          currentGroupValue = firstPersonInRow.category;\n        }\n        \n        if (currentGroupValue !== currentGroup) {\n          if (currentGroup !== '') {\n            // закрываем предыдущую группу\n            dividers.push({ category: currentGroup, top: rowTops[rowIndex] - 5 });\n          }\n          currentGroup = currentGroupValue;\n        }\n      }\n    });\n\n    // Добавляем разделитель для последней группы\n    if (currentGroup !== '') {\n      dividers.push({ category: currentGroup, top: rowTops[rowPlacement.length - 1] - 5 });\n    }\n\n    return dividers;\n  };\n\n  const categoryDividers = createCategoryDividers();\n\n\n\n  return (\n    <div className=\"app\">\n      <header \n        className={`app-header ${isScrolled ? 'scrolled' : ''}`}\n        style={{\n          padding: isScrolled ? '0.5rem 1rem' : '0.75rem 1rem',\n          transition: 'all 0.3s ease'\n        }}\n      >\n        {/* Основная панель */}\n        <div style={{ \n          display: 'flex', \n          justifyContent: 'space-between',\n          alignItems: 'center',\n          gap: '1rem',\n          width: '100%',\n          flexWrap: 'wrap'\n        }}>\n          {/* Заголовок */}\n          <h1 style={{ \n            fontSize: isScrolled ? '1.5rem' : '1.8rem',\n            margin: 0,\n            transition: 'font-size 0.3s ease',\n            fontWeight: 'bold',\n            color: '#f4e4c1',\n            flexShrink: 0\n          }}>\n            Chronoline\n          </h1>\n\n          {/* Компактные элементы управления */}\n          <div style={{\n            display: 'flex',\n            gap: '0.5rem',\n            alignItems: 'center',\n            flexWrap: 'wrap',\n            justifyContent: 'center'\n          }}>\n            {/* Переключатель маркеров */}\n            <div style={{ \n              display: 'flex', \n              alignItems: 'center', \n              gap: '0.3rem',\n              padding: '0.3rem 0.6rem',\n              borderRadius: '6px',\n              background: filters.showAchievements ? 'rgba(255, 255, 255, 0.1)' : 'rgba(255, 255, 255, 0.05)',\n              border: `1px solid ${filters.showAchievements ? 'rgba(255, 255, 255, 0.2)' : 'rgba(255, 255, 255, 0.1)'}`,\n              transition: 'all 0.2s ease',\n              cursor: 'pointer'\n            }}\n            onClick={() => setFilters(prev => ({ ...prev, showAchievements: !prev.showAchievements }))}\n            title={filters.showAchievements ? 'Скрыть маркеры достижений' : 'Показать маркеры достижений'}\n            >\n              <AchievementMarker isActive={filters.showAchievements} />\n            </div>\n\n            {/* Переключатель группировки */}\n            <GroupingToggle \n              groupingType={groupingType}\n              onGroupingChange={setGroupingType}\n            />\n\n            {/* Компактные фильтры */}\n            <div style={{\n              display: 'flex',\n              gap: '0.3rem',\n              alignItems: 'center',\n              flexWrap: 'wrap'\n            }}>\n              {/* Фильтр по категориям */}\n              <FilterDropdown\n                title=\"🎭\"\n                items={allCategories}\n                selectedItems={filters.categories}\n                onSelectionChange={(categories) => setFilters(prev => ({ ...prev, categories }))}\n                getItemColor={getCategoryColor}\n                icon={\n                  <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n                  </svg>\n                }\n              />\n              \n              {/* Фильтр по странам */}\n              <FilterDropdown\n                title=\"🌍\"\n                items={allCountries}\n                selectedItems={filters.countries}\n                onSelectionChange={(countries) => setFilters(prev => ({ ...prev, countries }))}\n                icon={\n                  <svg width=\"12\" height=\"12\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n                  </svg>\n                }\n              />\n              \n              {/* Фильтр по годам */}\n              <div style={{\n                display: 'flex',\n                gap: '0.2rem',\n                alignItems: 'center'\n              }}>\n                <input\n                  type=\"number\"\n                  value={yearInputs.start}\n                  onChange={(e) => setYearInputs(prev => ({ ...prev, start: e.target.value }))}\n                  onBlur={(e) => applyYearFilter('start', e.target.value)}\n                  onKeyPress={(e) => handleYearKeyPress('start', e)}\n                  placeholder=\"От\"\n                  style={{\n                    width: '50px',\n                    padding: '0.2rem 0.3rem',\n                    border: '1px solid rgba(139, 69, 19, 0.3)',\n                    borderRadius: '3px',\n                    background: 'rgba(44, 24, 16, 0.8)',\n                    color: '#f4e4c1',\n                    fontSize: '0.6rem',\n                    textAlign: 'center'\n                  }}\n                />\n                <span style={{ fontSize: '0.6rem', color: '#f4e4c1' }}>-</span>\n                <input\n                  type=\"number\"\n                  value={yearInputs.end}\n                  onChange={(e) => setYearInputs(prev => ({ ...prev, end: e.target.value }))}\n                  onBlur={(e) => applyYearFilter('end', e.target.value)}\n                  onKeyPress={(e) => handleYearKeyPress('end', e)}\n                  placeholder=\"До\"\n                  style={{\n                    width: '50px',\n                    padding: '0.2rem 0.3rem',\n                    border: '1px solid rgba(139, 69, 19, 0.3)',\n                    borderRadius: '3px',\n                    background: 'rgba(44, 24, 16, 0.8)',\n                    color: '#f4e4c1',\n                    fontSize: '0.6rem',\n                    textAlign: 'center'\n                  }}\n                />\n              </div>\n              \n              {/* Кнопка сброса */}\n              {(filters.categories.length > 0 || filters.countries.length > 0 || \n                yearInputs.start !== '-800' || yearInputs.end !== '2000') && (\n                <button\n                  onClick={resetAllFilters}\n                  style={{\n                    padding: '0.2rem 0.4rem',\n                    background: 'rgba(231, 76, 60, 0.2)',\n                    border: '1px solid rgba(231, 76, 60, 0.4)',\n                    borderRadius: '3px',\n                    color: '#e74c3c',\n                    fontSize: '0.6rem',\n                    cursor: 'pointer',\n                    transition: 'all 0.2s ease'\n                  }}\n                  title=\"Сбросить все фильтры\"\n                >\n                  ✕\n                </button>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Выпадающая панель фильтров */}\n        {showFilters && (\n          <div style={{\n            marginTop: '0.75rem',\n            padding: '0.75rem',\n            background: 'rgba(44, 24, 16, 0.9)',\n            borderRadius: '8px',\n            border: '1px solid rgba(139, 69, 19, 0.3)',\n            backdropFilter: 'blur(10px)',\n            animation: 'slideDown 0.3s ease'\n          }}>\n            <div style={{\n              display: 'grid',\n              gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))',\n              gap: '1rem',\n              alignItems: 'start'\n            }}>\n              {/* Фильтр по категориям */}\n              <div>\n                <h3 style={{ \n                  fontSize: '0.8rem', \n                  color: '#f4e4c1', \n                  margin: '0 0 0.5rem 0',\n                  fontWeight: 'bold'\n                }}>\n                  Род деятельности\n                </h3>\n                <FilterDropdown\n                  title=\"Выбрать категории\"\n                  items={allCategories}\n                  selectedItems={filters.categories}\n                  onSelectionChange={(categories) => setFilters(prev => ({ ...prev, categories }))}\n                  getItemColor={getCategoryColor}\n                  icon={\n                    <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M12 2l3.09 6.26L22 9.27l-5 4.87 1.18 6.88L12 17.77l-6.18 3.25L7 14.14 2 9.27l6.91-1.01L12 2z\"/>\n                    </svg>\n                  }\n                />\n              </div>\n\n              {/* Фильтр по странам */}\n              <div>\n                <h3 style={{ \n                  fontSize: '0.8rem', \n                  color: '#f4e4c1', \n                  margin: '0 0 0.5rem 0',\n                  fontWeight: 'bold'\n                }}>\n                  Страна происхождения\n                </h3>\n                <FilterDropdown\n                  title=\"Выбрать страны\"\n                  items={allCountries}\n                  selectedItems={filters.countries}\n                  onSelectionChange={(countries) => setFilters(prev => ({ ...prev, countries }))}\n                  icon={\n                    <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                      <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"/>\n                    </svg>\n                  }\n                />\n              </div>\n\n              {/* Фильтр по годам */}\n              <div>\n                <h3 style={{ \n                  fontSize: '0.8rem', \n                  color: '#f4e4c1', \n                  margin: '0 0 0.5rem 0',\n                  fontWeight: 'bold'\n                }}>\n                  Временной период\n                </h3>\n                <div style={{ \n                  display: 'flex', \n                  gap: '0.5rem', \n                  alignItems: 'center',\n                  flexWrap: 'wrap'\n                }}>\n                  <div>\n                    <label style={{ fontSize: '0.7rem', display: 'block', marginBottom: '0.2rem', color: '#f4e4c1' }}>\n                      От:\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={yearInputs.start}\n                      onChange={(e) => setYearInputs(prev => ({ ...prev, start: e.target.value }))}\n                      onBlur={(e) => applyYearFilter('start', e.target.value)}\n                      onKeyPress={(e) => handleYearKeyPress('start', e)}\n                      style={{\n                        width: '80px',\n                        padding: '0.3rem',\n                        border: '1px solid rgba(139, 69, 19, 0.5)',\n                        borderRadius: '4px',\n                        background: 'rgba(44, 24, 16, 0.8)',\n                        color: '#f4e4c1',\n                        fontSize: '0.7rem'\n                      }}\n                    />\n                  </div>\n                  <div>\n                    <label style={{ fontSize: '0.7rem', display: 'block', marginBottom: '0.2rem', color: '#f4e4c1' }}>\n                      До:\n                    </label>\n                    <input\n                      type=\"number\"\n                      value={yearInputs.end}\n                      onChange={(e) => setYearInputs(prev => ({ ...prev, end: e.target.value }))}\n                      onBlur={(e) => applyYearFilter('end', e.target.value)}\n                      onKeyPress={(e) => handleYearKeyPress('end', e)}\n                      style={{\n                        width: '80px',\n                        padding: '0.3rem',\n                        border: '1px solid rgba(139, 69, 19, 0.5)',\n                        borderRadius: '4px',\n                        background: 'rgba(44, 24, 16, 0.8)',\n                        color: '#f4e4c1',\n                        fontSize: '0.7rem'\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n\n              {/* Кнопка сброса */}\n              <div style={{ display: 'flex', alignItems: 'end' }}>\n                <button\n                  onClick={resetAllFilters}\n                  style={{\n                    padding: '0.4rem 0.8rem',\n                    background: 'linear-gradient(135deg, #95a5a6 0%, #7f8c8d 100%)',\n                    border: 'none',\n                    borderRadius: '4px',\n                    color: 'white',\n                    fontSize: '0.7rem',\n                    cursor: 'pointer',\n                    transition: 'all 0.2s ease'\n                  }}\n                >\n                  Сбросить все\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </header>\n      \n      <main className=\"app-main\">\n        {isLoading && (\n          <div className=\"loading-overlay\">\n            <div className=\"spinner\"></div>\n            <span>Загрузка данных...</span>\n          </div>\n        )}\n        {/* Временная линия на весь экран */}\n        <div className=\"timeline-container\" style={{ \n          position: 'relative', \n          height: 'calc(100vh - 100px)',\n          overflow: 'auto',\n          padding: '1rem 0 2rem 0'\n        }}>\n\n          {/* Разноцветная заливка веков */}\n          <div style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 1\n          }}>\n            {centuryBoundaries.map((year, index) => {\n              const nextYear = centuryBoundaries[index + 1] || (year + 100)\n              const startPos = getPosition(year)\n              const endPos = getPosition(nextYear)\n              const width = endPos - startPos\n\n              // Вычисляем век на основе центра года в столетии\n              const centerYear = year + 50\n              const centuryNumber = getCenturyNumber(centerYear)\n              // Для отрицательных веков добавляем знак минус\n              const isNegativeCentury = year < 0\n              const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber)\n              \n              return (\n                <div key={`century-bg-${year}`} style={{\n                  position: 'absolute',\n                  left: `${startPos}px`,\n                  width: `${width}px`,\n                  height: '100%',\n                  background: getCenturyColor(year),\n                  opacity: 0.3,\n                  zIndex: 1\n                }}>\n                  {/* Римская цифра века в центре */}\n                  <div className=\"century-label\" style={{\n                    position: 'absolute',\n                    top: '50%',\n                    left: '50%',\n                    transform: 'translate(-50%, -50%)',\n                    fontSize: '2rem',\n                    fontWeight: 'bold',\n                    color: 'rgba(244, 228, 193, 0.6)',\n                    textShadow: '2px 2px 4px rgba(0, 0, 0, 0.8)',\n                    pointerEvents: 'none',\n                    zIndex: 2,\n                    fontFamily: 'serif'\n                  }}>\n                    {romanNumeral}\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n\n          {/* Границы веков на всю высоту */}\n          <div style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 5\n          }}>\n            {centuryBoundaries.map((year) => (\n              <div key={`century-line-${year}`} style={{\n                position: 'absolute',\n                left: `${getPosition(year)}px`,\n                width: '2px',\n                height: '100%',\n                background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                zIndex: 5\n              }} />\n            ))}\n          </div>\n\n          {/* Разделители групп */}\n          <div style={{\n            position: 'absolute',\n            top: '0',\n            left: '0',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 200}px`,\n            pointerEvents: 'none',\n            zIndex: 8\n          }}>\n            {categoryDividers.map((divider) => (\n              <div key={`category-divider-${divider.category}`} style={{\n                position: 'absolute',\n                top: `${divider.top}px`,\n                left: '0',\n                width: '100%',\n                height: '10px',\n                background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n                opacity: 0.6,\n                zIndex: 8\n              }}>\n                <div className=\"category-label\" style={{\n                  position: 'absolute',\n                  left: '20px',\n                  top: '50%',\n                  transform: 'translateY(-50%)',\n                  background: getGroupColor(divider.category),\n                  color: 'white',\n                  padding: '2px 8px',\n                  borderRadius: '4px',\n                  fontSize: '0.7rem',\n                  fontWeight: 'bold',\n                  whiteSpace: 'nowrap',\n                  zIndex: 9\n                }}>\n                  {divider.category}\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Полоски жизни */}\n          <div style={{ \n            position: 'relative',\n            width: `${timelineWidth}px`,\n            height: `${totalHeight + 60}px`,\n            zIndex: 10\n          }}>\n            {rowPlacement.map((row, rowIndex) => (\n              <div key={rowIndex} style={{\n                position: 'relative',\n                height: row.length === 0 ? '20px' : '60px',\n                marginBottom: row.length === 0 ? '0px' : '10px'\n              }}>\n                {row.map((person) => (\n                  <React.Fragment key={person.id}>\n                    {/* Годы жизни и правления над полоской */}\n                    <span style={{\n                      position: 'absolute',\n                      left: `${getPosition(person.birthYear)}px`,\n                      top: 0,\n                      fontSize: '11px',\n                      color: 'rgba(244, 228, 193, 0.6)',\n                      fontStyle: 'italic',\n                      fontWeight: 400,\n                      transform: 'translateX(-100%) translateY(-10px)'\n                    }}>{person.birthYear}</span>\n\n                    {person.reignStart && (\n                      <span className=\"reign-label\" style={{\n                        position: 'absolute',\n                        left: `${getPosition(person.reignStart)}px`,\n                        top: 0,\n                        fontSize: '11px',\n                        color: '#E57373', // Темно-красный\n                        fontStyle: 'italic',\n                        fontWeight: 'bold',\n                        transform: 'translateX(-100%) translateY(-22px)'\n                      }}>👑 {person.reignStart}</span>\n                    )}\n\n                    {person.reignEnd && (\n                      <span className=\"reign-label\" style={{\n                        position: 'absolute',\n                        left: `${getPosition(person.reignEnd)}px`,\n                        top: 0,\n                        fontSize: '11px',\n                        color: '#E57373', // Темно-красный\n                        fontStyle: 'italic',\n                        fontWeight: 'bold',\n                        transform: 'translateY(-22px)'\n                      }}>{person.reignEnd}</span>\n                    )}\n                    \n                    <span style={{\n                      position: 'absolute',\n                      left: `${getPosition(person.deathYear)}px`,\n                      top: 0,\n                      fontSize: '11px',\n                      color: 'rgba(244, 228, 193, 0.6)',\n                      fontStyle: 'italic',\n                      fontWeight: 400,\n                      transform: 'translateY(-10px)'\n                    }}>{person.deathYear}</span>\n\n                    {/* Маркеры ключевых достижений */}\n                    {filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3]\n                      .filter(year => year !== undefined && year !== null)\n                      .map((year, index) => {\n                        return (\n                          <div key={index} style={{\n                            position: 'absolute',\n                            left: `${getPosition(year as number)}px`,\n                            top: '-4px',\n                            width: '2px',\n                            height: '15px',\n                            backgroundColor: getCategoryColorDark(person.category),\n                            zIndex: activeAchievementMarker?.personId === person.id && activeAchievementMarker?.index === index ? 10 : 3,\n                            transform: 'translateX(-50%)',\n                            cursor: 'pointer',\n                            transition: 'all 0.2s ease'\n                          }}\n                          onMouseEnter={(e) => {\n                                                    e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                        e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n                            // Находим span внутри и обновляем его стили\n                            const span = e.currentTarget.querySelector('span');\n                            if (span) {\n                              span.style.backgroundColor = 'rgba(44, 24, 16, 0.95)';\n                                                          span.style.borderColor = getGroupColor(getPersonGroup(person));\n                            span.style.color = getGroupColor(getPersonGroup(person));\n                              span.style.fontSize = '9px';\n                              span.style.padding = '2px 4px';\n                              span.style.borderRadius = '3px';\n                            }\n                            \n                            // Устанавливаем активный маркер\n                            setActiveAchievementMarker({ personId: person.id, index });\n                            \n                            // Очищаем предыдущий таймер если он есть\n                            if (hoverTimerRef.current) {\n                              clearTimeout(hoverTimerRef.current);\n                            }\n                            \n                            // Запускаем таймер для показа tooltip\n                            hoverTimerRef.current = setTimeout(() => {\n                              setHoveredAchievement({ person, year: year as number, index });\n                              setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\n                              setShowAchievementTooltip(true);\n                            }, 500);\n                          }}\n                          onMouseLeave={(e) => {\n                            e.currentTarget.style.backgroundColor = getCategoryColorDark(person.category);\n                            e.currentTarget.style.boxShadow = 'none';\n                            // Возвращаем стили span к исходным\n                            const span = e.currentTarget.querySelector('span');\n                            if (span) {\n                              span.style.backgroundColor = 'rgba(44, 24, 16, 0.9)';\n                                                          span.style.borderColor = getGroupColorDark(getPersonGroup(person));\n                            span.style.color = getGroupColorDark(getPersonGroup(person));\n                              span.style.fontSize = '8px';\n                              span.style.padding = '1px 3px';\n                              span.style.borderRadius = '2px';\n                            }\n                            \n                            // Сбрасываем активный маркер\n                            setActiveAchievementMarker(null);\n                            \n                            // Очищаем таймер и скрываем tooltip\n                            if (hoverTimerRef.current) {\n                              clearTimeout(hoverTimerRef.current);\n                              hoverTimerRef.current = null;\n                            }\n                            setShowAchievementTooltip(false);\n                            setHoveredAchievement(null);\n                          }}\n                          onMouseMove={(e) => {\n                            setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\n                          }}\n                          onMouseOut={(e) => {\n                            // Дополнительная проверка на случай, если onMouseLeave не сработал\n                            if (!e.currentTarget.contains(e.relatedTarget as Node)) {\n                              setActiveAchievementMarker(null);\n                              if (hoverTimerRef.current) {\n                                clearTimeout(hoverTimerRef.current);\n                                hoverTimerRef.current = null;\n                              }\n                              setShowAchievementTooltip(false);\n                              setHoveredAchievement(null);\n                            }\n                          }}\n                          >\n                            <span style={{\n                              position: 'absolute',\n                              top: '-12px',\n                              left: '50%',\n                              transform: 'translateX(-50%)',\n                              fontSize: '8px',\n                              color: getGroupColorDark(getPersonGroup(person)),\n                              fontWeight: 'bold',\n                              whiteSpace: 'nowrap',\n                              backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                              padding: '1px 3px',\n                              borderRadius: '2px',\n                              border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                              transition: 'all 0.2s ease'\n                            }}>\n                              {year}\n                            </span>\n                          </div>\n                        );\n                      })}\n\n                    {/* полоса правления */}\n                    {person.reignStart && person.reignEnd && (\n                      <div style={{\n                        position: 'absolute',\n                        top: '-15px',\n                        left: `${getPosition(person.reignStart)}px`,\n                        width: `${getWidth(person.reignStart, person.reignEnd)}px`,\n                        height: '65px',\n                        backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                        pointerEvents: 'none',\n                        borderLeft: '2px solid #D32F2F',\n                        borderRight: '2px solid #D32F2F',\n                        borderRadius: '3px',\n                        zIndex: 1\n                      }} />\n                    )}\n\n                    <div\n                      className=\"life-bar\"\n                      style={{\n                        position: 'absolute',\n                        top: '10px',\n                        left: `${getPosition(person.birthYear)}px`,\n                        width: `${getWidth(person.birthYear, person.deathYear)}px`,\n                        height: '40px',\n                        background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                        borderRadius: '6px',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'center',\n                        padding: '0 12px',\n                        color: 'white',\n                        fontSize: '14px',\n                        fontWeight: 'bold',\n                        minWidth: '60px',\n                        boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                        border: '1.5px solid #a8926a',\n                        opacity: 1,\n                        zIndex: 5\n                      }}\n                      onMouseEnter={(e) => {\n                        e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)'\n                        e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)'\n                        setHoveredPerson(person)\n                        setMousePosition({ x: e.clientX, y: e.clientY })\n                        setTimeout(() => setShowTooltip(true), 300)\n                      }}\n                      onMouseLeave={(e) => {\n                        e.currentTarget.style.transform = 'translateY(0) scale(1)'\n                        e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)'\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)'\n                        setHoveredPerson(null)\n                        setShowTooltip(false)\n                      }}\n                      onMouseMove={(e) => {\n                        setMousePosition({ x: e.clientX, y: e.clientY })\n                      }}\n                    >\n                      <div style={{ display: 'flex', flexDirection: 'column', lineHeight: '1.2' }}>\n                        <span>{person.name}</span>\n                      </div>\n                    </div>\n                  </React.Fragment>\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n      </main>\n\n      {/* Всплывающее окно с информацией */}\n      {hoveredPerson && showTooltip && (\n        <div className=\"tooltip\" style={{ \n          position: 'fixed',\n          left: `${mousePosition.x + 15}px`,\n          top: `${mousePosition.y - 10}px`,\n          padding: '1rem',\n          zIndex: 1000,\n          maxWidth: '300px',\n          minWidth: '250px',\n          color: '#f4e4c1',\n          pointerEvents: 'none',\n          opacity: 0,\n          transform: 'translateY(10px) scale(0.95)',\n          animation: 'tooltipFadeIn 0.2s ease-out forwards'\n        }}>\n          {/* Фотография человека, если есть */}\n          {hoveredPerson.imageUrl && (\n            <div style={{ \n              marginBottom: '0.75rem',\n              textAlign: 'center'\n            }}>\n              <img \n                src={hoveredPerson.imageUrl} \n                alt={hoveredPerson.name}\n                style={{\n                  width: '80px',\n                  height: '80px',\n                  borderRadius: '50%',\n                  objectFit: 'cover',\n                  border: `2px solid ${getGroupColor(getPersonGroup(hoveredPerson))}`,\n                  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)'\n                }}\n                onError={(e) => {\n                  // Скрываем изображение если оно не загрузилось\n                  e.currentTarget.style.display = 'none';\n                }}\n              />\n            </div>\n          )}\n          \n          <h3 style={{ \n            margin: '0 0 0.5rem 0', \n                            color: getGroupColor(getPersonGroup(hoveredPerson)),\n            fontSize: '1.1rem',\n            fontWeight: 'bold'\n          }}>\n            {hoveredPerson.name}\n          </h3>\n          \n          <div style={{ fontSize: '0.85rem', lineHeight: '1.4' }}>\n            <p style={{ margin: '0.25rem 0', fontWeight: 'bold' }}>\n              {hoveredPerson.birthYear} - {hoveredPerson.deathYear}\n            </p>\n            <p style={{ margin: '0.25rem 0' }}>\n              <span style={{ color: getCategoryColor(hoveredPerson.category), fontWeight: 'bold' }}>\n                {hoveredPerson.category}\n              </span> • {hoveredPerson.country}\n            </p>\n            <p style={{ margin: '0.5rem 0', fontStyle: 'italic', opacity: 0.8 }}>\n              {hoveredPerson.description}\n            </p>\n            \n            {/* Ключевые достижения по годам */}\n            {filters.showAchievements && ([hoveredPerson.achievementYear1, hoveredPerson.achievementYear2, hoveredPerson.achievementYear3]\n              .filter(year => year !== undefined && year !== null).length > 0) && (\n              <div style={{ marginTop: '0.5rem' }}>\n                <strong style={{ fontSize: '0.8rem', color: getGroupColor(getPersonGroup(hoveredPerson)) }}>\n                  🎯 Ключевые достижения:\n                </strong>\n                <div style={{ \n                  margin: '0.25rem 0 0 0',\n                  fontSize: '0.8rem'\n                }}>\n                  {[hoveredPerson.achievementYear1, hoveredPerson.achievementYear2, hoveredPerson.achievementYear3]\n                    .filter(year => year !== undefined && year !== null)\n                    .map((year, index) => (\n                      <div key={index} style={{ \n                        marginBottom: '0.1rem',\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: '0.5rem'\n                      }}>\n                        <span style={{ \n                          color: getGroupColor(getPersonGroup(hoveredPerson)),\n                          fontWeight: 'bold',\n                          fontSize: '0.75rem'\n                        }}>\n                          {year}\n                        </span>\n                        <span style={{ fontSize: '0.75rem' }}>\n                          {hoveredPerson.achievements[index] || 'Ключевое достижение'}\n                        </span>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            )}\n\n\n          </div>\n        </div>\n      )}\n\n      {/* Всплывающее окно для достижений */}\n      {hoveredAchievement && showAchievementTooltip && (\n        <div className=\"achievement-tooltip\" style={{ \n          position: 'fixed',\n          left: `${achievementTooltipPosition.x + 15}px`,\n          top: `${achievementTooltipPosition.y - 10}px`,\n          padding: '0.75rem',\n          zIndex: 1001,\n          maxWidth: '250px',\n          minWidth: '200px',\n          color: '#f4e4c1',\n          pointerEvents: 'none',\n          opacity: 0,\n          transform: 'translateY(10px) scale(0.95)',\n          animation: 'tooltipFadeIn 0.2s ease-out forwards',\n          backgroundColor: 'rgba(44, 24, 16, 0.95)',\n          borderRadius: '6px',\n                          border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)'\n        }}>\n          <div style={{ fontSize: '0.85rem', lineHeight: '1.4' }}>\n            {/* Фотография человека, если есть */}\n            {hoveredAchievement.person.imageUrl && (\n              <div style={{ \n                marginBottom: '0.5rem',\n                textAlign: 'center'\n              }}>\n                <img \n                  src={hoveredAchievement.person.imageUrl} \n                  alt={hoveredAchievement.person.name}\n                  style={{\n                    width: '50px',\n                    height: '50px',\n                    borderRadius: '50%',\n                    objectFit: 'cover',\n                    border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\n                    boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)'\n                  }}\n                  onError={(e) => {\n                    // Скрываем изображение если оно не загрузилось\n                    e.currentTarget.style.display = 'none';\n                  }}\n                />\n              </div>\n            )}\n            \n            <h4 style={{ \n              margin: '0 0 0.5rem 0', \n              color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\n              fontSize: '1rem',\n              fontWeight: 'bold'\n            }}>\n              {hoveredAchievement.person.name}\n            </h4>\n            \n            <p style={{ \n              margin: '0.25rem 0', \n              fontWeight: 'bold',\n              color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\n              fontSize: '0.9rem'\n            }}>\n              🎯 {hoveredAchievement.year}\n            </p>\n            \n            <p style={{ \n              margin: '0.25rem 0', \n              fontSize: '0.8rem',\n              fontStyle: 'italic'\n            }}>\n              {hoveredAchievement.person.achievements[hoveredAchievement.index] || 'Ключевое достижение'}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}