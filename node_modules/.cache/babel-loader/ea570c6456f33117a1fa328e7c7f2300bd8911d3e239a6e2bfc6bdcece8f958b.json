{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const Tooltips=_ref=>{let{hoveredPerson,showTooltip,mousePosition,hoveredAchievement,showAchievementTooltip,achievementTooltipPosition,getGroupColor,getPersonGroup,getCategoryColor}=_ref;return/*#__PURE__*/_jsxs(_Fragment,{children:[hoveredPerson&&showTooltip&&/*#__PURE__*/_jsxs(\"div\",{className:\"tooltip\",style:{position:'fixed',left:`${mousePosition.x+15}px`,top:`${mousePosition.y-10}px`,padding:'1rem',zIndex:1000,maxWidth:'300px',minWidth:'250px',color:'#f4e4c1',pointerEvents:'none',opacity:0,transform:'translateY(10px) scale(0.95)',animation:'tooltipFadeIn 0.2s ease-out forwards'},children:[hoveredPerson.imageUrl&&/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'0.75rem',textAlign:'center'},children:/*#__PURE__*/_jsx(\"img\",{src:hoveredPerson.imageUrl,alt:hoveredPerson.name,style:{width:'80px',height:'80px',borderRadius:'50%',objectFit:'cover',border:`2px solid ${getGroupColor(getPersonGroup(hoveredPerson))}`,boxShadow:'0 2px 8px rgba(0, 0, 0, 0.3)'},onError:e=>{// Скрываем изображение если оно не загрузилось\ne.currentTarget.style.display='none';}})}),/*#__PURE__*/_jsx(\"h3\",{style:{margin:'0 0 0.5rem 0',color:getGroupColor(getPersonGroup(hoveredPerson)),fontSize:'1.1rem',fontWeight:'bold'},children:hoveredPerson.name}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'0.85rem',lineHeight:'1.4'},children:[/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0.25rem 0',fontWeight:'bold'},children:[hoveredPerson.birthYear,\" - \",hoveredPerson.deathYear]}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0.25rem 0'},children:[/*#__PURE__*/_jsx(\"span\",{style:{color:getCategoryColor(hoveredPerson.category),fontWeight:'bold'},children:hoveredPerson.category}),\" \\u2022 \",hoveredPerson.country]}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'0.5rem 0',fontStyle:'italic',opacity:0.8},children:hoveredPerson.description})]})]}),hoveredAchievement&&showAchievementTooltip&&/*#__PURE__*/_jsx(\"div\",{className:\"achievement-tooltip\",style:{position:'fixed',left:`${achievementTooltipPosition.x+15}px`,top:`${achievementTooltipPosition.y-10}px`,padding:'0.75rem',zIndex:1001,maxWidth:'250px',minWidth:'200px',color:'#f4e4c1',pointerEvents:'none',opacity:0,transform:'translateY(10px) scale(0.95)',animation:'tooltipFadeIn 0.2s ease-out forwards',backgroundColor:'rgba(44, 24, 16, 0.95)',borderRadius:'6px',border:`2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,boxShadow:'0 4px 12px rgba(0, 0, 0, 0.3)'},children:/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'0.85rem',lineHeight:'1.4'},children:[hoveredAchievement.person.imageUrl&&/*#__PURE__*/_jsx(\"div\",{style:{marginBottom:'0.5rem',textAlign:'center'},children:/*#__PURE__*/_jsx(\"img\",{src:hoveredAchievement.person.imageUrl,alt:hoveredAchievement.person.name,style:{width:'50px',height:'50px',borderRadius:'50%',objectFit:'cover',border:`2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,boxShadow:'0 2px 6px rgba(0, 0, 0, 0.3)'},onError:e=>{// Скрываем изображение если оно не загрузилось\ne.currentTarget.style.display='none';}})}),/*#__PURE__*/_jsx(\"h4\",{style:{margin:'0 0 0.5rem 0',color:getGroupColor(getPersonGroup(hoveredAchievement.person)),fontSize:'1rem',fontWeight:'bold'},children:hoveredAchievement.person.name}),/*#__PURE__*/_jsxs(\"p\",{style:{margin:'0.25rem 0',fontWeight:'bold',color:getGroupColor(getPersonGroup(hoveredAchievement.person)),fontSize:'0.9rem'},children:[\"\\uD83C\\uDFAF \",hoveredAchievement.year]}),/*#__PURE__*/_jsx(\"p\",{style:{margin:'0.25rem 0',fontSize:'0.8rem',fontStyle:'italic'},children:hoveredAchievement.person.achievements[hoveredAchievement.index]||'Ключевое достижение'})]})})]});};","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Tooltips","_ref","hoveredPerson","showTooltip","mousePosition","hoveredAchievement","showAchievementTooltip","achievementTooltipPosition","getGroupColor","getPersonGroup","getCategoryColor","children","className","style","position","left","x","top","y","padding","zIndex","maxWidth","minWidth","color","pointerEvents","opacity","transform","animation","imageUrl","marginBottom","textAlign","src","alt","name","width","height","borderRadius","objectFit","border","boxShadow","onError","e","currentTarget","display","margin","fontSize","fontWeight","lineHeight","birthYear","deathYear","category","country","fontStyle","description","backgroundColor","person","year","achievements","index"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/components/Tooltips.tsx"],"sourcesContent":["import React from 'react'\r\nimport { Person } from '../types'\r\n\r\ninterface TooltipsProps {\r\n  hoveredPerson: Person | null\r\n  showTooltip: boolean\r\n  mousePosition: { x: number; y: number }\r\n  hoveredAchievement: { person: Person; year: number; index: number } | null\r\n  showAchievementTooltip: boolean\r\n  achievementTooltipPosition: { x: number; y: number }\r\n  getGroupColor: (groupName: string) => string\r\n  getPersonGroup: (person: Person) => string\r\n  getCategoryColor: (category: string) => string\r\n}\r\n\r\nexport const Tooltips: React.FC<TooltipsProps> = ({\r\n  hoveredPerson,\r\n  showTooltip,\r\n  mousePosition,\r\n  hoveredAchievement,\r\n  showAchievementTooltip,\r\n  achievementTooltipPosition,\r\n  getGroupColor,\r\n  getPersonGroup,\r\n  getCategoryColor\r\n}) => {\r\n  return (\r\n    <>\r\n      {/* Всплывающее окно с информацией */}\r\n      {hoveredPerson && showTooltip && (\r\n        <div className=\"tooltip\" style={{ \r\n          position: 'fixed',\r\n          left: `${mousePosition.x + 15}px`,\r\n          top: `${mousePosition.y - 10}px`,\r\n          padding: '1rem',\r\n          zIndex: 1000,\r\n          maxWidth: '300px',\r\n          minWidth: '250px',\r\n          color: '#f4e4c1',\r\n          pointerEvents: 'none',\r\n          opacity: 0,\r\n          transform: 'translateY(10px) scale(0.95)',\r\n          animation: 'tooltipFadeIn 0.2s ease-out forwards'\r\n        }}>\r\n          {/* Фотография человека, если есть */}\r\n          {hoveredPerson.imageUrl && (\r\n            <div style={{ \r\n              marginBottom: '0.75rem',\r\n              textAlign: 'center'\r\n            }}>\r\n              <img \r\n                src={hoveredPerson.imageUrl} \r\n                alt={hoveredPerson.name}\r\n                style={{\r\n                  width: '80px',\r\n                  height: '80px',\r\n                  borderRadius: '50%',\r\n                  objectFit: 'cover',\r\n                  border: `2px solid ${getGroupColor(getPersonGroup(hoveredPerson))}`,\r\n                  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)'\r\n                }}\r\n                onError={(e) => {\r\n                  // Скрываем изображение если оно не загрузилось\r\n                  e.currentTarget.style.display = 'none';\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          \r\n          <h3 style={{ \r\n            margin: '0 0 0.5rem 0', \r\n            color: getGroupColor(getPersonGroup(hoveredPerson)),\r\n            fontSize: '1.1rem',\r\n            fontWeight: 'bold'\r\n          }}>\r\n            {hoveredPerson.name}\r\n          </h3>\r\n          \r\n          <div style={{ fontSize: '0.85rem', lineHeight: '1.4' }}>\r\n            <p style={{ margin: '0.25rem 0', fontWeight: 'bold' }}>\r\n              {hoveredPerson.birthYear} - {hoveredPerson.deathYear}\r\n            </p>\r\n            <p style={{ margin: '0.25rem 0' }}>\r\n              <span style={{ color: getCategoryColor(hoveredPerson.category), fontWeight: 'bold' }}>\r\n                {hoveredPerson.category}\r\n              </span> • {hoveredPerson.country}\r\n            </p>\r\n            <p style={{ margin: '0.5rem 0', fontStyle: 'italic', opacity: 0.8 }}>\r\n              {hoveredPerson.description}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Всплывающее окно для достижений */}\r\n      {hoveredAchievement && showAchievementTooltip && (\r\n        <div className=\"achievement-tooltip\" style={{ \r\n          position: 'fixed',\r\n          left: `${achievementTooltipPosition.x + 15}px`,\r\n          top: `${achievementTooltipPosition.y - 10}px`,\r\n          padding: '0.75rem',\r\n          zIndex: 1001,\r\n          maxWidth: '250px',\r\n          minWidth: '200px',\r\n          color: '#f4e4c1',\r\n          pointerEvents: 'none',\r\n          opacity: 0,\r\n          transform: 'translateY(10px) scale(0.95)',\r\n          animation: 'tooltipFadeIn 0.2s ease-out forwards',\r\n          backgroundColor: 'rgba(44, 24, 16, 0.95)',\r\n          borderRadius: '6px',\r\n          border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\r\n          boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)'\r\n        }}>\r\n          <div style={{ fontSize: '0.85rem', lineHeight: '1.4' }}>\r\n            {/* Фотография человека, если есть */}\r\n            {hoveredAchievement.person.imageUrl && (\r\n              <div style={{ \r\n                marginBottom: '0.5rem',\r\n                textAlign: 'center'\r\n              }}>\r\n                <img \r\n                  src={hoveredAchievement.person.imageUrl} \r\n                  alt={hoveredAchievement.person.name}\r\n                  style={{\r\n                    width: '50px',\r\n                    height: '50px',\r\n                    borderRadius: '50%',\r\n                    objectFit: 'cover',\r\n                    border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\r\n                    boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)'\r\n                  }}\r\n                  onError={(e) => {\r\n                    // Скрываем изображение если оно не загрузилось\r\n                    e.currentTarget.style.display = 'none';\r\n                  }}\r\n                />\r\n              </div>\r\n            )}\r\n            \r\n            <h4 style={{ \r\n              margin: '0 0 0.5rem 0', \r\n              color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\r\n              fontSize: '1rem',\r\n              fontWeight: 'bold'\r\n            }}>\r\n              {hoveredAchievement.person.name}\r\n            </h4>\r\n            \r\n            <p style={{ \r\n              margin: '0.25rem 0', \r\n              fontWeight: 'bold',\r\n              color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\r\n              fontSize: '0.9rem'\r\n            }}>\r\n              🎯 {hoveredAchievement.year}\r\n            </p>\r\n            \r\n            <p style={{ \r\n              margin: '0.25rem 0', \r\n              fontSize: '0.8rem',\r\n              fontStyle: 'italic'\r\n            }}>\r\n              {hoveredAchievement.person.achievements[hoveredAchievement.index] || 'Ключевое достижение'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}