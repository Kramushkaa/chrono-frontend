{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selecty\\\\Documents\\\\PetProjects\\\\chronoline-frontend\\\\src\\\\components\\\\Tooltips.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useMobile } from '../hooks/useMobile';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Tooltips = ({\n  hoveredPerson,\n  showTooltip,\n  mousePosition,\n  hoveredAchievement,\n  showAchievementTooltip,\n  achievementTooltipPosition,\n  getGroupColor,\n  getPersonGroup,\n  getCategoryColor\n}) => {\n  _s();\n  const isMobile = useMobile();\n\n  // Функция для рендеринга achievement tooltip\n  const renderAchievementTooltip = () => {\n    console.log('renderAchievementTooltip called:', {\n      hoveredAchievement: !!hoveredAchievement,\n      showAchievementTooltip,\n      achievementTooltipPosition\n    });\n    if (!hoveredAchievement || !showAchievementTooltip) {\n      console.log('Tooltip not rendered: missing data');\n      return null;\n    }\n    const tooltipStyle = isMobile ? {\n      position: 'fixed',\n      left: '50%',\n      top: '50%',\n      transform: 'translate(-50%, -50%)',\n      padding: '1rem',\n      zIndex: 1002,\n      maxWidth: '90vw',\n      minWidth: '200px',\n      color: '#f4e4c1',\n      pointerEvents: 'auto',\n      opacity: 0,\n      animation: 'tooltipFadeIn 0.2s ease-out forwards',\n      backgroundColor: 'rgba(44, 24, 16, 0.98)',\n      borderRadius: '12px',\n      border: '2px solid rgba(244, 228, 193, 0.3)',\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.5)'\n    } : {\n      position: 'fixed',\n      left: `${achievementTooltipPosition.x}px`,\n      top: `${achievementTooltipPosition.y}px`,\n      padding: '0.75rem',\n      zIndex: 1001,\n      maxWidth: '250px',\n      minWidth: '200px',\n      color: '#f4e4c1',\n      pointerEvents: 'none',\n      opacity: 1,\n      // Убираем opacity: 0, чтобы tooltip был видим сразу\n      transform: 'none',\n      // Убираем transform, чтобы tooltip не был смещен\n      // Принудительно переопределяем CSS стили\n      display: 'block !important',\n      background: 'rgba(44, 24, 16, 0.95) !important',\n      border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))} !important`,\n      borderRadius: '6px !important',\n      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3) !important'\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"achievement-tooltip\",\n      id: \"achievement-tooltip\",\n      role: \"tooltip\",\n      \"aria-label\": `Достижение ${hoveredAchievement.person.name} в ${hoveredAchievement.year} году`,\n      style: tooltipStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.85rem',\n          lineHeight: '1.4'\n        },\n        children: [hoveredAchievement.person.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '0.5rem',\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: hoveredAchievement.person.imageUrl,\n            alt: hoveredAchievement.person.name,\n            style: {\n              width: '50px',\n              height: '50px',\n              borderRadius: '50%',\n              objectFit: 'cover',\n              border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\n              boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)'\n            },\n            onError: e => {\n              // Скрываем изображение если оно не загрузилось\n              e.currentTarget.style.display = 'none';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          style: {\n            margin: '0 0 0.5rem 0',\n            color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\n            fontSize: '1rem',\n            fontWeight: 'bold'\n          },\n          children: hoveredAchievement.person.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0',\n            fontWeight: 'bold',\n            color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\n            fontSize: '0.9rem'\n          },\n          children: [\"\\uD83C\\uDFAF \", hoveredAchievement.year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0',\n            fontSize: '0.8rem',\n            fontStyle: 'italic'\n          },\n          children: hoveredAchievement.person.achievements[hoveredAchievement.index] || 'Ключевое достижение'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), isMobile && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            // Закрываем tooltip\n            if (typeof window !== 'undefined' && window.dispatchEvent) {\n              window.dispatchEvent(new CustomEvent('closeAchievementTooltip'));\n            }\n          },\n          style: {\n            position: 'absolute',\n            top: '8px',\n            right: '8px',\n            background: 'rgba(244, 228, 193, 0.2)',\n            border: '1px solid rgba(244, 228, 193, 0.3)',\n            borderRadius: '50%',\n            width: '24px',\n            height: '24px',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            cursor: 'pointer',\n            color: '#f4e4c1',\n            fontSize: '12px',\n            fontWeight: 'bold'\n          },\n          \"aria-label\": \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isMobile && hoveredPerson && showTooltip && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      id: \"person-tooltip\",\n      role: \"tooltip\",\n      \"aria-label\": `Информация о ${hoveredPerson.name}`,\n      style: {\n        position: 'fixed',\n        left: `${mousePosition.x + 15}px`,\n        top: `${mousePosition.y - 10}px`,\n        padding: '1rem',\n        zIndex: 1000,\n        maxWidth: '300px',\n        minWidth: '250px',\n        color: '#f4e4c1',\n        pointerEvents: 'none',\n        opacity: 0,\n        transform: 'translateY(10px) scale(0.95)',\n        animation: 'tooltipFadeIn 0.2s ease-out forwards'\n      },\n      children: [hoveredPerson.imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"person-image-container\",\n        style: {\n          marginBottom: '0.75rem',\n          textAlign: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: hoveredPerson.imageUrl,\n          alt: `Портрет ${hoveredPerson.name}`,\n          className: \"person-image\",\n          id: `person-image-${hoveredPerson.id}`,\n          style: {\n            width: '80px',\n            height: '80px',\n            borderRadius: '50%',\n            objectFit: 'cover',\n            border: `2px solid ${getGroupColor(getPersonGroup(hoveredPerson))}`,\n            boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)'\n          },\n          onError: e => {\n            // Скрываем изображение если оно не загрузилось\n            e.currentTarget.style.display = 'none';\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"person-name\",\n        id: `person-name-${hoveredPerson.id}`,\n        style: {\n          margin: '0 0 0.5rem 0',\n          color: getGroupColor(getPersonGroup(hoveredPerson)),\n          fontSize: '1.1rem',\n          fontWeight: 'bold'\n        },\n        children: hoveredPerson.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '0.85rem',\n          lineHeight: '1.4'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0',\n            fontWeight: 'bold'\n          },\n          children: [hoveredPerson.birthYear, \" - \", hoveredPerson.deathYear]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.25rem 0'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: getCategoryColor(hoveredPerson.category),\n              fontWeight: 'bold'\n            },\n            children: hoveredPerson.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), \" \\u2022 \", hoveredPerson.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: '0.5rem 0',\n            fontStyle: 'italic',\n            opacity: 0.8\n          },\n          children: hoveredPerson.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), renderAchievementTooltip()]\n  }, void 0, true);\n};\n_s(Tooltips, \"mDTz/1/3lw+8ALGZO2u07zUf7H8=\", false, function () {\n  return [useMobile];\n});\n_c = Tooltips;\nvar _c;\n$RefreshReg$(_c, \"Tooltips\");","map":{"version":3,"names":["React","useMobile","jsxDEV","_jsxDEV","Fragment","_Fragment","Tooltips","hoveredPerson","showTooltip","mousePosition","hoveredAchievement","showAchievementTooltip","achievementTooltipPosition","getGroupColor","getPersonGroup","getCategoryColor","_s","isMobile","renderAchievementTooltip","console","log","tooltipStyle","position","left","top","transform","padding","zIndex","maxWidth","minWidth","color","pointerEvents","opacity","animation","backgroundColor","borderRadius","border","boxShadow","x","y","display","background","person","className","id","role","name","year","style","children","fontSize","lineHeight","imageUrl","marginBottom","textAlign","src","alt","width","height","objectFit","onError","e","currentTarget","fileName","_jsxFileName","lineNumber","columnNumber","margin","fontWeight","fontStyle","achievements","index","onClick","window","dispatchEvent","CustomEvent","right","alignItems","justifyContent","cursor","birthYear","deathYear","category","country","description","_c","$RefreshReg$"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/components/Tooltips.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useMobile } from '../hooks/useMobile'\r\nimport { Person } from '../types'\r\n\r\ninterface TooltipsProps {\r\n  hoveredPerson: Person | null\r\n  showTooltip: boolean\r\n  mousePosition: { x: number; y: number }\r\n  hoveredAchievement: { person: Person; year: number; index: number } | null\r\n  showAchievementTooltip: boolean\r\n  achievementTooltipPosition: { x: number; y: number }\r\n  getGroupColor: (groupName: string) => string\r\n  getPersonGroup: (person: Person) => string\r\n  getCategoryColor: (category: string) => string\r\n}\r\n\r\nexport const Tooltips: React.FC<TooltipsProps> = ({\r\n  hoveredPerson,\r\n  showTooltip,\r\n  mousePosition,\r\n  hoveredAchievement,\r\n  showAchievementTooltip,\r\n  achievementTooltipPosition,\r\n  getGroupColor,\r\n  getPersonGroup,\r\n  getCategoryColor\r\n}) => {\r\n  const isMobile = useMobile()\r\n\r\n  // Функция для рендеринга achievement tooltip\r\n  const renderAchievementTooltip = () => {\r\n    console.log('renderAchievementTooltip called:', {\r\n      hoveredAchievement: !!hoveredAchievement,\r\n      showAchievementTooltip,\r\n      achievementTooltipPosition\r\n    });\r\n    \r\n    if (!hoveredAchievement || !showAchievementTooltip) {\r\n      console.log('Tooltip not rendered: missing data');\r\n      return null;\r\n    }\r\n\r\n    const tooltipStyle = isMobile ? {\r\n      position: 'fixed' as const,\r\n      left: '50%',\r\n      top: '50%',\r\n      transform: 'translate(-50%, -50%)',\r\n      padding: '1rem',\r\n      zIndex: 1002,\r\n      maxWidth: '90vw',\r\n      minWidth: '200px',\r\n      color: '#f4e4c1',\r\n      pointerEvents: 'auto' as const,\r\n      opacity: 0,\r\n      animation: 'tooltipFadeIn 0.2s ease-out forwards',\r\n      backgroundColor: 'rgba(44, 24, 16, 0.98)',\r\n      borderRadius: '12px',\r\n      border: '2px solid rgba(244, 228, 193, 0.3)',\r\n      boxShadow: '0 8px 32px rgba(0, 0, 0, 0.5)'\r\n    } : {\r\n      position: 'fixed' as const,\r\n      left: `${achievementTooltipPosition.x}px`,\r\n      top: `${achievementTooltipPosition.y}px`,\r\n      padding: '0.75rem',\r\n      zIndex: 1001,\r\n      maxWidth: '250px',\r\n      minWidth: '200px',\r\n      color: '#f4e4c1',\r\n      pointerEvents: 'none' as const,\r\n      opacity: 1, // Убираем opacity: 0, чтобы tooltip был видим сразу\r\n      transform: 'none', // Убираем transform, чтобы tooltip не был смещен\r\n      // Принудительно переопределяем CSS стили\r\n      display: 'block !important',\r\n      background: 'rgba(44, 24, 16, 0.95) !important',\r\n      border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))} !important`,\r\n      borderRadius: '6px !important',\r\n      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3) !important'\r\n    }\r\n\r\n    return (\r\n      <div \r\n        className=\"achievement-tooltip\" \r\n        id=\"achievement-tooltip\"\r\n        role=\"tooltip\"\r\n        aria-label={`Достижение ${hoveredAchievement.person.name} в ${hoveredAchievement.year} году`}\r\n        style={tooltipStyle}\r\n      >\r\n        <div style={{ fontSize: '0.85rem', lineHeight: '1.4' }}>\r\n          {/* Фотография человека, если есть */}\r\n          {hoveredAchievement.person.imageUrl && (\r\n            <div style={{ \r\n              marginBottom: '0.5rem',\r\n              textAlign: 'center'\r\n            }}>\r\n              <img \r\n                src={hoveredAchievement.person.imageUrl} \r\n                alt={hoveredAchievement.person.name}\r\n                style={{\r\n                  width: '50px',\r\n                  height: '50px',\r\n                  borderRadius: '50%',\r\n                  objectFit: 'cover',\r\n                  border: `2px solid ${getGroupColor(getPersonGroup(hoveredAchievement.person))}`,\r\n                  boxShadow: '0 2px 6px rgba(0, 0, 0, 0.3)'\r\n                }}\r\n                onError={(e) => {\r\n                  // Скрываем изображение если оно не загрузилось\r\n                  e.currentTarget.style.display = 'none';\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          \r\n          <h4 style={{ \r\n            margin: '0 0 0.5rem 0', \r\n            color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\r\n            fontSize: '1rem',\r\n            fontWeight: 'bold'\r\n          }}>\r\n            {hoveredAchievement.person.name}\r\n          </h4>\r\n          \r\n          <p style={{ \r\n            margin: '0.25rem 0', \r\n            fontWeight: 'bold',\r\n            color: getGroupColor(getPersonGroup(hoveredAchievement.person)),\r\n            fontSize: '0.9rem'\r\n          }}>\r\n            🎯 {hoveredAchievement.year}\r\n          </p>\r\n          \r\n          <p style={{ \r\n            margin: '0.25rem 0', \r\n            fontSize: '0.8rem',\r\n            fontStyle: 'italic'\r\n          }}>\r\n            {hoveredAchievement.person.achievements[hoveredAchievement.index] || 'Ключевое достижение'}\r\n          </p>\r\n          \r\n          {/* Кнопка закрытия для мобильных устройств */}\r\n          {isMobile && (\r\n            <button\r\n              onClick={() => {\r\n                // Закрываем tooltip\r\n                if (typeof window !== 'undefined' && window.dispatchEvent) {\r\n                  window.dispatchEvent(new CustomEvent('closeAchievementTooltip'));\r\n                }\r\n              }}\r\n              style={{\r\n                position: 'absolute',\r\n                top: '8px',\r\n                right: '8px',\r\n                background: 'rgba(244, 228, 193, 0.2)',\r\n                border: '1px solid rgba(244, 228, 193, 0.3)',\r\n                borderRadius: '50%',\r\n                width: '24px',\r\n                height: '24px',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                cursor: 'pointer',\r\n                color: '#f4e4c1',\r\n                fontSize: '12px',\r\n                fontWeight: 'bold'\r\n              }}\r\n              aria-label=\"Закрыть\"\r\n            >\r\n              ×\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* Всплывающее окно с информацией (только для десктопа) */}\r\n      {!isMobile && hoveredPerson && showTooltip && (\r\n        <div \r\n          className=\"tooltip\" \r\n          id=\"person-tooltip\"\r\n          role=\"tooltip\"\r\n          aria-label={`Информация о ${hoveredPerson.name}`}\r\n          style={{ \r\n            position: 'fixed',\r\n            left: `${mousePosition.x + 15}px`,\r\n            top: `${mousePosition.y - 10}px`,\r\n            padding: '1rem',\r\n            zIndex: 1000,\r\n            maxWidth: '300px',\r\n            minWidth: '250px',\r\n            color: '#f4e4c1',\r\n            pointerEvents: 'none',\r\n            opacity: 0,\r\n            transform: 'translateY(10px) scale(0.95)',\r\n            animation: 'tooltipFadeIn 0.2s ease-out forwards'\r\n          }}\r\n        >\r\n          {/* Фотография человека, если есть */}\r\n          {hoveredPerson.imageUrl && (\r\n            <div \r\n              className=\"person-image-container\"\r\n              style={{ \r\n                marginBottom: '0.75rem',\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              <img \r\n                src={hoveredPerson.imageUrl} \r\n                alt={`Портрет ${hoveredPerson.name}`}\r\n                className=\"person-image\"\r\n                id={`person-image-${hoveredPerson.id}`}\r\n                style={{\r\n                  width: '80px',\r\n                  height: '80px',\r\n                  borderRadius: '50%',\r\n                  objectFit: 'cover',\r\n                  border: `2px solid ${getGroupColor(getPersonGroup(hoveredPerson))}`,\r\n                  boxShadow: '0 2px 8px rgba(0, 0, 0, 0.3)'\r\n                }}\r\n                onError={(e) => {\r\n                  // Скрываем изображение если оно не загрузилось\r\n                  e.currentTarget.style.display = 'none';\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n          \r\n          <h3 \r\n            className=\"person-name\"\r\n            id={`person-name-${hoveredPerson.id}`}\r\n            style={{ \r\n              margin: '0 0 0.5rem 0', \r\n              color: getGroupColor(getPersonGroup(hoveredPerson)),\r\n              fontSize: '1.1rem',\r\n              fontWeight: 'bold'\r\n            }}\r\n          >\r\n            {hoveredPerson.name}\r\n          </h3>\r\n          \r\n          <div style={{ fontSize: '0.85rem', lineHeight: '1.4' }}>\r\n            <p style={{ margin: '0.25rem 0', fontWeight: 'bold' }}>\r\n              {hoveredPerson.birthYear} - {hoveredPerson.deathYear}\r\n            </p>\r\n            <p style={{ margin: '0.25rem 0' }}>\r\n              <span style={{ color: getCategoryColor(hoveredPerson.category), fontWeight: 'bold' }}>\r\n                {hoveredPerson.category}\r\n              </span> • {hoveredPerson.country}\r\n            </p>\r\n            <p style={{ margin: '0.5rem 0', fontStyle: 'italic', opacity: 0.8 }}>\r\n              {hoveredPerson.description}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Всплывающее окно для достижений */}\r\n      {renderAchievementTooltip()}\r\n    </>\r\n  )\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}