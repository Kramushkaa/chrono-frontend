{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef, useCallback, useEffect } from 'react';\nexport const useTimelineDrag = ({\n  timelineWidth,\n  containerWidth\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartX, setDragStartX] = useState(0);\n  const [dragStartY, setDragStartY] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const [scrollTop, setScrollTop] = useState(0);\n  const [isDraggingTimeline, setIsDraggingTimeline] = useState(false);\n  const timelineRef = useRef(null);\n  const dragStartTime = useRef(0);\n  const handleMouseDown = useCallback(e => {\n    var _timelineRef$current, _timelineRef$current2;\n    const target = e.target;\n    const isInteractive = target.closest('.life-bar') || target.closest('.achievement-marker') || target.closest('button') || target.closest('[role=\"button\"]');\n    if (isInteractive) return;\n    setIsDragging(true);\n    setDragStartX(e.clientX);\n    setDragStartY(e.clientY);\n    setScrollLeft(((_timelineRef$current = timelineRef.current) === null || _timelineRef$current === void 0 ? void 0 : _timelineRef$current.scrollLeft) || 0);\n    setScrollTop(((_timelineRef$current2 = timelineRef.current) === null || _timelineRef$current2 === void 0 ? void 0 : _timelineRef$current2.scrollTop) || 0);\n    dragStartTime.current = Date.now();\n    e.preventDefault();\n  }, []);\n  const handleMouseMove = useCallback(e => {\n    if (!isDragging) return;\n    const deltaX = e.clientX - dragStartX;\n    const deltaY = e.clientY - dragStartY;\n    const newScrollLeft = scrollLeft - deltaX;\n    const newScrollTop = scrollTop - deltaY;\n    if (timelineRef.current) {\n      timelineRef.current.scrollLeft = Math.max(0, newScrollLeft);\n      timelineRef.current.scrollTop = Math.max(0, newScrollTop);\n    }\n  }, [isDragging, dragStartX, dragStartY, scrollLeft, scrollTop]);\n  const handleMouseUp = useCallback(() => {\n    if (!isDragging) return;\n    const dragDuration = Date.now() - dragStartTime.current;\n    if (dragDuration < 200) {\n      setIsDraggingTimeline(false);\n    } else {\n      setIsDraggingTimeline(true);\n      setTimeout(() => setIsDraggingTimeline(false), 100);\n    }\n    setIsDragging(false);\n  }, [isDragging]);\n  const handleTouchStart = useCallback(e => {\n    var _timelineRef$current3, _timelineRef$current4;\n    const target = e.target;\n    const isInteractive = target.closest('.life-bar') || target.closest('.achievement-marker') || target.closest('button') || target.closest('[role=\"button\"]');\n    if (isInteractive) return;\n    setIsDragging(true);\n    setDragStartX(e.touches[0].clientX);\n    setDragStartY(e.touches[0].clientY);\n    setScrollLeft(((_timelineRef$current3 = timelineRef.current) === null || _timelineRef$current3 === void 0 ? void 0 : _timelineRef$current3.scrollLeft) || 0);\n    setScrollTop(((_timelineRef$current4 = timelineRef.current) === null || _timelineRef$current4 === void 0 ? void 0 : _timelineRef$current4.scrollTop) || 0);\n    dragStartTime.current = Date.now();\n  }, []);\n  const handleTouchMove = useCallback(e => {\n    if (!isDragging) return;\n    const deltaX = e.touches[0].clientX - dragStartX;\n    const deltaY = e.touches[0].clientY - dragStartY;\n    const newScrollLeft = scrollLeft - deltaX;\n    const newScrollTop = scrollTop - deltaY;\n    if (timelineRef.current) {\n      timelineRef.current.scrollLeft = Math.max(0, newScrollLeft);\n      timelineRef.current.scrollTop = Math.max(0, newScrollTop);\n    }\n  }, [isDragging, dragStartX, dragStartY, scrollLeft, scrollTop]);\n  const handleTouchEnd = useCallback(() => {\n    if (!isDragging) return;\n    const dragDuration = Date.now() - dragStartTime.current;\n    if (dragDuration < 200) {\n      setIsDraggingTimeline(false);\n    } else {\n      setIsDraggingTimeline(true);\n      setTimeout(() => setIsDraggingTimeline(false), 100);\n    }\n    setIsDragging(false);\n  }, [isDragging]);\n  useEffect(() => {\n    return () => {\n      setIsDragging(false);\n      setIsDraggingTimeline(false);\n    };\n  }, []);\n  return {\n    timelineRef,\n    isDragging,\n    isDraggingTimeline,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    handleTouchStart,\n    handleTouchMove,\n    handleTouchEnd\n  };\n};\n_s(useTimelineDrag, \"0FI1Fvs1zfssMAd0UGwsbxX8mSA=\");","map":{"version":3,"names":["useState","useRef","useCallback","useEffect","useTimelineDrag","timelineWidth","containerWidth","_s","isDragging","setIsDragging","dragStartX","setDragStartX","dragStartY","setDragStartY","scrollLeft","setScrollLeft","scrollTop","setScrollTop","isDraggingTimeline","setIsDraggingTimeline","timelineRef","dragStartTime","handleMouseDown","e","_timelineRef$current","_timelineRef$current2","target","isInteractive","closest","clientX","clientY","current","Date","now","preventDefault","handleMouseMove","deltaX","deltaY","newScrollLeft","newScrollTop","Math","max","handleMouseUp","dragDuration","setTimeout","handleTouchStart","_timelineRef$current3","_timelineRef$current4","touches","handleTouchMove","handleTouchEnd"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/hooks/useTimelineDrag.ts"],"sourcesContent":["import { useState, useRef, useCallback, useEffect } from 'react'\n\ninterface UseTimelineDragProps {\n  timelineWidth: number\n  containerWidth: number\n}\n\nexport const useTimelineDrag = ({ timelineWidth, containerWidth }: UseTimelineDragProps) => {\n  const [isDragging, setIsDragging] = useState(false)\n  const [dragStartX, setDragStartX] = useState(0)\n  const [dragStartY, setDragStartY] = useState(0)\n  const [scrollLeft, setScrollLeft] = useState(0)\n  const [scrollTop, setScrollTop] = useState(0)\n  const [isDraggingTimeline, setIsDraggingTimeline] = useState(false)\n  const timelineRef = useRef<HTMLDivElement>(null)\n  const dragStartTime = useRef<number>(0)\n\n  const handleMouseDown = useCallback((e: React.MouseEvent) => {\n    const target = e.target as HTMLElement\n    const isInteractive = target.closest('.life-bar') || \n                         target.closest('.achievement-marker') ||\n                         target.closest('button') ||\n                         target.closest('[role=\"button\"]')\n    \n    if (isInteractive) return\n\n    setIsDragging(true)\n    setDragStartX(e.clientX)\n    setDragStartY(e.clientY)\n    setScrollLeft(timelineRef.current?.scrollLeft || 0)\n    setScrollTop(timelineRef.current?.scrollTop || 0)\n    dragStartTime.current = Date.now()\n    e.preventDefault()\n  }, [])\n\n  const handleMouseMove = useCallback((e: React.MouseEvent) => {\n    if (!isDragging) return\n\n    const deltaX = e.clientX - dragStartX\n    const deltaY = e.clientY - dragStartY\n    const newScrollLeft = scrollLeft - deltaX\n    const newScrollTop = scrollTop - deltaY\n    \n    if (timelineRef.current) {\n      timelineRef.current.scrollLeft = Math.max(0, newScrollLeft)\n      timelineRef.current.scrollTop = Math.max(0, newScrollTop)\n    }\n  }, [isDragging, dragStartX, dragStartY, scrollLeft, scrollTop])\n\n  const handleMouseUp = useCallback(() => {\n    if (!isDragging) return\n\n    const dragDuration = Date.now() - dragStartTime.current\n    \n    if (dragDuration < 200) {\n      setIsDraggingTimeline(false)\n    } else {\n      setIsDraggingTimeline(true)\n      setTimeout(() => setIsDraggingTimeline(false), 100)\n    }\n\n    setIsDragging(false)\n  }, [isDragging])\n\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\n    const target = e.target as HTMLElement\n    const isInteractive = target.closest('.life-bar') || \n                         target.closest('.achievement-marker') ||\n                         target.closest('button') ||\n                         target.closest('[role=\"button\"]')\n    \n    if (isInteractive) return\n\n    setIsDragging(true)\n    setDragStartX(e.touches[0].clientX)\n    setDragStartY(e.touches[0].clientY)\n    setScrollLeft(timelineRef.current?.scrollLeft || 0)\n    setScrollTop(timelineRef.current?.scrollTop || 0)\n    dragStartTime.current = Date.now()\n  }, [])\n\n  const handleTouchMove = useCallback((e: React.TouchEvent) => {\n    if (!isDragging) return\n\n    const deltaX = e.touches[0].clientX - dragStartX\n    const deltaY = e.touches[0].clientY - dragStartY\n    const newScrollLeft = scrollLeft - deltaX\n    const newScrollTop = scrollTop - deltaY\n    \n    if (timelineRef.current) {\n      timelineRef.current.scrollLeft = Math.max(0, newScrollLeft)\n      timelineRef.current.scrollTop = Math.max(0, newScrollTop)\n    }\n  }, [isDragging, dragStartX, dragStartY, scrollLeft, scrollTop])\n\n  const handleTouchEnd = useCallback(() => {\n    if (!isDragging) return\n\n    const dragDuration = Date.now() - dragStartTime.current\n    \n    if (dragDuration < 200) {\n      setIsDraggingTimeline(false)\n    } else {\n      setIsDraggingTimeline(true)\n      setTimeout(() => setIsDraggingTimeline(false), 100)\n    }\n\n    setIsDragging(false)\n  }, [isDragging])\n\n  useEffect(() => {\n    return () => {\n      setIsDragging(false)\n      setIsDraggingTimeline(false)\n    }\n  }, [])\n\n  return {\n    timelineRef,\n    isDragging,\n    isDraggingTimeline,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    handleTouchStart,\n    handleTouchMove,\n    handleTouchEnd\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}