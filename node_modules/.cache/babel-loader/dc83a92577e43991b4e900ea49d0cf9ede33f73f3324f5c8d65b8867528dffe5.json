{"ast":null,"code":"import React,{useState,useEffect,useMemo,useCallback}from'react';import{Routes,Route,Navigate,useNavigate,useLocation}from'react-router-dom';import ProfilePage from'./pages/ProfilePage';import{ProtectedRoute}from'./components/ProtectedRoute';import{AppHeader}from'./components/AppHeader';import{Timeline}from'./components/Timeline';import{Tooltips}from'./components/Tooltips';import{MobilePersonPanel}from'./components/MobilePersonPanel';import{MainMenu}from'./components/MainMenu';import{AuthProvider,useAuth}from'./context';import{LoginForm}from'./components/Auth/LoginForm';import{RegisterForm}from'./components/Auth/RegisterForm';import{Profile}from'./components/Profile';import{DevAdminLogin}from'./components/Auth/DevAdminLogin';import{BackendInfo}from'./components/BackendInfo';import{useTimelineData}from'./hooks/useTimelineData';import{useFilters}from'./hooks/useFilters';import{useSlider}from'./hooks/useSlider';import{useTooltip}from'./hooks/useTooltip';import{useTimelineDrag}from'./hooks/useTimelineDrag';import{generateCenturyBoundaries,getFirstCountry}from'./utils/timelineUtils';import{getGroupColor,getGroupColorDark,getGroupColorMuted,getPersonGroup,sortGroupedData}from'./utils/groupingUtils';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AppInner(){const{isAuthenticated}=useAuth();const navigate=useNavigate();const location=useLocation();const isMenu=location.pathname==='/'||location.pathname==='/menu';const isTimeline=location.pathname==='/timeline';const[isScrolled,setIsScrolled]=useState(false);const[activeAchievementMarker,setActiveAchievementMarker]=useState(null);const[selectedPerson,setSelectedPerson]=useState(null);const[showControls,setShowControls]=useState(true);const{filters,setFilters,groupingType,setGroupingType,yearInputs,setYearInputs,applyYearFilter,handleYearKeyPress,resetAllFilters}=useFilters();const{persons,allCategories,allCountries,isLoading}=useTimelineData(filters,isTimeline);const{isDraggingSlider,handleSliderMouseDown,handleSliderMouseMove,handleSliderMouseUp}=useSlider();const{hoveredPerson,mousePosition,showTooltip,hoveredAchievement,achievementTooltipPosition,showAchievementTooltip,hoverTimerRef,handlePersonHover,handleAchievementHover}=useTooltip();// Добавляем обработчики событий мыши и touch\nuseEffect(()=>{if(!isDraggingSlider)return;const handleMouseMove=e=>handleSliderMouseMove(e,yearInputs,applyYearFilter,setYearInputs);const handleMouseUp=()=>handleSliderMouseUp();document.addEventListener('mousemove',handleMouseMove);document.addEventListener('mouseup',handleMouseUp);document.addEventListener('touchmove',handleMouseMove);document.addEventListener('touchend',handleMouseUp);return()=>{document.removeEventListener('mousemove',handleMouseMove);document.removeEventListener('mouseup',handleMouseUp);document.removeEventListener('touchmove',handleMouseMove);document.removeEventListener('touchend',handleMouseUp);};},[isDraggingSlider,handleSliderMouseMove,handleSliderMouseUp,yearInputs,applyYearFilter,setYearInputs]);const sortedData=sortGroupedData(persons,groupingType);useEffect(()=>{if(filters.hideEmptyCenturies&&sortedData.length>0){const effectiveMinYear=Math.min(...sortedData.map(p=>p.birthYear));const effectiveMaxYear=Math.max(...sortedData.map(p=>p.deathYear));const hasActiveFilters=filters.categories.length>0||filters.countries.length>0;let newTimeRange={...filters.timeRange};if(hasActiveFilters){newTimeRange={start:Math.max(filters.timeRange.start,effectiveMinYear),end:Math.min(filters.timeRange.end,effectiveMaxYear)};}else{newTimeRange=filters.timeRange;}if(newTimeRange.start!==filters.timeRange.start||newTimeRange.end!==filters.timeRange.end){setFilters(prev=>({...prev,timeRange:newTimeRange}));setYearInputs({start:newTimeRange.start.toString(),end:newTimeRange.end.toString()});}}},[filters.hideEmptyCenturies,sortedData,filters.categories,filters.countries,filters.timeRange,setFilters,setYearInputs]);useEffect(()=>{const handleScroll=()=>{const scrollTop=window.pageYOffset||document.documentElement.scrollTop;setIsScrolled(scrollTop>50);};window.addEventListener('scroll',handleScroll);return()=>window.removeEventListener('scroll',handleScroll);},[]);useEffect(()=>{const handleCloseAchievementTooltip=()=>{handleAchievementHover(null,0,0);};const handleClickOutside=event=>{const target=event.target;const tooltip=document.getElementById('achievement-tooltip');const isClickInsideTooltip=tooltip===null||tooltip===void 0?void 0:tooltip.contains(target);const isClickOnMarker=target.closest('.achievement-marker');if(!isClickInsideTooltip&&!isClickOnMarker&&showAchievementTooltip){if(event.type==='touchstart'){setTimeout(()=>{handleAchievementHover(null,0,0);},100);}else{handleAchievementHover(null,0,0);}}};window.addEventListener('closeAchievementTooltip',handleCloseAchievementTooltip);document.addEventListener('mousedown',handleClickOutside);document.addEventListener('touchstart',handleClickOutside);return()=>{window.removeEventListener('closeAchievementTooltip',handleCloseAchievementTooltip);document.removeEventListener('mousedown',handleClickOutside);document.removeEventListener('touchstart',handleClickOutside);};},[handleAchievementHover,showAchievementTooltip]);const{minYear,totalYears,effectiveMinYear,effectiveMaxYear}=useMemo(()=>{const minYear=Math.min(...sortedData.map(p=>p.birthYear),filters.timeRange.start);const maxYear=Math.max(...sortedData.map(p=>p.deathYear),filters.timeRange.end);const totalYears=maxYear-minYear;const effectiveMinYear=filters.hideEmptyCenturies?Math.min(...sortedData.map(p=>p.birthYear)):minYear;const effectiveMaxYear=filters.hideEmptyCenturies?Math.max(...sortedData.map(p=>p.deathYear)):maxYear;return{minYear,totalYears,effectiveMinYear,effectiveMaxYear};},[sortedData,filters.timeRange.start,filters.timeRange.end,filters.hideEmptyCenturies]);const pixelsPerYear=3;const LEFT_PADDING_PX=30;const timelineWidth=totalYears*pixelsPerYear+LEFT_PADDING_PX;const{timelineRef,isDragging,isDraggingTimeline,handleMouseDown,handleMouseMove,handleMouseUp,handleTouchStart,handleTouchMove,handleTouchEnd}=useTimelineDrag({timelineWidth,containerWidth:window.innerWidth});const centuryBoundaries=useMemo(()=>generateCenturyBoundaries(effectiveMinYear,effectiveMaxYear),[effectiveMinYear,effectiveMaxYear]);const calculateRowPlacement=useCallback(people=>{const rows=[];if(groupingType==='none'){const allRows=[];people.forEach(person=>{let placed=false;for(let rowIndex=0;rowIndex<allRows.length;rowIndex++){const row=allRows[rowIndex];let canPlaceInRow=true;for(const existingPerson of row){const BUFFER=20;if(person.birthYear-BUFFER<=existingPerson.deathYear&&person.deathYear+BUFFER>=existingPerson.birthYear){canPlaceInRow=false;break;}}if(canPlaceInRow){allRows[rowIndex].push(person);placed=true;break;}}if(!placed){allRows.push([person]);}});return allRows;}const groupField=groupingType==='category'?'category':'country';const allGroups=groupingType==='category'?allCategories:allCountries;const groups={};people.forEach(person=>{let groupValue;if(groupField==='country'){groupValue=getFirstCountry(person.country);}else{groupValue=person[groupField];}if(!groups[groupValue]){groups[groupValue]=[];}groups[groupValue].push(person);});allGroups.forEach(groupValue=>{if(groups[groupValue]){const groupPeople=groups[groupValue];const groupRows=[];groupPeople.forEach(person=>{let placed=false;for(let rowIndex=0;rowIndex<groupRows.length;rowIndex++){const row=groupRows[rowIndex];let canPlaceInRow=true;for(const existingPerson of row){const BUFFER=20;if(person.birthYear-BUFFER<=existingPerson.deathYear&&person.deathYear+BUFFER>=existingPerson.birthYear){canPlaceInRow=false;break;}}if(canPlaceInRow){groupRows[rowIndex].push(person);placed=true;break;}}if(!placed){groupRows.push([person]);}});rows.push(...groupRows);if(groupValue!==allGroups[allGroups.length-1]){rows.push([]);}}});return rows;},[groupingType,allCategories,allCountries]);const rowPlacement=useMemo(()=>calculateRowPlacement(sortedData),[calculateRowPlacement,sortedData]);const totalHeight=useMemo(()=>rowPlacement.reduce((height,row)=>{return height+(row.length===0?20:70);},0),[rowPlacement]);const ROW_HEIGHT=60;const ROW_MARGIN=10;const EMPTY_ROW_HEIGHT=20;const rowTops=useMemo(()=>{const tops=[];let acc=0;rowPlacement.forEach(row=>{tops.push(acc);if(row.length===0){acc+=EMPTY_ROW_HEIGHT;}else{acc+=ROW_HEIGHT+ROW_MARGIN;}});return tops;},[rowPlacement]);const createCategoryDividers=useCallback(()=>{if(groupingType==='none'){return[];}const dividers=[];let currentGroup='';rowPlacement.forEach((row,rowIndex)=>{if(row.length>0){const firstPersonInRow=row[0];let currentGroupValue;if(groupingType==='category'){currentGroupValue=firstPersonInRow.category;}else if(groupingType==='country'){currentGroupValue=getFirstCountry(firstPersonInRow.country);}else{currentGroupValue=firstPersonInRow.category;}if(currentGroupValue!==currentGroup){if(currentGroup!==''){dividers.push({category:currentGroup,top:rowTops[rowIndex]-5});}currentGroup=currentGroupValue;}}});if(currentGroup!==''){dividers.push({category:currentGroup,top:rowTops[rowPlacement.length-1]-5});}return dividers;},[groupingType,rowPlacement,rowTops]);const categoryDividers=useMemo(()=>createCategoryDividers(),[createCategoryDividers]);// Обработчик для открытия таймлайна\nconst handleOpenTimeline=()=>navigate('/timeline');// Обработчик для возврата в меню\nconst handleBackToMenu=()=>navigate('/menu');// Рендерим главное меню\nif(isMenu){return/*#__PURE__*/_jsxs(\"div\",{className:\"app\",id:\"chrononinja-app\",role:\"main\",\"aria-label\":\"\\u0425\\u0440\\u043E\\u043D\\u043E \\u043D\\u0438\\u043D\\u0434\\u0437\\u044F - \\u0413\\u043B\\u0430\\u0432\\u043D\\u043E\\u0435 \\u043C\\u0435\\u043D\\u044E\",children:[/*#__PURE__*/_jsx(MainMenu,{onOpenTimeline:handleOpenTimeline}),isAuthenticated?/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:20,left:20},children:/*#__PURE__*/_jsx(Profile,{})}):/*#__PURE__*/_jsxs(\"div\",{style:{position:'fixed',top:20,left:20,display:'flex',gap:16},children:[/*#__PURE__*/_jsx(LoginForm,{}),/*#__PURE__*/_jsx(RegisterForm,{}),/*#__PURE__*/_jsx(DevAdminLogin,{})]})]});}// Рендерим таймлайн\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"app\",id:\"chrononinja-app\",role:\"main\",\"aria-label\":\"\\u0425\\u0440\\u043E\\u043D\\u043E \\u043D\\u0438\\u043D\\u0434\\u0437\\u044F - \\u0418\\u043D\\u0442\\u0435\\u0440\\u0430\\u043A\\u0442\\u0438\\u0432\\u043D\\u0430\\u044F \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u0430\\u044F \\u043B\\u0438\\u043D\\u0438\\u044F \\u0438\\u0441\\u0442\\u043E\\u0440\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0445 \\u043B\\u0438\\u0447\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\",children:[/*#__PURE__*/_jsx(BackendInfo,{}),/*#__PURE__*/_jsx(AppHeader,{isScrolled:isScrolled,showControls:showControls,setShowControls:setShowControls,filters:filters,setFilters:setFilters,groupingType:groupingType,setGroupingType:setGroupingType,allCategories:allCategories,allCountries:allCountries,yearInputs:yearInputs,setYearInputs:setYearInputs,applyYearFilter:applyYearFilter,handleYearKeyPress:handleYearKeyPress,resetAllFilters:resetAllFilters,getCategoryColor:getGroupColor,sortedData:sortedData,handleSliderMouseDown:handleSliderMouseDown,handleSliderMouseMove:handleSliderMouseMove,handleSliderMouseUp:handleSliderMouseUp,isDraggingSlider:isDraggingSlider,onBackToMenu:handleBackToMenu}),/*#__PURE__*/_jsx(\"div\",{className:\"timeline-wrapper\",children:/*#__PURE__*/_jsxs(\"main\",{ref:timelineRef,className:`timeline-container ${isDragging?'dragging':''}`,id:\"timeline-viewport\",role:\"region\",\"aria-label\":\"\\u041E\\u0431\\u043B\\u0430\\u0441\\u0442\\u044C \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u0432\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u043E\\u0439 \\u043B\\u0438\\u043D\\u0438\\u0438\",children:[isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading-overlay\",role:\"status\",\"aria-live\":\"polite\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"spinner\",\"aria-hidden\":\"true\"}),/*#__PURE__*/_jsx(\"span\",{children:\"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445...\"})]}),/*#__PURE__*/_jsx(Timeline,{isLoading:false,timelineWidth:timelineWidth,totalHeight:totalHeight,centuryBoundaries:centuryBoundaries,minYear:minYear,pixelsPerYear:pixelsPerYear,LEFT_PADDING_PX:LEFT_PADDING_PX,rowPlacement:rowPlacement,filters:filters,groupingType:groupingType,categoryDividers:categoryDividers,getGroupColor:getGroupColor,getGroupColorDark:getGroupColorDark,getGroupColorMuted:getGroupColorMuted,getPersonGroup:person=>getPersonGroup(person,groupingType),hoveredPerson:hoveredPerson,setHoveredPerson:person=>{if(person){handlePersonHover(person,mousePosition.x,mousePosition.y);}else{handlePersonHover(null,0,0);}},mousePosition:mousePosition,setMousePosition:position=>{if(hoveredPerson){handlePersonHover(hoveredPerson,position.x,position.y);}},showTooltip:showTooltip,setShowTooltip:show=>{if(!show&&hoveredPerson){handlePersonHover(null,0,0);}},activeAchievementMarker:activeAchievementMarker,setActiveAchievementMarker:setActiveAchievementMarker,hoveredAchievement:hoveredAchievement,setHoveredAchievement:achievement=>{if(achievement){handleAchievementHover(achievement,achievementTooltipPosition.x,achievementTooltipPosition.y);}else{handleAchievementHover(null,0,0);}},achievementTooltipPosition:achievementTooltipPosition,setAchievementTooltipPosition:position=>{if(hoveredAchievement){handleAchievementHover(hoveredAchievement,position.x,position.y);}},showAchievementTooltip:showAchievementTooltip,setShowAchievementTooltip:show=>{if(!show&&hoveredAchievement){handleAchievementHover(null,0,0);}},handlePersonHover:handlePersonHover,hoverTimerRef:hoverTimerRef,sortedData:sortedData,selectedPerson:selectedPerson,setSelectedPerson:setSelectedPerson,timelineRef:timelineRef,isDragging:isDragging,isDraggingTimeline:isDraggingTimeline,handleMouseDown:handleMouseDown,handleMouseMove:handleMouseMove,handleMouseUp:handleMouseUp,handleTouchStart:handleTouchStart,handleTouchMove:handleTouchMove,handleTouchEnd:handleTouchEnd})]})}),/*#__PURE__*/_jsx(\"aside\",{className:\"tooltips-container\",id:\"tooltips-aside\",\"aria-label\":\"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u043E\\u043D\\u043D\\u044B\\u0435 \\u043F\\u043E\\u0434\\u0441\\u043A\\u0430\\u0437\\u043A\\u0438\",children:/*#__PURE__*/_jsx(Tooltips,{hoveredPerson:hoveredPerson,showTooltip:showTooltip,mousePosition:mousePosition,hoveredAchievement:hoveredAchievement,showAchievementTooltip:showAchievementTooltip,achievementTooltipPosition:achievementTooltipPosition,getGroupColor:getGroupColor,getPersonGroup:person=>getPersonGroup(person,groupingType),getCategoryColor:getGroupColor})}),/*#__PURE__*/_jsx(MobilePersonPanel,{selectedPerson:selectedPerson,onClose:()=>setSelectedPerson(null),getGroupColor:getGroupColor,getPersonGroup:person=>getPersonGroup(person,groupingType),getCategoryColor:getGroupColor})]});}export default function App(){return/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/menu\",replace:true})}),/*#__PURE__*/_jsx(Route,{path:\"/menu\",element:/*#__PURE__*/_jsx(AppInner,{})}),/*#__PURE__*/_jsx(Route,{path:\"/timeline\",element:/*#__PURE__*/_jsx(AppInner,{})}),/*#__PURE__*/_jsx(Route,{path:\"/profile\",element:/*#__PURE__*/_jsx(ProfilePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/account\",element:/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ProfilePage,{})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/menu\",replace:true})})]})});}","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","Routes","Route","Navigate","useNavigate","useLocation","ProfilePage","ProtectedRoute","AppHeader","Timeline","Tooltips","MobilePersonPanel","MainMenu","AuthProvider","useAuth","LoginForm","RegisterForm","Profile","DevAdminLogin","BackendInfo","useTimelineData","useFilters","useSlider","useTooltip","useTimelineDrag","generateCenturyBoundaries","getFirstCountry","getGroupColor","getGroupColorDark","getGroupColorMuted","getPersonGroup","sortGroupedData","jsx","_jsx","jsxs","_jsxs","AppInner","isAuthenticated","navigate","location","isMenu","pathname","isTimeline","isScrolled","setIsScrolled","activeAchievementMarker","setActiveAchievementMarker","selectedPerson","setSelectedPerson","showControls","setShowControls","filters","setFilters","groupingType","setGroupingType","yearInputs","setYearInputs","applyYearFilter","handleYearKeyPress","resetAllFilters","persons","allCategories","allCountries","isLoading","isDraggingSlider","handleSliderMouseDown","handleSliderMouseMove","handleSliderMouseUp","hoveredPerson","mousePosition","showTooltip","hoveredAchievement","achievementTooltipPosition","showAchievementTooltip","hoverTimerRef","handlePersonHover","handleAchievementHover","handleMouseMove","e","handleMouseUp","document","addEventListener","removeEventListener","sortedData","hideEmptyCenturies","length","effectiveMinYear","Math","min","map","p","birthYear","effectiveMaxYear","max","deathYear","hasActiveFilters","categories","countries","newTimeRange","timeRange","start","end","prev","toString","handleScroll","scrollTop","window","pageYOffset","documentElement","handleCloseAchievementTooltip","handleClickOutside","event","target","tooltip","getElementById","isClickInsideTooltip","contains","isClickOnMarker","closest","type","setTimeout","minYear","totalYears","maxYear","pixelsPerYear","LEFT_PADDING_PX","timelineWidth","timelineRef","isDragging","isDraggingTimeline","handleMouseDown","handleTouchStart","handleTouchMove","handleTouchEnd","containerWidth","innerWidth","centuryBoundaries","calculateRowPlacement","people","rows","allRows","forEach","person","placed","rowIndex","row","canPlaceInRow","existingPerson","BUFFER","push","groupField","allGroups","groups","groupValue","country","groupPeople","groupRows","rowPlacement","totalHeight","reduce","height","ROW_HEIGHT","ROW_MARGIN","EMPTY_ROW_HEIGHT","rowTops","tops","acc","createCategoryDividers","dividers","currentGroup","firstPersonInRow","currentGroupValue","category","top","categoryDividers","handleOpenTimeline","handleBackToMenu","className","id","role","children","onOpenTimeline","style","position","left","display","gap","getCategoryColor","onBackToMenu","ref","setHoveredPerson","x","y","setMousePosition","setShowTooltip","show","setHoveredAchievement","achievement","setAchievementTooltipPosition","setShowAchievementTooltip","onClose","App","path","element","to","replace"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react'\nimport { Routes, Route, Navigate, useNavigate, useLocation } from 'react-router-dom'\nimport ProfilePage from './pages/ProfilePage'\nimport { ProtectedRoute } from './components/ProtectedRoute'\nimport { Person } from './types'\nimport { AppHeader } from './components/AppHeader'\nimport { Timeline } from './components/Timeline'\nimport { Tooltips } from './components/Tooltips'\nimport { MobilePersonPanel } from './components/MobilePersonPanel'\nimport { MainMenu } from './components/MainMenu'\nimport { AuthProvider, useAuth } from './context'\nimport { LoginForm } from './components/Auth/LoginForm'\nimport { RegisterForm } from './components/Auth/RegisterForm'\nimport { Profile } from './components/Profile'\nimport { DevAdminLogin } from './components/Auth/DevAdminLogin'\nimport { BackendInfo } from './components/BackendInfo'\nimport { useTimelineData } from './hooks/useTimelineData'\nimport { useFilters } from './hooks/useFilters'\nimport { useSlider } from './hooks/useSlider'\nimport { useTooltip } from './hooks/useTooltip'\nimport { useTimelineDrag } from './hooks/useTimelineDrag'\nimport { \n  generateCenturyBoundaries,\n  getFirstCountry\n} from './utils/timelineUtils'\nimport { \n  getGroupColor, \n  getGroupColorDark, \n  getGroupColorMuted, \n  getPersonGroup,\n  sortGroupedData\n} from './utils/groupingUtils'\nimport './App.css'\n\nfunction AppInner() {\n  const { isAuthenticated } = useAuth();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const isMenu = location.pathname === '/' || location.pathname === '/menu';\n  const isTimeline = location.pathname === '/timeline';\n  const [isScrolled, setIsScrolled] = useState(false)\n  const [activeAchievementMarker, setActiveAchievementMarker] = useState<{ personId: string; index: number } | null>(null)\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null)\n  const [showControls, setShowControls] = useState(true)\n\n  const { \n    filters, \n    setFilters, \n    groupingType, \n    setGroupingType, \n    yearInputs, \n    setYearInputs, \n    applyYearFilter, \n    handleYearKeyPress, \n    resetAllFilters \n  } = useFilters()\n  \n  const { persons, allCategories, allCountries, isLoading } = useTimelineData(filters, isTimeline)\n\n  const { \n    isDraggingSlider, \n    handleSliderMouseDown, \n    handleSliderMouseMove, \n    handleSliderMouseUp \n  } = useSlider()\n  \n  const { \n    hoveredPerson, \n    mousePosition, \n    showTooltip, \n    hoveredAchievement, \n    achievementTooltipPosition, \n    showAchievementTooltip, \n    hoverTimerRef, \n    handlePersonHover, \n    handleAchievementHover \n  } = useTooltip()\n\n\n\n\n\n\n\n  // Добавляем обработчики событий мыши и touch\n  useEffect(() => {\n    if (!isDraggingSlider) return\n\n    const handleMouseMove = (e: MouseEvent | TouchEvent) => \n      handleSliderMouseMove(e, yearInputs, applyYearFilter, setYearInputs)\n    \n    const handleMouseUp = () => handleSliderMouseUp()\n    \n    document.addEventListener('mousemove', handleMouseMove)\n    document.addEventListener('mouseup', handleMouseUp)\n    document.addEventListener('touchmove', handleMouseMove)\n    document.addEventListener('touchend', handleMouseUp)\n    \n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove)\n      document.removeEventListener('mouseup', handleMouseUp)\n      document.removeEventListener('touchmove', handleMouseMove)\n      document.removeEventListener('touchend', handleMouseUp)\n    }\n  }, [isDraggingSlider, handleSliderMouseMove, handleSliderMouseUp, yearInputs, applyYearFilter, setYearInputs])\n\n\n\n  const sortedData = sortGroupedData(persons, groupingType)\n\n  useEffect(() => {\n    if (filters.hideEmptyCenturies && sortedData.length > 0) {\n      const effectiveMinYear = Math.min(...sortedData.map(p => p.birthYear));\n      const effectiveMaxYear = Math.max(...sortedData.map(p => p.deathYear));\n      \n      const hasActiveFilters = filters.categories.length > 0 || filters.countries.length > 0;\n      \n      let newTimeRange = { ...filters.timeRange };\n      \n      if (hasActiveFilters) {\n        newTimeRange = {\n          start: Math.max(filters.timeRange.start, effectiveMinYear),\n          end: Math.min(filters.timeRange.end, effectiveMaxYear)\n        };\n      } else {\n        newTimeRange = filters.timeRange;\n      }\n      \n      if (newTimeRange.start !== filters.timeRange.start || newTimeRange.end !== filters.timeRange.end) {\n        setFilters(prev => ({\n          ...prev,\n          timeRange: newTimeRange\n        }));\n        \n        setYearInputs({\n          start: newTimeRange.start.toString(),\n          end: newTimeRange.end.toString()\n        });\n      }\n    }\n  }, [filters.hideEmptyCenturies, sortedData, filters.categories, filters.countries, filters.timeRange, setFilters, setYearInputs]);\n\n  useEffect(() => {\n    const handleScroll = () => {\n      const scrollTop = window.pageYOffset || document.documentElement.scrollTop\n      setIsScrolled(scrollTop > 50)\n    }\n\n    window.addEventListener('scroll', handleScroll)\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, [])\n\n  useEffect(() => {\n    const handleCloseAchievementTooltip = () => {\n      handleAchievementHover(null, 0, 0);\n    };\n\n    const handleClickOutside = (event: Event) => {\n      const target = event.target as Element;\n      const tooltip = document.getElementById('achievement-tooltip');\n      const isClickInsideTooltip = tooltip?.contains(target);\n      const isClickOnMarker = target.closest('.achievement-marker');\n      \n      if (!isClickInsideTooltip && !isClickOnMarker && showAchievementTooltip) {\n        if (event.type === 'touchstart') {\n          setTimeout(() => {\n            handleAchievementHover(null, 0, 0);\n          }, 100);\n        } else {\n          handleAchievementHover(null, 0, 0);\n        }\n      }\n    };\n\n    window.addEventListener('closeAchievementTooltip', handleCloseAchievementTooltip);\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('touchstart', handleClickOutside);\n    \n    return () => {\n      window.removeEventListener('closeAchievementTooltip', handleCloseAchievementTooltip);\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('touchstart', handleClickOutside);\n    };\n  }, [handleAchievementHover, showAchievementTooltip]);\n\n  const { minYear, totalYears, effectiveMinYear, effectiveMaxYear } = useMemo(() => {\n    const minYear = Math.min(...sortedData.map(p => p.birthYear), filters.timeRange.start)\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear), filters.timeRange.end)\n    const totalYears = maxYear - minYear\n    \n    const effectiveMinYear = filters.hideEmptyCenturies \n      ? Math.min(...sortedData.map(p => p.birthYear))\n      : minYear\n    const effectiveMaxYear = filters.hideEmptyCenturies \n      ? Math.max(...sortedData.map(p => p.deathYear))\n      : maxYear\n    \n    return { minYear, totalYears, effectiveMinYear, effectiveMaxYear }\n  }, [sortedData, filters.timeRange.start, filters.timeRange.end, filters.hideEmptyCenturies])\n\n  const pixelsPerYear = 3\n  const LEFT_PADDING_PX = 30\n  const timelineWidth = totalYears * pixelsPerYear + LEFT_PADDING_PX\n\n  const {\n    timelineRef,\n    isDragging,\n    isDraggingTimeline,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    handleTouchStart,\n    handleTouchMove,\n    handleTouchEnd\n  } = useTimelineDrag({\n    timelineWidth,\n    containerWidth: window.innerWidth\n  })\n\n  const centuryBoundaries = useMemo(() => \n    generateCenturyBoundaries(effectiveMinYear, effectiveMaxYear),\n    [effectiveMinYear, effectiveMaxYear]\n  )\n\n  const calculateRowPlacement = useCallback((people: Person[]) => {\n    const rows: Person[][] = []\n    \n    if (groupingType === 'none') {\n      const allRows: Person[][] = []\n      \n      people.forEach(person => {\n        let placed = false\n        \n        for (let rowIndex = 0; rowIndex < allRows.length; rowIndex++) {\n          const row = allRows[rowIndex]\n          let canPlaceInRow = true\n          \n          for (const existingPerson of row) {\n            const BUFFER = 20;\n            if (\n              person.birthYear - BUFFER <= existingPerson.deathYear &&\n              person.deathYear + BUFFER >= existingPerson.birthYear\n            ) {\n              canPlaceInRow = false\n              break\n            }\n          }\n          \n          if (canPlaceInRow) {\n            allRows[rowIndex].push(person)\n            placed = true\n            break\n          }\n        }\n        \n        if (!placed) {\n          allRows.push([person])\n        }\n      })\n      \n      return allRows\n    }\n    \n    const groupField = groupingType === 'category' ? 'category' : 'country'\n    const allGroups = groupingType === 'category' ? allCategories : allCountries\n    const groups: { [key: string]: Person[] } = {}\n    \n    people.forEach(person => {\n      let groupValue: string\n      if (groupField === 'country') {\n        groupValue = getFirstCountry(person.country)\n      } else {\n        groupValue = person[groupField]\n      }\n      \n      if (!groups[groupValue]) {\n        groups[groupValue] = []\n      }\n      groups[groupValue].push(person)\n    })\n    \n    allGroups.forEach(groupValue => {\n      if (groups[groupValue]) {\n        const groupPeople = groups[groupValue]\n        const groupRows: Person[][] = []\n        \n        groupPeople.forEach(person => {\n          let placed = false\n          \n          for (let rowIndex = 0; rowIndex < groupRows.length; rowIndex++) {\n            const row = groupRows[rowIndex]\n            let canPlaceInRow = true\n            \n            for (const existingPerson of row) {\n              const BUFFER = 20;\n              if (\n                person.birthYear - BUFFER <= existingPerson.deathYear &&\n                person.deathYear + BUFFER >= existingPerson.birthYear\n              ) {\n                canPlaceInRow = false\n                break\n              }\n            }\n            \n            if (canPlaceInRow) {\n              groupRows[rowIndex].push(person)\n              placed = true\n              break\n            }\n          }\n          \n          if (!placed) {\n            groupRows.push([person])\n          }\n        })\n        \n        rows.push(...groupRows)\n        \n        if (groupValue !== allGroups[allGroups.length - 1]) {\n          rows.push([])\n        }\n      }\n    })\n    \n    return rows\n  }, [groupingType, allCategories, allCountries])\n\n  const rowPlacement = useMemo(() => \n    calculateRowPlacement(sortedData),\n    [calculateRowPlacement, sortedData]\n  )\n\n  const totalHeight = useMemo(() => \n    rowPlacement.reduce((height, row) => {\n      return height + (row.length === 0 ? 20 : 70)\n    }, 0),\n    [rowPlacement]\n  )\n\n  const ROW_HEIGHT = 60;\n  const ROW_MARGIN = 10;\n  const EMPTY_ROW_HEIGHT = 20;\n\n  const rowTops = useMemo(() => {\n    const tops: number[] = [];\n    let acc = 0;\n    rowPlacement.forEach(row => {\n      tops.push(acc);\n      if (row.length === 0) {\n        acc += EMPTY_ROW_HEIGHT;\n      } else {\n        acc += ROW_HEIGHT + ROW_MARGIN;\n      }\n    });\n    return tops;\n  }, [rowPlacement]);\n\n  const createCategoryDividers = useCallback(() => {\n    if (groupingType === 'none') {\n      return [];\n    }\n\n    const dividers: { category: string; top: number }[] = [];\n    let currentGroup = '';\n\n    rowPlacement.forEach((row, rowIndex) => {\n      if (row.length > 0) {\n        const firstPersonInRow = row[0];\n        let currentGroupValue: string;\n        \n        if (groupingType === 'category') {\n          currentGroupValue = firstPersonInRow.category;\n        } else if (groupingType === 'country') {\n          currentGroupValue = getFirstCountry(firstPersonInRow.country);\n        } else {\n          currentGroupValue = firstPersonInRow.category;\n        }\n        \n        if (currentGroupValue !== currentGroup) {\n          if (currentGroup !== '') {\n            dividers.push({ category: currentGroup, top: rowTops[rowIndex] - 5 });\n          }\n          currentGroup = currentGroupValue;\n        }\n      }\n    });\n\n    if (currentGroup !== '') {\n      dividers.push({ category: currentGroup, top: rowTops[rowPlacement.length - 1] - 5 });\n    }\n\n    return dividers;\n  }, [groupingType, rowPlacement, rowTops]);\n\n  const categoryDividers = useMemo(() => createCategoryDividers(), [createCategoryDividers]);\n\n  // Обработчик для открытия таймлайна\n  const handleOpenTimeline = () => navigate('/timeline')\n\n  // Обработчик для возврата в меню\n  const handleBackToMenu = () => navigate('/menu')\n\n  // Рендерим главное меню\n  if (isMenu) {\n    return (\n      <div className=\"app\" id=\"chrononinja-app\" role=\"main\" aria-label=\"Хроно ниндзя - Главное меню\">\n        <MainMenu onOpenTimeline={handleOpenTimeline} />\n        {isAuthenticated ? (\n          <div style={{ position: 'fixed', top: 20, left: 20 }}>\n            <Profile />\n          </div>\n        ) : (\n          <div style={{ position: 'fixed', top: 20, left: 20, display: 'flex', gap: 16 }}>\n            <LoginForm />\n            <RegisterForm />\n            <DevAdminLogin />\n          </div>\n        )}\n      </div>\n    )\n  }\n\n  // Рендерим таймлайн\n  return (\n    <div className=\"app\" id=\"chrononinja-app\" role=\"main\" aria-label=\"Хроно ниндзя - Интерактивная временная линия исторических личностей\">\n      <BackendInfo />\n      <AppHeader\n        isScrolled={isScrolled}\n        showControls={showControls}\n        setShowControls={setShowControls}\n        filters={filters}\n        setFilters={setFilters}\n        groupingType={groupingType}\n        setGroupingType={setGroupingType}\n        allCategories={allCategories}\n        allCountries={allCountries}\n        yearInputs={yearInputs}\n        setYearInputs={setYearInputs}\n        applyYearFilter={applyYearFilter}\n        handleYearKeyPress={handleYearKeyPress}\n        resetAllFilters={resetAllFilters}\n        getCategoryColor={getGroupColor}\n        sortedData={sortedData}\n        handleSliderMouseDown={handleSliderMouseDown}\n        handleSliderMouseMove={handleSliderMouseMove}\n        handleSliderMouseUp={handleSliderMouseUp}\n        isDraggingSlider={isDraggingSlider}\n        onBackToMenu={handleBackToMenu}\n      />\n      \n      <div className=\"timeline-wrapper\">\n        <main \n          ref={timelineRef}\n          className={`timeline-container ${isDragging ? 'dragging' : ''}`}\n          id=\"timeline-viewport\" \n          role=\"region\" \n          aria-label=\"Область просмотра временной линии\"\n        >\n          {isLoading && (\n            <div className=\"loading-overlay\" role=\"status\" aria-live=\"polite\">\n              <div className=\"spinner\" aria-hidden=\"true\"></div>\n              <span>Загрузка данных...</span>\n            </div>\n          )}\n          <Timeline\n          isLoading={false}\n          timelineWidth={timelineWidth}\n          totalHeight={totalHeight}\n          centuryBoundaries={centuryBoundaries}\n          minYear={minYear}\n          pixelsPerYear={pixelsPerYear}\n          LEFT_PADDING_PX={LEFT_PADDING_PX}\n          rowPlacement={rowPlacement}\n          filters={filters}\n          groupingType={groupingType}\n          categoryDividers={categoryDividers}\n          getGroupColor={getGroupColor}\n          getGroupColorDark={getGroupColorDark}\n          getGroupColorMuted={getGroupColorMuted}\n          getPersonGroup={(person) => getPersonGroup(person, groupingType)}\n          hoveredPerson={hoveredPerson}\n          setHoveredPerson={(person) => {\n            if (person) {\n              handlePersonHover(person, mousePosition.x, mousePosition.y);\n            } else {\n              handlePersonHover(null, 0, 0);\n            }\n          }}\n          mousePosition={mousePosition}\n          setMousePosition={(position) => {\n            if (hoveredPerson) {\n              handlePersonHover(hoveredPerson, position.x, position.y);\n            }\n          }}\n          showTooltip={showTooltip}\n          setShowTooltip={(show) => {\n            if (!show && hoveredPerson) {\n              handlePersonHover(null, 0, 0);\n            }\n          }}\n          activeAchievementMarker={activeAchievementMarker}\n          setActiveAchievementMarker={setActiveAchievementMarker}\n          hoveredAchievement={hoveredAchievement}\n          setHoveredAchievement={(achievement) => {\n            if (achievement) {\n              handleAchievementHover(achievement, achievementTooltipPosition.x, achievementTooltipPosition.y);\n            } else {\n              handleAchievementHover(null, 0, 0);\n            }\n          }}\n          achievementTooltipPosition={achievementTooltipPosition}\n          setAchievementTooltipPosition={(position) => {\n            if (hoveredAchievement) {\n              handleAchievementHover(hoveredAchievement, position.x, position.y);\n            }\n          }}\n          showAchievementTooltip={showAchievementTooltip}\n          setShowAchievementTooltip={(show) => {\n            if (!show && hoveredAchievement) {\n              handleAchievementHover(null, 0, 0);\n            }\n          }}\n          handlePersonHover={handlePersonHover}\n          hoverTimerRef={hoverTimerRef}\n          sortedData={sortedData}\n          selectedPerson={selectedPerson}\n          setSelectedPerson={setSelectedPerson}\n          timelineRef={timelineRef}\n          isDragging={isDragging}\n          isDraggingTimeline={isDraggingTimeline}\n          handleMouseDown={handleMouseDown}\n          handleMouseMove={handleMouseMove}\n          handleMouseUp={handleMouseUp}\n          handleTouchStart={handleTouchStart}\n          handleTouchMove={handleTouchMove}\n          handleTouchEnd={handleTouchEnd}\n        />\n        </main>\n      </div>\n\n      <aside className=\"tooltips-container\" id=\"tooltips-aside\" aria-label=\"Информационные подсказки\">\n        <Tooltips\n          hoveredPerson={hoveredPerson}\n          showTooltip={showTooltip}\n          mousePosition={mousePosition}\n          hoveredAchievement={hoveredAchievement}\n          showAchievementTooltip={showAchievementTooltip}\n          achievementTooltipPosition={achievementTooltipPosition}\n          getGroupColor={getGroupColor}\n          getPersonGroup={(person) => getPersonGroup(person, groupingType)}\n          getCategoryColor={getGroupColor}\n        />\n      </aside>\n      \n      <MobilePersonPanel\n        selectedPerson={selectedPerson}\n        onClose={() => setSelectedPerson(null)}\n        getGroupColor={getGroupColor}\n        getPersonGroup={(person) => getPersonGroup(person, groupingType)}\n        getCategoryColor={getGroupColor}\n      />\n    </div>\n  )\n}\n\nexport default function App() {\n  return (\n    <AuthProvider>\n      <Routes>\n        <Route path=\"/\" element={<Navigate to=\"/menu\" replace />} />\n        <Route path=\"/menu\" element={<AppInner />} />\n        <Route path=\"/timeline\" element={<AppInner />} />\n        <Route path=\"/profile\" element={<ProfilePage />} />\n        <Route path=\"/account\" element={<ProtectedRoute><ProfilePage /></ProtectedRoute>} />\n        <Route path=\"*\" element={<Navigate to=\"/menu\" replace />} />\n      </Routes>\n    </AuthProvider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}