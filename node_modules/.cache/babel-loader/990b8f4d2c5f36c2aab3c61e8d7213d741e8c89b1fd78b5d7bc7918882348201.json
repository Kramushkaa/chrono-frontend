{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Selecty\\\\Documents\\\\PetProjects\\\\chronoline-frontend\\\\src\\\\components\\\\Timeline.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useMobile } from '../hooks/useMobile';\nimport { useTimelineDrag } from '../hooks/useTimelineDrag';\nimport { getPosition, getWidth, getCenturyColor, getCenturyNumber, toRomanNumeral } from '../utils/timelineUtils';\n\n// Типы для элементов временной линии\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Timeline = ({\n  isLoading,\n  timelineWidth,\n  totalHeight,\n  centuryBoundaries,\n  minYear,\n  pixelsPerYear,\n  LEFT_PADDING_PX,\n  rowPlacement,\n  filters,\n  groupingType,\n  categoryDividers,\n  getGroupColor,\n  getGroupColorDark,\n  getGroupColorMuted,\n  getPersonGroup,\n  hoveredPerson,\n  setHoveredPerson,\n  mousePosition,\n  setMousePosition,\n  showTooltip,\n  setShowTooltip,\n  handlePersonHover,\n  activeAchievementMarker,\n  setActiveAchievementMarker,\n  hoveredAchievement,\n  setHoveredAchievement,\n  achievementTooltipPosition,\n  setAchievementTooltipPosition,\n  showAchievementTooltip,\n  setShowAchievementTooltip,\n  hoverTimerRef,\n  sortedData,\n  selectedPerson,\n  setSelectedPerson\n}) => {\n  _s();\n  const isMobile = useMobile();\n\n  // Хук для перетаскивания timeline\n  const {\n    timelineRef,\n    isDragging,\n    isDraggingTimeline,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    handleTouchStart,\n    handleTouchMove,\n    handleTouchEnd\n  } = useTimelineDrag({\n    timelineWidth,\n    containerWidth: window.innerWidth\n  });\n\n  // Функция для определения пустых веков на основе отфильтрованных данных\n  const getEmptyCenturies = () => {\n    if (!sortedData || sortedData.length === 0) return new Set();\n\n    // Используем отфильтрованные данные для определения диапазона\n    const minYear = Math.min(...sortedData.map(p => p.birthYear));\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear));\n    const startCentury = Math.floor(minYear / 100) * 100;\n    const endCentury = Math.ceil(maxYear / 100) * 100;\n    const emptyCenturies = new Set();\n    for (let centuryStart = startCentury; centuryStart <= endCentury; centuryStart += 100) {\n      const centuryEnd = centuryStart + 99;\n      const hasDataInCentury = sortedData.some(person => person.birthYear <= centuryEnd && person.deathYear >= centuryStart);\n      if (!hasDataInCentury) {\n        emptyCenturies.add(centuryStart);\n      }\n    }\n    return emptyCenturies;\n  };\n\n  // Создаем массив для отображения веков с промежутками\n  const getTimelineElements = () => {\n    if (!filters.hideEmptyCenturies) {\n      return centuryBoundaries.map(year => ({\n        type: 'century',\n        year\n      }));\n    }\n    const emptyCenturies = getEmptyCenturies();\n    const visibleCenturies = centuryBoundaries.filter(year => !emptyCenturies.has(year));\n    const elements = [];\n    for (let i = 0; i < visibleCenturies.length; i++) {\n      const currentYear = visibleCenturies[i];\n\n      // Добавляем промежуток перед веком (кроме первого)\n      if (i > 0) {\n        const prevYear = visibleCenturies[i - 1];\n        const gapStart = prevYear + 100;\n        const gapEnd = currentYear;\n\n        // Находим все скрытые века в промежутке\n        const hiddenCenturies = [];\n        for (let year = gapStart; year < gapEnd; year += 100) {\n          if (emptyCenturies.has(year)) {\n            hiddenCenturies.push(year);\n          }\n        }\n        if (hiddenCenturies.length > 0) {\n          elements.push({\n            type: 'gap',\n            startYear: gapStart,\n            endYear: gapEnd,\n            hiddenCenturies\n          });\n        }\n      }\n\n      // Добавляем сам век\n      elements.push({\n        type: 'century',\n        year: currentYear\n      });\n    }\n    return elements;\n  };\n  const timelineElements = getTimelineElements();\n\n  // Функция для вычисления позиции с учетом промежутков\n  const getAdjustedPosition = year => {\n    if (!filters.hideEmptyCenturies) {\n      return getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n    }\n\n    // Находим позицию года в оригинальной шкале\n    const originalPosition = getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\n\n    // Вычисляем смещение, проходя по всем промежуткам до этого года\n    let totalOffset = 0;\n    for (const element of timelineElements) {\n      if (element.type === 'gap') {\n        const gapStart = getPosition(element.startYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const gapEnd = getPosition(element.endYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\n        const originalGapWidth = gapEnd - gapStart;\n        const newGapWidth = pixelsPerYear * 10; // 10 лет\n\n        // Если год находится после этого промежутка, добавляем смещение\n        if (year >= element.endYear) {\n          totalOffset += originalGapWidth - newGapWidth;\n        }\n      }\n    }\n    return originalPosition - totalOffset;\n  };\n\n  // Функция для вычисления ширины с учетом промежутков\n  const getAdjustedWidth = (startYear, endYear) => {\n    if (!filters.hideEmptyCenturies) {\n      return getWidth(startYear, endYear, pixelsPerYear);\n    }\n    const startPos = getAdjustedPosition(startYear);\n    const endPos = getAdjustedPosition(endYear);\n    return endPos - startPos;\n  };\n\n  // Функция для вычисления скорректированной ширины таймлайна\n  const getAdjustedTimelineWidth = () => {\n    if (!filters.hideEmptyCenturies) {\n      return timelineWidth;\n    }\n\n    // Вычисляем общую ширину, проходя по всем элементам\n    let totalWidth = 0;\n    for (const element of timelineElements) {\n      if (element.type === 'century') {\n        // Век занимает 100 лет\n        totalWidth += pixelsPerYear * 100;\n      } else if (element.type === 'gap') {\n        // Промежуток занимает 10 лет\n        totalWidth += pixelsPerYear * 10;\n      }\n    }\n    return totalWidth + LEFT_PADDING_PX + 50; // Добавляем отступы\n  };\n\n  // Функция для создания повторяющихся меток веков через каждые 90vh\n  const createRepeatingCenturyLabels = () => {\n    const viewportHeight = window.innerHeight;\n    const labels = [];\n\n    // Создаем метки для каждого века\n    timelineElements.forEach(element => {\n      if (element.type === 'century') {\n        const year = element.year;\n        const centerYear = year + 50;\n        const centuryNumber = getCenturyNumber(centerYear);\n        const isNegativeCentury = year < 0;\n        const romanNumeral = isNegativeCentury ? `${toRomanNumeral(Math.abs(centuryNumber))} в. до н.э` : `${toRomanNumeral(centuryNumber)} в.`;\n        const startPos = getAdjustedPosition(year);\n        const nextYear = year + 100;\n        const endPos = getAdjustedPosition(nextYear);\n        const centerPos = startPos + (endPos - startPos) / 2; // Центр века\n\n        // Создаем метки через каждые 90vh\n        for (let top = 0; top < totalHeight; top += viewportHeight * 0.9) {\n          labels.push({\n            id: `century-label-${year}-${top}`,\n            year,\n            romanNumeral,\n            left: centerPos,\n            top: top + viewportHeight / 2,\n            // Центрируем по вертикали в каждом экране\n            type: 'century'\n          });\n        }\n      } else if (element.type === 'gap') {\n        var _element$hiddenCentur;\n        const startPos = getAdjustedPosition(element.startYear);\n        const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n        const centerPos = startPos + gapWidth / 2; // Центр промежутка\n        const hiddenCenturiesText = ((_element$hiddenCentur = element.hiddenCenturies) === null || _element$hiddenCentur === void 0 ? void 0 : _element$hiddenCentur.map(year => {\n          const centuryNumber = getCenturyNumber(year + 50);\n          const isNegativeCentury = year < 0;\n          const romanNumeral = isNegativeCentury ? `${toRomanNumeral(Math.abs(centuryNumber))} в. до н.э` : `${toRomanNumeral(centuryNumber)} в.`;\n          return romanNumeral;\n        }).join(', ')) || '';\n\n        // Создаем метки для промежутков через каждые 90vh\n        for (let top = 0; top < totalHeight; top += viewportHeight * 0.9) {\n          labels.push({\n            id: `gap-label-${element.startYear}-${top}`,\n            year: element.startYear,\n            romanNumeral: hiddenCenturiesText,\n            left: centerPos,\n            top: top + viewportHeight / 2,\n            type: 'gap'\n          });\n        }\n      }\n    });\n    return labels;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timeline-content\",\n      id: \"timeline-content\",\n      role: \"presentation\",\n      \"aria-hidden\": \"true\",\n      style: {\n        position: 'relative',\n        height: '100%',\n        overflow: 'visible',\n        padding: isMobile ? '0' : '1rem 0 2rem 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timeline-background\",\n        id: \"timeline-background\",\n        role: \"presentation\",\n        \"aria-hidden\": \"true\",\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 1\n        },\n        children: timelineElements.map((element, index) => {\n          if (element.type === 'century') {\n            const year = element.year;\n            // Каждый век занимает ровно 100 лет\n            const nextYear = year + 100;\n            const startPos = getAdjustedPosition(year);\n            const endPos = getAdjustedPosition(nextYear);\n            const width = endPos - startPos;\n\n            // Вычисляем век на основе центра года в столетии\n            const centerYear = year + 50;\n            const centuryNumber = getCenturyNumber(centerYear);\n            // Для отрицательных веков добавляем знак минус\n            const isNegativeCentury = year < 0;\n            const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"century-background\",\n              id: `century-${year}`,\n              role: \"presentation\",\n              \"aria-label\": `Век ${romanNumeral}`,\n              style: {\n                position: 'absolute',\n                left: `${startPos}px`,\n                width: `${width}px`,\n                height: '100%',\n                background: getCenturyColor(year, minYear),\n                opacity: 0.3,\n                zIndex: 1\n              }\n            }, `century-bg-${year}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this);\n          } else if (element.type === 'gap') {\n            // Промежуток между веками - компактный размер (1/10 века)\n            const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\n            const startPos = getAdjustedPosition(element.startYear);\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${startPos}px`,\n                width: `${gapWidth}px`,\n                height: '100%',\n                background: 'rgba(139, 69, 19, 0.1)',\n                border: '1px dashed rgba(139, 69, 19, 0.3)',\n                zIndex: 1\n              }\n            }, `gap-${element.startYear}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 18\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 5\n        },\n        children: timelineElements.map(element => {\n          if (element.type === 'century') {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(element.year)}px`,\n                width: '2px',\n                height: '100%',\n                background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                zIndex: 5\n              }\n            }, `century-line-${element.year}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 19\n            }, this);\n          } else if (element.type === 'gap') {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(element.startYear)}px`,\n                width: '2px',\n                height: '100%',\n                background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\n                zIndex: 5\n              }\n            }, `gap-line-${element.startYear}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 19\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 6\n        },\n        children: createRepeatingCenturyLabels().map(label => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            left: `${label.left}px`,\n            top: `${label.top}px`,\n            transform: 'translate(-50%, -50%)',\n            fontSize: label.type === 'century' ? '1.5rem' : '0.8rem',\n            fontWeight: 'bold',\n            color: label.type === 'century' ? 'rgba(244, 228, 193, 0.4)' : 'rgba(139, 69, 19, 0.5)',\n            textShadow: '1px 1px 2px rgba(0, 0, 0, 0.6)',\n            pointerEvents: 'none',\n            fontFamily: label.type === 'century' ? 'serif' : 'sans-serif',\n            textAlign: 'center',\n            maxWidth: '200px',\n            wordWrap: 'break-word'\n          },\n          children: label.type === 'century' ? label.romanNumeral : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u043E:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '0.7rem',\n                marginTop: '2px'\n              },\n              children: label.romanNumeral\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true)\n        }, label.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 14\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"category-dividers\",\n        id: \"category-dividers\",\n        role: \"presentation\",\n        \"aria-hidden\": \"true\",\n        style: {\n          position: 'absolute',\n          top: '0',\n          left: '0',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 200}px`,\n          pointerEvents: 'none',\n          zIndex: 8\n        },\n        children: categoryDividers.map(divider => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-divider\",\n          id: `divider-${divider.category}`,\n          role: \"separator\",\n          \"aria-label\": `Разделитель группы: ${divider.category}`,\n          style: {\n            position: 'absolute',\n            top: `${divider.top}px`,\n            left: '0',\n            width: '100%',\n            height: '10px',\n            background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\n            opacity: 0.6,\n            zIndex: 8\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-label\",\n            id: `category-label-${divider.category}`,\n            \"aria-label\": `Группа: ${divider.category}`,\n            style: {\n              position: 'absolute',\n              left: '20px',\n              top: '50%',\n              transform: 'translateY(-50%)',\n              background: getGroupColor(divider.category),\n              color: 'white',\n              padding: '2px 8px',\n              borderRadius: '4px',\n              fontSize: '0.7rem',\n              fontWeight: 'bold',\n              whiteSpace: 'nowrap',\n              zIndex: 9\n            },\n            children: divider.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this)\n        }, `category-divider-${divider.category}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"person-timeline\",\n        id: \"person-timeline\",\n        role: \"list\",\n        \"aria-label\": \"\\u0412\\u0440\\u0435\\u043C\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043B\\u0438\\u043D\\u0438\\u0438 \\u0438\\u0441\\u0442\\u043E\\u0440\\u0438\\u0447\\u0435\\u0441\\u043A\\u0438\\u0445 \\u043B\\u0438\\u0447\\u043D\\u043E\\u0441\\u0442\\u0435\\u0439\",\n        style: {\n          position: 'relative',\n          width: `${getAdjustedTimelineWidth()}px`,\n          height: `${totalHeight + 60}px`,\n          zIndex: 10\n        },\n        children: rowPlacement.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-row\",\n          id: `timeline-row-${rowIndex}`,\n          role: \"listitem\",\n          \"aria-label\": `Строка ${rowIndex + 1} временной линии`,\n          style: {\n            position: 'relative',\n            height: row.length === 0 ? '20px' : '60px',\n            marginBottom: row.length === 0 ? '0px' : '10px'\n          },\n          children: row.map(person => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"birth-year-label\",\n              id: `birth-year-${person.id}`,\n              \"aria-label\": `Год рождения: ${person.birthYear}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.birthYear)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: 'rgba(244, 228, 193, 0.6)',\n                fontStyle: 'italic',\n                fontWeight: 400,\n                transform: 'translateX(-100%) translateY(-10px)'\n              },\n              children: person.birthYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 19\n            }, this), person.reignStart && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reign-label\",\n              id: `reign-start-${person.id}`,\n              \"aria-label\": `Начало правления: ${person.reignStart}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.reignStart)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: '#E57373',\n                // Темно-красный\n                fontStyle: 'italic',\n                fontWeight: 'bold',\n                transform: 'translateX(-100%) translateY(-22px)'\n              },\n              children: [\"\\uD83D\\uDC51 \", person.reignStart]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 22\n            }, this), person.reignEnd && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"reign-label\",\n              id: `reign-end-${person.id}`,\n              \"aria-label\": `Конец правления: ${person.reignEnd}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.reignEnd)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: '#E57373',\n                // Темно-красный\n                fontStyle: 'italic',\n                fontWeight: 'bold',\n                transform: 'translateY(-22px)'\n              },\n              children: person.reignEnd\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 610,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"death-year-label\",\n              id: `death-year-${person.id}`,\n              \"aria-label\": `Год смерти: ${person.deathYear}`,\n              style: {\n                position: 'absolute',\n                left: `${getAdjustedPosition(person.deathYear)}px`,\n                top: 0,\n                fontSize: '11px',\n                color: 'rgba(244, 228, 193, 0.6)',\n                fontStyle: 'italic',\n                fontWeight: 400,\n                transform: 'translateY(-10px)'\n              },\n              children: person.deathYear\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 38\n            }, this), filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3].filter(year => year !== undefined && year !== null).map((year, index) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"achievement-marker\",\n                id: `achievement-${person.id}-${index}`,\n                role: \"button\",\n                \"aria-label\": `Достижение ${index + 1} в ${year} году`,\n                tabIndex: 0,\n                style: {\n                  position: 'absolute',\n                  left: `${getAdjustedPosition(year)}px`,\n                  top: '-4px',\n                  width: '2px',\n                  // Возвращаем стандартную ширину\n                  height: '15px',\n                  // Возвращаем стандартную высоту\n                  backgroundColor: getGroupColorDark(getPersonGroup(person)),\n                  zIndex: (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.personId) === person.id && (activeAchievementMarker === null || activeAchievementMarker === void 0 ? void 0 : activeAchievementMarker.index) === index ? 10 : 3,\n                  transform: 'translateX(-50%)',\n                  cursor: 'pointer',\n                  transition: 'all 0.2s ease'\n                  // Убираем псевдоэлементы, так как они не работают в inline стилях\n                },\n                onMouseEnter: e => {\n                  if (!isMobile) {\n                    e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n\n                    // Устанавливаем активный маркер\n                    setActiveAchievementMarker({\n                      personId: person.id,\n                      index\n                    });\n\n                    // Скрываем tooltip человека при наведении на маркер достижения\n                    if ((hoveredPerson === null || hoveredPerson === void 0 ? void 0 : hoveredPerson.id) === person.id) {\n                      handlePersonHover(null, 0, 0);\n                    }\n\n                    // Очищаем предыдущий таймер если он есть\n                    if (hoverTimerRef.current) {\n                      clearTimeout(hoverTimerRef.current);\n                    }\n\n                    // Запускаем таймер для показа tooltip\n                    hoverTimerRef.current = setTimeout(() => {\n                      setAchievementTooltipPosition({\n                        x: e.clientX,\n                        y: e.clientY\n                      });\n                      setHoveredAchievement({\n                        person,\n                        year: year,\n                        index\n                      });\n                      setShowAchievementTooltip(true);\n                    }, 500);\n                  }\n                },\n                onMouseLeave: e => {\n                  if (!isMobile) {\n                    e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = 'none';\n\n                    // Сбрасываем активный маркер\n                    setActiveAchievementMarker(null);\n\n                    // Очищаем таймер и скрываем tooltip достижения\n                    if (hoverTimerRef.current) {\n                      clearTimeout(hoverTimerRef.current);\n                      hoverTimerRef.current = null;\n                    }\n                    setShowAchievementTooltip(false);\n                    setHoveredAchievement(null);\n\n                    // Также скрываем tooltip человека, если он был показан\n                    if ((hoveredPerson === null || hoveredPerson === void 0 ? void 0 : hoveredPerson.id) === person.id) {\n                      handlePersonHover(null, 0, 0);\n                    }\n                  }\n                },\n                onMouseMove: e => {\n                  if (!isMobile && hoveredAchievement && hoveredAchievement.person.id === person.id && hoveredAchievement.index === index) {\n                    setAchievementTooltipPosition({\n                      x: e.clientX,\n                      y: e.clientY\n                    });\n                  }\n                },\n                onTouchStart: e => {\n                  if (isMobile) {\n                    e.preventDefault();\n                    e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\n\n                    // Устанавливаем активный маркер\n                    setActiveAchievementMarker({\n                      personId: person.id,\n                      index\n                    });\n\n                    // Скрываем tooltip человека при касании маркера достижения\n                    if ((hoveredPerson === null || hoveredPerson === void 0 ? void 0 : hoveredPerson.id) === person.id) {\n                      handlePersonHover(null, 0, 0);\n                    }\n\n                    // Показываем tooltip сразу на мобильных\n                    const touch = e.touches[0];\n                    setAchievementTooltipPosition({\n                      x: touch.clientX,\n                      y: touch.clientY\n                    });\n                    setHoveredAchievement({\n                      person,\n                      year: year,\n                      index\n                    });\n                    setShowAchievementTooltip(true);\n                  }\n                },\n                onTouchEnd: e => {\n                  if (isMobile) {\n                    // Убираем визуальные эффекты при отпускании, но НЕ скрываем tooltip\n                    e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\n                    e.currentTarget.style.boxShadow = 'none';\n\n                    // Сбрасываем активный маркер\n                    setActiveAchievementMarker(null);\n\n                    // НЕ скрываем tooltip достижения - он будет скрыт только по клику вне или по кнопке закрытия\n                    // Но скрываем tooltip человека, если он был показан\n                    if ((hoveredPerson === null || hoveredPerson === void 0 ? void 0 : hoveredPerson.id) === person.id) {\n                      handlePersonHover(null, 0, 0);\n                    }\n                  }\n                },\n                onKeyDown: e => {\n                  if (e.key === 'Enter' || e.key === ' ') {\n                    e.preventDefault();\n                    // Показываем tooltip при нажатии Enter или Space\n                    setHoveredAchievement({\n                      person,\n                      year: year,\n                      index\n                    });\n                    // Используем позицию элемента для tooltip при нажатии клавиши\n                    const rect = e.currentTarget.getBoundingClientRect();\n                    setAchievementTooltipPosition({\n                      x: rect.left + rect.width / 2,\n                      y: rect.top - 10\n                    });\n                    setShowAchievementTooltip(true);\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    position: 'absolute',\n                    top: '-12px',\n                    left: '50%',\n                    transform: 'translateX(-50%)',\n                    fontSize: '8px',\n                    color: getGroupColorDark(getPersonGroup(person)),\n                    fontWeight: 'bold',\n                    whiteSpace: 'nowrap',\n                    backgroundColor: 'rgba(44, 24, 16, 0.9)',\n                    padding: '1px 3px',\n                    borderRadius: '2px',\n                    border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\n                    transition: 'all 0.2s ease'\n                  },\n                  children: year\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 777,\n                  columnNumber: 27\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 25\n              }, this);\n            }), person.reignStart && person.reignEnd && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reign-bar\",\n              id: `reign-bar-${person.id}`,\n              role: \"presentation\",\n              \"aria-label\": `Период правления: ${person.reignStart} - ${person.reignEnd}`,\n              style: {\n                position: 'absolute',\n                top: '-15px',\n                left: `${getAdjustedPosition(person.reignStart)}px`,\n                width: `${getAdjustedWidth(person.reignStart, person.reignEnd)}px`,\n                height: '65px',\n                backgroundColor: 'rgba(211, 47, 47, 0.25)',\n                pointerEvents: 'none',\n                borderLeft: '2px solid #D32F2F',\n                borderRight: '2px solid #D32F2F',\n                borderRadius: '3px',\n                zIndex: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 800,\n              columnNumber: 22\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"life-bar\",\n              id: `life-bar-${person.id}`,\n              role: \"button\",\n              \"aria-label\": `${person.name}, ${person.birthYear} - ${person.deathYear}, ${person.category}`,\n              tabIndex: 0,\n              style: {\n                position: 'absolute',\n                top: '10px',\n                left: `${getAdjustedPosition(person.birthYear)}px`,\n                width: `${getAdjustedWidth(person.birthYear, person.deathYear)}px`,\n                height: '40px',\n                background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\n                borderRadius: '6px',\n                cursor: 'pointer',\n                display: 'flex',\n                alignItems: 'center',\n                padding: '0 12px',\n                color: 'white',\n                fontSize: '14px',\n                fontWeight: 'bold',\n                minWidth: '60px',\n                boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\n                border: '1.5px solid #a8926a',\n                opacity: (selectedPerson === null || selectedPerson === void 0 ? void 0 : selectedPerson.id) === person.id ? 0.8 : 1,\n                zIndex: 5,\n                transform: (selectedPerson === null || selectedPerson === void 0 ? void 0 : selectedPerson.id) === person.id ? 'scale(1.05)' : 'scale(1)',\n                transition: 'all 0.2s ease'\n              },\n              onMouseEnter: e => {\n                if (!isMobile) {\n                  e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)';\n                  e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)';\n                  e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)';\n\n                  // Скрываем tooltip достижения при наведении на lifebar\n                  if ((hoveredAchievement === null || hoveredAchievement === void 0 ? void 0 : hoveredAchievement.person.id) === person.id) {\n                    setShowAchievementTooltip(false);\n                    setHoveredAchievement(null);\n                    setActiveAchievementMarker(null);\n                  }\n\n                  // Используем handlePersonHover для правильной обработки\n                  handlePersonHover(person, e.clientX, e.clientY);\n                }\n              },\n              onMouseLeave: e => {\n                if (!isMobile) {\n                  e.currentTarget.style.transform = (selectedPerson === null || selectedPerson === void 0 ? void 0 : selectedPerson.id) === person.id ? 'scale(1.05)' : 'translateY(0) scale(1)';\n                  e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)';\n                  e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)';\n                  // Используем handlePersonHover для правильной обработки с задержкой\n                  handlePersonHover(null, 0, 0);\n                }\n              },\n              onMouseMove: e => {\n                if (!isMobile && (hoveredPerson === null || hoveredPerson === void 0 ? void 0 : hoveredPerson.id) === person.id) {\n                  setMousePosition({\n                    x: e.clientX,\n                    y: e.clientY\n                  });\n                }\n              },\n              onKeyDown: e => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                  e.preventDefault();\n                  if (isMobile) {\n                    setSelectedPerson(person);\n                  } else {\n                    setHoveredPerson(person);\n                    setShowTooltip(true);\n                  }\n                }\n              },\n              onTouchStart: e => {\n                if (isMobile) {\n                  // Скрываем tooltip достижения при касании lifebar\n                  if ((hoveredAchievement === null || hoveredAchievement === void 0 ? void 0 : hoveredAchievement.person.id) === person.id) {\n                    setShowAchievementTooltip(false);\n                    setHoveredAchievement(null);\n                    setActiveAchievementMarker(null);\n                  }\n                }\n              },\n              onClick: () => {\n                if (isMobile) {\n                  setSelectedPerson(person);\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  lineHeight: '1.2'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: person.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 909,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 908,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 821,\n              columnNumber: 38\n            }, this)]\n          }, person.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 17\n          }, this))\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Timeline, \"sVhaU7LROiIISxUwCzuSdxMsrZ4=\", false, function () {\n  return [useMobile, useTimelineDrag];\n});\n_c = Timeline;\nvar _c;\n$RefreshReg$(_c, \"Timeline\");","map":{"version":3,"names":["React","useMobile","useTimelineDrag","getPosition","getWidth","getCenturyColor","getCenturyNumber","toRomanNumeral","jsxDEV","_jsxDEV","Fragment","_Fragment","Timeline","isLoading","timelineWidth","totalHeight","centuryBoundaries","minYear","pixelsPerYear","LEFT_PADDING_PX","rowPlacement","filters","groupingType","categoryDividers","getGroupColor","getGroupColorDark","getGroupColorMuted","getPersonGroup","hoveredPerson","setHoveredPerson","mousePosition","setMousePosition","showTooltip","setShowTooltip","handlePersonHover","activeAchievementMarker","setActiveAchievementMarker","hoveredAchievement","setHoveredAchievement","achievementTooltipPosition","setAchievementTooltipPosition","showAchievementTooltip","setShowAchievementTooltip","hoverTimerRef","sortedData","selectedPerson","setSelectedPerson","_s","isMobile","timelineRef","isDragging","isDraggingTimeline","handleMouseDown","handleMouseMove","handleMouseUp","handleTouchStart","handleTouchMove","handleTouchEnd","containerWidth","window","innerWidth","getEmptyCenturies","length","Set","Math","min","map","p","birthYear","maxYear","max","deathYear","startCentury","floor","endCentury","ceil","emptyCenturies","centuryStart","centuryEnd","hasDataInCentury","some","person","add","getTimelineElements","hideEmptyCenturies","year","type","visibleCenturies","filter","has","elements","i","currentYear","prevYear","gapStart","gapEnd","hiddenCenturies","push","startYear","endYear","timelineElements","getAdjustedPosition","originalPosition","totalOffset","element","originalGapWidth","newGapWidth","getAdjustedWidth","startPos","endPos","getAdjustedTimelineWidth","totalWidth","createRepeatingCenturyLabels","viewportHeight","innerHeight","labels","forEach","centerYear","centuryNumber","isNegativeCentury","romanNumeral","abs","nextYear","centerPos","top","id","left","_element$hiddenCentur","gapWidth","hiddenCenturiesText","join","children","className","role","style","position","height","overflow","padding","width","pointerEvents","zIndex","index","background","opacity","fileName","_jsxFileName","lineNumber","columnNumber","border","label","transform","fontSize","fontWeight","color","textShadow","fontFamily","textAlign","maxWidth","wordWrap","marginTop","divider","category","borderRadius","whiteSpace","row","rowIndex","marginBottom","fontStyle","reignStart","reignEnd","showAchievements","achievementYear1","achievementYear2","achievementYear3","undefined","tabIndex","backgroundColor","personId","cursor","transition","onMouseEnter","e","currentTarget","boxShadow","current","clearTimeout","setTimeout","x","clientX","y","clientY","onMouseLeave","onMouseMove","onTouchStart","preventDefault","touch","touches","onTouchEnd","onKeyDown","key","rect","getBoundingClientRect","borderLeft","borderRight","name","display","alignItems","minWidth","borderColor","onClick","flexDirection","lineHeight","_c","$RefreshReg$"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/components/Timeline.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useMobile } from '../hooks/useMobile'\r\nimport { useTimelineDrag } from '../hooks/useTimelineDrag'\r\nimport { Person } from '../types'\r\nimport { \r\n  getPosition, \r\n  getWidth, \r\n  getCenturyColor, \r\n  getCenturyNumber, \r\n  toRomanNumeral\r\n} from '../utils/timelineUtils'\r\n\r\ninterface TimelineProps {\r\n  isLoading: boolean\r\n  timelineWidth: number\r\n  totalHeight: number\r\n  centuryBoundaries: number[]\r\n  minYear: number\r\n  pixelsPerYear: number\r\n  LEFT_PADDING_PX: number\r\n  rowPlacement: Person[][]\r\n  filters: {\r\n    showAchievements: boolean\r\n    hideEmptyCenturies: boolean\r\n  }\r\n  groupingType: 'category' | 'country' | 'none'\r\n  categoryDividers: { category: string; top: number }[]\r\n  getGroupColor: (groupName: string) => string\r\n  getGroupColorDark: (groupName: string) => string\r\n  getGroupColorMuted: (groupName: string) => string\r\n  getPersonGroup: (person: Person) => string\r\n  hoveredPerson: Person | null\r\n  setHoveredPerson: (person: Person | null) => void\r\n  mousePosition: { x: number; y: number }\r\n  setMousePosition: (position: { x: number; y: number }) => void\r\n  showTooltip: boolean\r\n  setShowTooltip: (show: boolean) => void\r\n  handlePersonHover: (person: Person | null, x: number, y: number) => void\r\n  activeAchievementMarker: { personId: string; index: number } | null\r\n  setActiveAchievementMarker: (marker: { personId: string; index: number } | null) => void\r\n  hoveredAchievement: { person: Person; year: number; index: number } | null\r\n  setHoveredAchievement: (achievement: { person: Person; year: number; index: number } | null) => void\r\n  achievementTooltipPosition: { x: number; y: number }\r\n  setAchievementTooltipPosition: (position: { x: number; y: number }) => void\r\n  showAchievementTooltip: boolean\r\n  setShowAchievementTooltip: (show: boolean) => void\r\n  hoverTimerRef: React.MutableRefObject<NodeJS.Timeout | null>\r\n  sortedData: Person[]\r\n  selectedPerson: Person | null\r\n  setSelectedPerson: (person: Person | null) => void\r\n}\r\n\r\n// Типы для элементов временной линии\r\ntype TimelineElement = \r\n  | { type: 'century'; year: number }\r\n  | { type: 'gap'; startYear: number; endYear: number; hiddenCenturies: number[] }\r\n\r\nexport const Timeline: React.FC<TimelineProps> = ({\r\n  isLoading,\r\n  timelineWidth,\r\n  totalHeight,\r\n  centuryBoundaries,\r\n  minYear,\r\n  pixelsPerYear,\r\n  LEFT_PADDING_PX,\r\n  rowPlacement,\r\n  filters,\r\n  groupingType,\r\n  categoryDividers,\r\n  getGroupColor,\r\n  getGroupColorDark,\r\n  getGroupColorMuted,\r\n  getPersonGroup,\r\n  hoveredPerson,\r\n  setHoveredPerson,\r\n  mousePosition,\r\n  setMousePosition,\r\n  showTooltip,\r\n  setShowTooltip,\r\n  handlePersonHover,\r\n  activeAchievementMarker,\r\n  setActiveAchievementMarker,\r\n  hoveredAchievement,\r\n  setHoveredAchievement,\r\n  achievementTooltipPosition,\r\n  setAchievementTooltipPosition,\r\n  showAchievementTooltip,\r\n  setShowAchievementTooltip,\r\n  hoverTimerRef,\r\n  sortedData,\r\n  selectedPerson,\r\n  setSelectedPerson\r\n}) => {\r\n  const isMobile = useMobile()\r\n\r\n  // Хук для перетаскивания timeline\r\n  const {\r\n    timelineRef,\r\n    isDragging,\r\n    isDraggingTimeline,\r\n    handleMouseDown,\r\n    handleMouseMove,\r\n    handleMouseUp,\r\n    handleTouchStart,\r\n    handleTouchMove,\r\n    handleTouchEnd\r\n  } = useTimelineDrag({\r\n    timelineWidth,\r\n    containerWidth: window.innerWidth\r\n  })\r\n\r\n  // Функция для определения пустых веков на основе отфильтрованных данных\r\n  const getEmptyCenturies = () => {\r\n    if (!sortedData || sortedData.length === 0) return new Set();\r\n    \r\n    // Используем отфильтрованные данные для определения диапазона\r\n    const minYear = Math.min(...sortedData.map(p => p.birthYear));\r\n    const maxYear = Math.max(...sortedData.map(p => p.deathYear));\r\n    \r\n    const startCentury = Math.floor(minYear / 100) * 100;\r\n    const endCentury = Math.ceil(maxYear / 100) * 100;\r\n    \r\n    const emptyCenturies = new Set<number>();\r\n    \r\n    for (let centuryStart = startCentury; centuryStart <= endCentury; centuryStart += 100) {\r\n      const centuryEnd = centuryStart + 99;\r\n      const hasDataInCentury = sortedData.some(person => \r\n        (person.birthYear <= centuryEnd && person.deathYear >= centuryStart)\r\n      );\r\n      \r\n      if (!hasDataInCentury) {\r\n        emptyCenturies.add(centuryStart);\r\n      }\r\n    }\r\n    \r\n    return emptyCenturies;\r\n  };\r\n\r\n  // Создаем массив для отображения веков с промежутками\r\n  const getTimelineElements = (): TimelineElement[] => {\r\n    if (!filters.hideEmptyCenturies) {\r\n      return centuryBoundaries.map(year => ({ type: 'century', year }));\r\n    }\r\n\r\n    const emptyCenturies = getEmptyCenturies();\r\n    const visibleCenturies = centuryBoundaries.filter(year => !emptyCenturies.has(year));\r\n    \r\n    const elements: TimelineElement[] = [];\r\n    \r\n    for (let i = 0; i < visibleCenturies.length; i++) {\r\n      const currentYear = visibleCenturies[i];\r\n      \r\n      // Добавляем промежуток перед веком (кроме первого)\r\n      if (i > 0) {\r\n        const prevYear = visibleCenturies[i - 1];\r\n        const gapStart = prevYear + 100;\r\n        const gapEnd = currentYear;\r\n        \r\n        // Находим все скрытые века в промежутке\r\n        const hiddenCenturies: number[] = [];\r\n        for (let year = gapStart; year < gapEnd; year += 100) {\r\n          if (emptyCenturies.has(year)) {\r\n            hiddenCenturies.push(year);\r\n          }\r\n        }\r\n        \r\n        if (hiddenCenturies.length > 0) {\r\n          elements.push({\r\n            type: 'gap',\r\n            startYear: gapStart,\r\n            endYear: gapEnd,\r\n            hiddenCenturies\r\n          });\r\n        }\r\n      }\r\n      \r\n      // Добавляем сам век\r\n      elements.push({ type: 'century', year: currentYear });\r\n    }\r\n    \r\n    return elements;\r\n  };\r\n\r\n  const timelineElements = getTimelineElements();\r\n\r\n  // Функция для вычисления позиции с учетом промежутков\r\n  const getAdjustedPosition = (year: number) => {\r\n    if (!filters.hideEmptyCenturies) {\r\n      return getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\r\n    }\r\n\r\n    // Находим позицию года в оригинальной шкале\r\n    const originalPosition = getPosition(year, minYear, pixelsPerYear, LEFT_PADDING_PX);\r\n    \r\n    // Вычисляем смещение, проходя по всем промежуткам до этого года\r\n    let totalOffset = 0;\r\n    \r\n    for (const element of timelineElements) {\r\n      if (element.type === 'gap') {\r\n        const gapStart = getPosition(element.startYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\r\n        const gapEnd = getPosition(element.endYear, minYear, pixelsPerYear, LEFT_PADDING_PX);\r\n        const originalGapWidth = gapEnd - gapStart;\r\n        const newGapWidth = pixelsPerYear * 10; // 10 лет\r\n        \r\n        // Если год находится после этого промежутка, добавляем смещение\r\n        if (year >= element.endYear) {\r\n          totalOffset += (originalGapWidth - newGapWidth);\r\n        }\r\n      }\r\n    }\r\n    \r\n    return originalPosition - totalOffset;\r\n  };\r\n\r\n  // Функция для вычисления ширины с учетом промежутков\r\n  const getAdjustedWidth = (startYear: number, endYear: number) => {\r\n    if (!filters.hideEmptyCenturies) {\r\n      return getWidth(startYear, endYear, pixelsPerYear);\r\n    }\r\n\r\n    const startPos = getAdjustedPosition(startYear);\r\n    const endPos = getAdjustedPosition(endYear);\r\n    return endPos - startPos;\r\n  };\r\n\r\n  // Функция для вычисления скорректированной ширины таймлайна\r\n  const getAdjustedTimelineWidth = () => {\r\n    if (!filters.hideEmptyCenturies) {\r\n      return timelineWidth;\r\n    }\r\n\r\n    // Вычисляем общую ширину, проходя по всем элементам\r\n    let totalWidth = 0;\r\n    \r\n    for (const element of timelineElements) {\r\n      if (element.type === 'century') {\r\n        // Век занимает 100 лет\r\n        totalWidth += pixelsPerYear * 100;\r\n      } else if (element.type === 'gap') {\r\n        // Промежуток занимает 10 лет\r\n        totalWidth += pixelsPerYear * 10;\r\n      }\r\n    }\r\n\r\n    return totalWidth + LEFT_PADDING_PX + 50; // Добавляем отступы\r\n  };\r\n\r\n  // Функция для создания повторяющихся меток веков через каждые 90vh\r\n  const createRepeatingCenturyLabels = () => {\r\n    const viewportHeight = window.innerHeight;\r\n    const labels: Array<{\r\n      id: string;\r\n      year: number;\r\n      romanNumeral: string;\r\n      left: number;\r\n      top: number;\r\n      type: 'century' | 'gap';\r\n    }> = [];\r\n    \r\n    // Создаем метки для каждого века\r\n    timelineElements.forEach((element) => {\r\n      if (element.type === 'century') {\r\n        const year = element.year;\r\n        const centerYear = year + 50;\r\n        const centuryNumber = getCenturyNumber(centerYear);\r\n        const isNegativeCentury = year < 0;\r\n        const romanNumeral = isNegativeCentury ? `${toRomanNumeral(Math.abs(centuryNumber))} в. до н.э` : `${toRomanNumeral(centuryNumber)} в.`;\r\n        const startPos = getAdjustedPosition(year);\r\n        const nextYear = year + 100;\r\n        const endPos = getAdjustedPosition(nextYear);\r\n        const centerPos = startPos + (endPos - startPos) / 2; // Центр века\r\n        \r\n        // Создаем метки через каждые 90vh\r\n        for (let top = 0; top < totalHeight; top += viewportHeight * 0.9) {\r\n          labels.push({\r\n            id: `century-label-${year}-${top}`,\r\n            year,\r\n            romanNumeral,\r\n            left: centerPos,\r\n            top: top + viewportHeight / 2, // Центрируем по вертикали в каждом экране\r\n            type: 'century'\r\n          });\r\n        }\r\n      } else if (element.type === 'gap') {\r\n        const startPos = getAdjustedPosition(element.startYear);\r\n        const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\r\n        const centerPos = startPos + gapWidth / 2; // Центр промежутка\r\n        const hiddenCenturiesText = element.hiddenCenturies?.map(year => {\r\n          const centuryNumber = getCenturyNumber(year + 50);\r\n          const isNegativeCentury = year < 0;\r\n          const romanNumeral = isNegativeCentury ? `${toRomanNumeral(Math.abs(centuryNumber))} в. до н.э` : `${toRomanNumeral(centuryNumber)} в.`;\r\n          return romanNumeral;\r\n        }).join(', ') || '';\r\n        \r\n        // Создаем метки для промежутков через каждые 90vh\r\n        for (let top = 0; top < totalHeight; top += viewportHeight * 0.9) {\r\n          labels.push({\r\n            id: `gap-label-${element.startYear}-${top}`,\r\n            year: element.startYear,\r\n            romanNumeral: hiddenCenturiesText,\r\n            left: centerPos,\r\n            top: top + viewportHeight / 2,\r\n            type: 'gap'\r\n          });\r\n        }\r\n      }\r\n    });\r\n    \r\n    return labels;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Временная линия на весь экран */}\r\n      <div \r\n        className=\"timeline-content\" \r\n        id=\"timeline-content\"\r\n        role=\"presentation\" \r\n        aria-hidden=\"true\"\r\n        style={{ \r\n          position: 'relative', \r\n          height: '100%',\r\n          overflow: 'visible',\r\n          padding: isMobile ? '0' : '1rem 0 2rem 0'\r\n        }}\r\n      >\r\n        {/* Разноцветная заливка веков */}\r\n        <div \r\n          className=\"timeline-background\"\r\n          id=\"timeline-background\"\r\n          role=\"presentation\"\r\n          aria-hidden=\"true\"\r\n          style={{\r\n            position: 'absolute',\r\n            top: '0',\r\n            left: '0',\r\n            width: `${getAdjustedTimelineWidth()}px`,\r\n            height: `${totalHeight + 200}px`,\r\n            pointerEvents: 'none',\r\n            zIndex: 1\r\n          }}\r\n        >\r\n          {timelineElements.map((element, index) => {\r\n                         if (element.type === 'century') {\r\n               const year = element.year;\r\n               // Каждый век занимает ровно 100 лет\r\n               const nextYear = year + 100\r\n               const startPos = getAdjustedPosition(year)\r\n               const endPos = getAdjustedPosition(nextYear)\r\n               const width = endPos - startPos\r\n\r\n              // Вычисляем век на основе центра года в столетии\r\n              const centerYear = year + 50\r\n              const centuryNumber = getCenturyNumber(centerYear)\r\n              // Для отрицательных веков добавляем знак минус\r\n              const isNegativeCentury = year < 0\r\n              const romanNumeral = isNegativeCentury ? `-${toRomanNumeral(Math.abs(centuryNumber))}` : toRomanNumeral(centuryNumber)\r\n              \r\n              return (\r\n                <div \r\n                  key={`century-bg-${year}`} \r\n                  className=\"century-background\"\r\n                  id={`century-${year}`}\r\n                  role=\"presentation\"\r\n                  aria-label={`Век ${romanNumeral}`}\r\n                  style={{\r\n                    position: 'absolute',\r\n                    left: `${startPos}px`,\r\n                    width: `${width}px`,\r\n                    height: '100%',\r\n                    background: getCenturyColor(year, minYear),\r\n                    opacity: 0.3,\r\n                    zIndex: 1\r\n                  }}\r\n                >\r\n                </div>\r\n              )\r\n                                                   } else if (element.type === 'gap') {\r\n                // Промежуток между веками - компактный размер (1/10 века)\r\n                const gapWidth = pixelsPerYear * 10; // 10 лет = 1/10 века\r\n                const startPos = getAdjustedPosition(element.startYear)\r\n               \r\n               return (\r\n                 <div key={`gap-${element.startYear}`} style={{\r\n                   position: 'absolute',\r\n                   left: `${startPos}px`,\r\n                   width: `${gapWidth}px`,\r\n                   height: '100%',\r\n                   background: 'rgba(139, 69, 19, 0.1)',\r\n                   border: '1px dashed rgba(139, 69, 19, 0.3)',\r\n                   zIndex: 1\r\n                 }}>\r\n                </div>\r\n              )\r\n            }\r\n            return null;\r\n          })}\r\n        </div>\r\n\r\n                 {/* Границы веков и промежутков на всю высоту */}\r\n         <div style={{\r\n           position: 'absolute',\r\n           top: '0',\r\n           left: '0',\r\n           width: `${getAdjustedTimelineWidth()}px`,\r\n           height: `${totalHeight + 200}px`,\r\n           pointerEvents: 'none',\r\n           zIndex: 5\r\n         }}>\r\n                      {timelineElements.map((element) => {\r\n              if (element.type === 'century') {\r\n                return (\r\n                  <div key={`century-line-${element.year}`} style={{\r\n                    position: 'absolute',\r\n                    left: `${getAdjustedPosition(element.year)}px`,\r\n                    width: '2px',\r\n                    height: '100%',\r\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\r\n                    zIndex: 5\r\n                  }} />\r\n                );\r\n              } else if (element.type === 'gap') {\r\n                return (\r\n                  <div key={`gap-line-${element.startYear}`} style={{\r\n                    position: 'absolute',\r\n                    left: `${getAdjustedPosition(element.startYear)}px`,\r\n                    width: '2px',\r\n                    height: '100%',\r\n                    background: 'linear-gradient(to bottom, #cd853f 0%, #cd853f 20%, rgba(205, 133, 63, 0.3) 100%)',\r\n                    zIndex: 5\r\n                  }} />\r\n                );\r\n              }\r\n              return null;\r\n            })}\r\n         </div>\r\n\r\n         {/* Повторяющиеся метки веков через каждые 90vh */}\r\n         <div style={{\r\n           position: 'absolute',\r\n           top: '0',\r\n           left: '0',\r\n           width: `${getAdjustedTimelineWidth()}px`,\r\n           height: `${totalHeight + 200}px`,\r\n           pointerEvents: 'none',\r\n           zIndex: 6\r\n         }}>\r\n           {createRepeatingCenturyLabels().map((label) => (\r\n             <div\r\n               key={label.id}\r\n               style={{\r\n                 position: 'absolute',\r\n                 left: `${label.left}px`,\r\n                 top: `${label.top}px`,\r\n                 transform: 'translate(-50%, -50%)',\r\n                 fontSize: label.type === 'century' ? '1.5rem' : '0.8rem',\r\n                 fontWeight: 'bold',\r\n                 color: label.type === 'century' \r\n                   ? 'rgba(244, 228, 193, 0.4)' \r\n                   : 'rgba(139, 69, 19, 0.5)',\r\n                 textShadow: '1px 1px 2px rgba(0, 0, 0, 0.6)',\r\n                 pointerEvents: 'none',\r\n                 fontFamily: label.type === 'century' ? 'serif' : 'sans-serif',\r\n                 textAlign: 'center',\r\n                 maxWidth: '200px',\r\n                 wordWrap: 'break-word'\r\n               }}\r\n             >\r\n               {label.type === 'century' ? (\r\n                 label.romanNumeral\r\n               ) : (\r\n                 <>\r\n                   <div>Скрыто:</div>\r\n                   <div style={{ fontSize: '0.7rem', marginTop: '2px' }}>\r\n                     {label.romanNumeral}\r\n                   </div>\r\n                 </>\r\n               )}\r\n             </div>\r\n           ))}\r\n         </div>\r\n\r\n         {/* Разделители групп */}\r\n         <div \r\n           className=\"category-dividers\"\r\n           id=\"category-dividers\"\r\n           role=\"presentation\"\r\n           aria-hidden=\"true\"\r\n           style={{\r\n             position: 'absolute',\r\n             top: '0',\r\n             left: '0',\r\n             width: `${getAdjustedTimelineWidth()}px`,\r\n             height: `${totalHeight + 200}px`,\r\n             pointerEvents: 'none',\r\n             zIndex: 8\r\n           }}\r\n         >\r\n          {categoryDividers.map((divider) => (\r\n            <div \r\n              key={`category-divider-${divider.category}`} \r\n              className=\"category-divider\"\r\n              id={`divider-${divider.category}`}\r\n              role=\"separator\"\r\n              aria-label={`Разделитель группы: ${divider.category}`}\r\n              style={{\r\n                position: 'absolute',\r\n                top: `${divider.top}px`,\r\n                left: '0',\r\n                width: '100%',\r\n                height: '10px',\r\n                background: `linear-gradient(to right, transparent 0%, ${getGroupColor(divider.category)} 20%, ${getGroupColor(divider.category)} 80%, transparent 100%)`,\r\n                opacity: 0.6,\r\n                zIndex: 8\r\n              }}\r\n            >\r\n              <div \r\n                className=\"category-label\" \r\n                id={`category-label-${divider.category}`}\r\n                aria-label={`Группа: ${divider.category}`}\r\n                style={{\r\n                  position: 'absolute',\r\n                  left: '20px',\r\n                  top: '50%',\r\n                  transform: 'translateY(-50%)',\r\n                  background: getGroupColor(divider.category),\r\n                  color: 'white',\r\n                  padding: '2px 8px',\r\n                  borderRadius: '4px',\r\n                  fontSize: '0.7rem',\r\n                  fontWeight: 'bold',\r\n                  whiteSpace: 'nowrap',\r\n                  zIndex: 9\r\n                }}\r\n              >\r\n                {divider.category}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n                 {/* Полоски жизни */}\r\n         <div \r\n           className=\"person-timeline\"\r\n           id=\"person-timeline\"\r\n           role=\"list\"\r\n           aria-label=\"Временные линии исторических личностей\"\r\n           style={{ \r\n             position: 'relative',\r\n             width: `${getAdjustedTimelineWidth()}px`,\r\n             height: `${totalHeight + 60}px`,\r\n             zIndex: 10\r\n           }}\r\n         >\r\n          {rowPlacement.map((row, rowIndex) => (\r\n            <div \r\n              key={rowIndex} \r\n              className=\"timeline-row\"\r\n              id={`timeline-row-${rowIndex}`}\r\n              role=\"listitem\"\r\n              aria-label={`Строка ${rowIndex + 1} временной линии`}\r\n              style={{\r\n                position: 'relative',\r\n                height: row.length === 0 ? '20px' : '60px',\r\n                marginBottom: row.length === 0 ? '0px' : '10px'\r\n              }}\r\n            >\r\n              {row.map((person) => (\r\n                <React.Fragment key={person.id}>\r\n                  {/* Годы жизни и правления над полоской */}\r\n                  <span \r\n                    className=\"birth-year-label\"\r\n                    id={`birth-year-${person.id}`}\r\n                    aria-label={`Год рождения: ${person.birthYear}`}\r\n                    style={{\r\n                      position: 'absolute',\r\n                      left: `${getAdjustedPosition(person.birthYear)}px`,\r\n                      top: 0,\r\n                      fontSize: '11px',\r\n                      color: 'rgba(244, 228, 193, 0.6)',\r\n                      fontStyle: 'italic',\r\n                      fontWeight: 400,\r\n                      transform: 'translateX(-100%) translateY(-10px)'\r\n                    }}\r\n                  >\r\n                    {person.birthYear}\r\n                  </span>\r\n\r\n                                     {person.reignStart && (\r\n                     <span \r\n                       className=\"reign-label\" \r\n                       id={`reign-start-${person.id}`}\r\n                       aria-label={`Начало правления: ${person.reignStart}`}\r\n                       style={{\r\n                         position: 'absolute',\r\n                         left: `${getAdjustedPosition(person.reignStart)}px`,\r\n                         top: 0,\r\n                         fontSize: '11px',\r\n                         color: '#E57373', // Темно-красный\r\n                         fontStyle: 'italic',\r\n                         fontWeight: 'bold',\r\n                         transform: 'translateX(-100%) translateY(-22px)'\r\n                       }}\r\n                     >\r\n                       👑 {person.reignStart}\r\n                     </span>\r\n                   )}\r\n\r\n                                     {person.reignEnd && (\r\n                     <span \r\n                       className=\"reign-label\" \r\n                       id={`reign-end-${person.id}`}\r\n                       aria-label={`Конец правления: ${person.reignEnd}`}\r\n                       style={{\r\n                         position: 'absolute',\r\n                         left: `${getAdjustedPosition(person.reignEnd)}px`,\r\n                         top: 0,\r\n                         fontSize: '11px',\r\n                         color: '#E57373', // Темно-красный\r\n                         fontStyle: 'italic',\r\n                         fontWeight: 'bold',\r\n                         transform: 'translateY(-22px)'\r\n                       }}\r\n                     >\r\n                       {person.reignEnd}\r\n                     </span>\r\n                   )}\r\n                  \r\n                                     <span \r\n                                       className=\"death-year-label\"\r\n                                       id={`death-year-${person.id}`}\r\n                                       aria-label={`Год смерти: ${person.deathYear}`}\r\n                                       style={{\r\n                                         position: 'absolute',\r\n                                         left: `${getAdjustedPosition(person.deathYear)}px`,\r\n                                         top: 0,\r\n                                         fontSize: '11px',\r\n                                         color: 'rgba(244, 228, 193, 0.6)',\r\n                                         fontStyle: 'italic',\r\n                                         fontWeight: 400,\r\n                                         transform: 'translateY(-10px)'\r\n                                       }}\r\n                                     >\r\n                                       {person.deathYear}\r\n                                     </span>\r\n\r\n                  {/* Маркеры ключевых достижений */}\r\n                  {filters.showAchievements && [person.achievementYear1, person.achievementYear2, person.achievementYear3]\r\n                    .filter(year => year !== undefined && year !== null)\r\n                    .map((year, index) => {\r\n                      return (\r\n                        <div \r\n                          key={index} \r\n                          className=\"achievement-marker\"\r\n                          id={`achievement-${person.id}-${index}`}\r\n                          role=\"button\"\r\n                          aria-label={`Достижение ${index + 1} в ${year} году`}\r\n                          tabIndex={0}\r\n                          style={{\r\n                            position: 'absolute',\r\n                            left: `${getAdjustedPosition(year as number)}px`,\r\n                            top: '-4px',\r\n                            width: '2px', // Возвращаем стандартную ширину\r\n                            height: '15px', // Возвращаем стандартную высоту\r\n                            backgroundColor: getGroupColorDark(getPersonGroup(person)),\r\n                            zIndex: activeAchievementMarker?.personId === person.id && activeAchievementMarker?.index === index ? 10 : 3,\r\n                            transform: 'translateX(-50%)',\r\n                            cursor: 'pointer',\r\n                            transition: 'all 0.2s ease',\r\n                            // Убираем псевдоэлементы, так как они не работают в inline стилях\r\n                          }}\r\n                        onMouseEnter={(e) => {\r\n                          if (!isMobile) {\r\n                            e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\r\n                            e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\r\n                            \r\n                            // Устанавливаем активный маркер\r\n                            setActiveAchievementMarker({ personId: person.id, index });\r\n                            \r\n                            // Скрываем tooltip человека при наведении на маркер достижения\r\n                            if (hoveredPerson?.id === person.id) {\r\n                              handlePersonHover(null, 0, 0);\r\n                            }\r\n                            \r\n                            // Очищаем предыдущий таймер если он есть\r\n                            if (hoverTimerRef.current) {\r\n                              clearTimeout(hoverTimerRef.current);\r\n                            }\r\n                            \r\n                            // Запускаем таймер для показа tooltip\r\n                            hoverTimerRef.current = setTimeout(() => {\r\n                              setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\r\n                              setHoveredAchievement({ person, year: year as number, index });\r\n                              setShowAchievementTooltip(true);\r\n                            }, 500);\r\n                          }\r\n                        }}\r\n                        onMouseLeave={(e) => {\r\n                          if (!isMobile) {\r\n                            e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\r\n                            e.currentTarget.style.boxShadow = 'none';\r\n                            \r\n                            // Сбрасываем активный маркер\r\n                            setActiveAchievementMarker(null);\r\n                            \r\n                            // Очищаем таймер и скрываем tooltip достижения\r\n                            if (hoverTimerRef.current) {\r\n                              clearTimeout(hoverTimerRef.current);\r\n                              hoverTimerRef.current = null;\r\n                            }\r\n                            setShowAchievementTooltip(false);\r\n                            setHoveredAchievement(null);\r\n                            \r\n                            // Также скрываем tooltip человека, если он был показан\r\n                            if (hoveredPerson?.id === person.id) {\r\n                              handlePersonHover(null, 0, 0);\r\n                            }\r\n                          }\r\n                        }}\r\n                        onMouseMove={(e) => {\r\n                          if (!isMobile && hoveredAchievement && hoveredAchievement.person.id === person.id && hoveredAchievement.index === index) {\r\n                            setAchievementTooltipPosition({ x: e.clientX, y: e.clientY });\r\n                          }\r\n                        }}\r\n                        onTouchStart={(e) => {\r\n                          if (isMobile) {\r\n                            e.preventDefault();\r\n                            e.currentTarget.style.backgroundColor = getGroupColor(getPersonGroup(person));\r\n                            e.currentTarget.style.boxShadow = `0 0 3px ${getGroupColor(getPersonGroup(person))}`;\r\n                            \r\n                            // Устанавливаем активный маркер\r\n                            setActiveAchievementMarker({ personId: person.id, index });\r\n                            \r\n                            // Скрываем tooltip человека при касании маркера достижения\r\n                            if (hoveredPerson?.id === person.id) {\r\n                              handlePersonHover(null, 0, 0);\r\n                            }\r\n                            \r\n                            // Показываем tooltip сразу на мобильных\r\n                            const touch = e.touches[0];\r\n                            setAchievementTooltipPosition({ x: touch.clientX, y: touch.clientY });\r\n                            setHoveredAchievement({ person, year: year as number, index });\r\n                            setShowAchievementTooltip(true);\r\n                          }\r\n                        }}\r\n                        onTouchEnd={(e) => {\r\n                          if (isMobile) {\r\n                            // Убираем визуальные эффекты при отпускании, но НЕ скрываем tooltip\r\n                            e.currentTarget.style.backgroundColor = getGroupColorDark(getPersonGroup(person));\r\n                            e.currentTarget.style.boxShadow = 'none';\r\n                            \r\n                            // Сбрасываем активный маркер\r\n                            setActiveAchievementMarker(null);\r\n                            \r\n                            // НЕ скрываем tooltip достижения - он будет скрыт только по клику вне или по кнопке закрытия\r\n                            // Но скрываем tooltip человека, если он был показан\r\n                            if (hoveredPerson?.id === person.id) {\r\n                              handlePersonHover(null, 0, 0);\r\n                            }\r\n                          }\r\n                        }}\r\n                        onKeyDown={(e) => {\r\n                          if (e.key === 'Enter' || e.key === ' ') {\r\n                            e.preventDefault();\r\n                            // Показываем tooltip при нажатии Enter или Space\r\n                            setHoveredAchievement({ person, year: year as number, index });\r\n                            // Используем позицию элемента для tooltip при нажатии клавиши\r\n                            const rect = e.currentTarget.getBoundingClientRect();\r\n                            setAchievementTooltipPosition({ \r\n                              x: rect.left + rect.width / 2, \r\n                              y: rect.top - 10 \r\n                            });\r\n                            setShowAchievementTooltip(true);\r\n                          }\r\n                        }}\r\n                        >\r\n                          <span style={{\r\n                            position: 'absolute',\r\n                            top: '-12px',\r\n                            left: '50%',\r\n                            transform: 'translateX(-50%)',\r\n                            fontSize: '8px',\r\n                            color: getGroupColorDark(getPersonGroup(person)),\r\n                            fontWeight: 'bold',\r\n                            whiteSpace: 'nowrap',\r\n                            backgroundColor: 'rgba(44, 24, 16, 0.9)',\r\n                            padding: '1px 3px',\r\n                            borderRadius: '2px',\r\n                            border: `1px solid ${getGroupColorDark(getPersonGroup(person))}`,\r\n                            transition: 'all 0.2s ease'\r\n                          }}>\r\n                            {year}\r\n                          </span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n\r\n                                     {/* полоса правления */}\r\n                   {person.reignStart && person.reignEnd && (\r\n                     <div \r\n                       className=\"reign-bar\"\r\n                       id={`reign-bar-${person.id}`}\r\n                       role=\"presentation\"\r\n                       aria-label={`Период правления: ${person.reignStart} - ${person.reignEnd}`}\r\n                       style={{\r\n                         position: 'absolute',\r\n                         top: '-15px',\r\n                         left: `${getAdjustedPosition(person.reignStart)}px`,\r\n                         width: `${getAdjustedWidth(person.reignStart, person.reignEnd)}px`,\r\n                         height: '65px',\r\n                         backgroundColor: 'rgba(211, 47, 47, 0.25)',\r\n                         pointerEvents: 'none',\r\n                         borderLeft: '2px solid #D32F2F',\r\n                         borderRight: '2px solid #D32F2F',\r\n                         borderRadius: '3px',\r\n                         zIndex: 1\r\n                       }} \r\n                     />\r\n                   )}\r\n\r\n                                     <div\r\n                     className=\"life-bar\"\r\n                     id={`life-bar-${person.id}`}\r\n                     role=\"button\"\r\n                     aria-label={`${person.name}, ${person.birthYear} - ${person.deathYear}, ${person.category}`}\r\n                     tabIndex={0}\r\n                     style={{\r\n                       position: 'absolute',\r\n                       top: '10px',\r\n                       left: `${getAdjustedPosition(person.birthYear)}px`,\r\n                       width: `${getAdjustedWidth(person.birthYear, person.deathYear)}px`,\r\n                       height: '40px',\r\n                       background: `linear-gradient(135deg, ${getGroupColorMuted(getPersonGroup(person))} 0%, #6a5a3a 100%)`,\r\n                       borderRadius: '6px',\r\n                       cursor: 'pointer',\r\n                       display: 'flex',\r\n                       alignItems: 'center',\r\n                       padding: '0 12px',\r\n                       color: 'white',\r\n                       fontSize: '14px',\r\n                       fontWeight: 'bold',\r\n                       minWidth: '60px',\r\n                       boxShadow: '0 2px 8px rgba(0,0,0,0.15)',\r\n                       border: '1.5px solid #a8926a',\r\n                       opacity: selectedPerson?.id === person.id ? 0.8 : 1,\r\n                       zIndex: 5,\r\n                       transform: selectedPerson?.id === person.id ? 'scale(1.05)' : 'scale(1)',\r\n                       transition: 'all 0.2s ease'\r\n                     }}\r\n                    onMouseEnter={(e) => {\r\n                      if (!isMobile) {\r\n                        e.currentTarget.style.transform = 'translateY(-3px) scale(1.02)'\r\n                        e.currentTarget.style.boxShadow = '0 8px 25px rgba(0, 0, 0, 0.4)'\r\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.4)'\r\n                        \r\n                        // Скрываем tooltip достижения при наведении на lifebar\r\n                        if (hoveredAchievement?.person.id === person.id) {\r\n                          setShowAchievementTooltip(false);\r\n                          setHoveredAchievement(null);\r\n                          setActiveAchievementMarker(null);\r\n                        }\r\n                        \r\n                        // Используем handlePersonHover для правильной обработки\r\n                        handlePersonHover(person, e.clientX, e.clientY)\r\n                      }\r\n                    }}\r\n                    onMouseLeave={(e) => {\r\n                      if (!isMobile) {\r\n                        e.currentTarget.style.transform = selectedPerson?.id === person.id ? 'scale(1.05)' : 'translateY(0) scale(1)'\r\n                        e.currentTarget.style.boxShadow = '0 4px 12px rgba(0, 0, 0, 0.3)'\r\n                        e.currentTarget.style.borderColor = 'rgba(255, 255, 255, 0.2)'\r\n                        // Используем handlePersonHover для правильной обработки с задержкой\r\n                        handlePersonHover(null, 0, 0)\r\n                      }\r\n                    }}\r\n                    onMouseMove={(e) => {\r\n                      if (!isMobile && hoveredPerson?.id === person.id) {\r\n                        setMousePosition({ x: e.clientX, y: e.clientY })\r\n                      }\r\n                    }}\r\n                    onKeyDown={(e) => {\r\n                      if (e.key === 'Enter' || e.key === ' ') {\r\n                        e.preventDefault();\r\n                        if (isMobile) {\r\n                          setSelectedPerson(person);\r\n                        } else {\r\n                          setHoveredPerson(person);\r\n                          setShowTooltip(true);\r\n                        }\r\n                      }\r\n                    }}\r\n                    onTouchStart={(e) => {\r\n                      if (isMobile) {\r\n                        // Скрываем tooltip достижения при касании lifebar\r\n                        if (hoveredAchievement?.person.id === person.id) {\r\n                          setShowAchievementTooltip(false);\r\n                          setHoveredAchievement(null);\r\n                          setActiveAchievementMarker(null);\r\n                        }\r\n                      }\r\n                    }}\r\n                    onClick={() => {\r\n                      if (isMobile) {\r\n                        setSelectedPerson(person)\r\n                      }\r\n                    }}\r\n                  >\r\n                    <div style={{ display: 'flex', flexDirection: 'column', lineHeight: '1.2' }}>\r\n                      <span>{person.name}</span>\r\n                    </div>\r\n                  </div>\r\n                </React.Fragment>\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}