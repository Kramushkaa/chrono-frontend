{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef, useCallback, useEffect } from 'react';\nexport const useTimelineDrag = ({\n  timelineWidth,\n  containerWidth\n}) => {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStartX, setDragStartX] = useState(0);\n  const [dragStartY, setDragStartY] = useState(0);\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const [scrollTop, setScrollTop] = useState(0);\n  const [isDraggingTimeline, setIsDraggingTimeline] = useState(false);\n  const timelineRef = useRef(null);\n  const dragStartTime = useRef(0);\n  const handleMouseDown = useCallback(e => {\n    var _timelineRef$current, _timelineRef$current2;\n    const target = e.target;\n    const isInteractive = target.closest('.life-bar') || target.closest('.achievement-marker') || target.closest('button') || target.closest('[role=\"button\"]');\n    if (isInteractive) return;\n    setIsDragging(true);\n    setDragStartX(e.clientX);\n    setDragStartY(e.clientY);\n    setScrollLeft(((_timelineRef$current = timelineRef.current) === null || _timelineRef$current === void 0 ? void 0 : _timelineRef$current.scrollLeft) || 0);\n    setScrollTop(((_timelineRef$current2 = timelineRef.current) === null || _timelineRef$current2 === void 0 ? void 0 : _timelineRef$current2.scrollTop) || 0);\n    dragStartTime.current = Date.now();\n    e.preventDefault();\n  }, []);\n\n  // Убираем локальный handleMouseMove, так как используем глобальный\n  const handleMouseMove = useCallback(() => {}, []);\n\n  // Убираем локальный handleMouseUp, так как используем глобальный\n  const handleMouseUp = useCallback(() => {}, []);\n  const handleTouchStart = useCallback(e => {\n    var _timelineRef$current3, _timelineRef$current4;\n    const target = e.target;\n    const isInteractive = target.closest('.life-bar') || target.closest('.achievement-marker') || target.closest('button') || target.closest('[role=\"button\"]');\n    if (isInteractive) return;\n    setIsDragging(true);\n    setDragStartX(e.touches[0].clientX);\n    setDragStartY(e.touches[0].clientY);\n    setScrollLeft(((_timelineRef$current3 = timelineRef.current) === null || _timelineRef$current3 === void 0 ? void 0 : _timelineRef$current3.scrollLeft) || 0);\n    setScrollTop(((_timelineRef$current4 = timelineRef.current) === null || _timelineRef$current4 === void 0 ? void 0 : _timelineRef$current4.scrollTop) || 0);\n    dragStartTime.current = Date.now();\n  }, []);\n  const handleTouchMove = useCallback(e => {\n    if (!isDragging) return;\n    const deltaX = e.touches[0].clientX - dragStartX;\n    const deltaY = e.touches[0].clientY - dragStartY;\n    const newScrollLeft = scrollLeft - deltaX;\n    const newScrollTop = scrollTop - deltaY;\n    if (timelineRef.current) {\n      timelineRef.current.scrollLeft = Math.max(0, newScrollLeft);\n      timelineRef.current.scrollTop = Math.max(0, newScrollTop);\n    }\n  }, [isDragging, dragStartX, dragStartY, scrollLeft, scrollTop]);\n  const handleTouchEnd = useCallback(() => {\n    if (!isDragging) return;\n    const dragDuration = Date.now() - dragStartTime.current;\n    if (dragDuration < 200) {\n      setIsDraggingTimeline(false);\n    } else {\n      setIsDraggingTimeline(true);\n      setTimeout(() => setIsDraggingTimeline(false), 100);\n    }\n    setIsDragging(false);\n  }, [isDragging]);\n  useEffect(() => {\n    const handleGlobalMouseMove = e => {\n      if (!isDragging) return;\n      const deltaX = e.clientX - dragStartX;\n      const deltaY = e.clientY - dragStartY;\n      const newScrollLeft = scrollLeft - deltaX;\n      const newScrollTop = scrollTop - deltaY;\n      if (timelineRef.current) {\n        timelineRef.current.scrollLeft = Math.max(0, newScrollLeft);\n        timelineRef.current.scrollTop = Math.max(0, newScrollTop);\n      }\n    };\n    const handleGlobalMouseUp = () => {\n      if (!isDragging) return;\n      const dragDuration = Date.now() - dragStartTime.current;\n      if (dragDuration < 200) {\n        setIsDraggingTimeline(false);\n      } else {\n        setIsDraggingTimeline(true);\n        setTimeout(() => setIsDraggingTimeline(false), 100);\n      }\n      setIsDragging(false);\n    };\n    if (isDragging) {\n      document.addEventListener('mousemove', handleGlobalMouseMove);\n      document.addEventListener('mouseup', handleGlobalMouseUp);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleGlobalMouseMove);\n      document.removeEventListener('mouseup', handleGlobalMouseUp);\n      setIsDragging(false);\n      setIsDraggingTimeline(false);\n    };\n  }, [isDragging, dragStartX, dragStartY, scrollLeft, scrollTop]);\n  return {\n    timelineRef,\n    isDragging,\n    handleMouseDown,\n    handleMouseMove,\n    handleMouseUp,\n    handleTouchStart,\n    handleTouchMove,\n    handleTouchEnd\n  };\n};\n_s(useTimelineDrag, \"0FI1Fvs1zfssMAd0UGwsbxX8mSA=\");","map":{"version":3,"names":["useState","useRef","useCallback","useEffect","useTimelineDrag","timelineWidth","containerWidth","_s","isDragging","setIsDragging","dragStartX","setDragStartX","dragStartY","setDragStartY","scrollLeft","setScrollLeft","scrollTop","setScrollTop","isDraggingTimeline","setIsDraggingTimeline","timelineRef","dragStartTime","handleMouseDown","e","_timelineRef$current","_timelineRef$current2","target","isInteractive","closest","clientX","clientY","current","Date","now","preventDefault","handleMouseMove","handleMouseUp","handleTouchStart","_timelineRef$current3","_timelineRef$current4","touches","handleTouchMove","deltaX","deltaY","newScrollLeft","newScrollTop","Math","max","handleTouchEnd","dragDuration","setTimeout","handleGlobalMouseMove","handleGlobalMouseUp","document","addEventListener","removeEventListener"],"sources":["C:/Users/Selecty/Documents/PetProjects/chronoline-frontend/src/hooks/useTimelineDrag.ts"],"sourcesContent":["import { useState, useRef, useCallback, useEffect } from 'react'\r\n\r\ninterface UseTimelineDragProps {\r\n  timelineWidth: number\r\n  containerWidth: number\r\n}\r\n\r\nexport const useTimelineDrag = ({ timelineWidth, containerWidth }: UseTimelineDragProps) => {\r\n  const [isDragging, setIsDragging] = useState(false)\r\n  const [dragStartX, setDragStartX] = useState(0)\r\n  const [dragStartY, setDragStartY] = useState(0)\r\n  const [scrollLeft, setScrollLeft] = useState(0)\r\n  const [scrollTop, setScrollTop] = useState(0)\r\n  const [isDraggingTimeline, setIsDraggingTimeline] = useState(false)\r\n  const timelineRef = useRef<HTMLDivElement>(null)\r\n  const dragStartTime = useRef<number>(0)\r\n\r\n  const handleMouseDown = useCallback((e: React.MouseEvent) => {\r\n    const target = e.target as HTMLElement\r\n    const isInteractive = target.closest('.life-bar') || \r\n                         target.closest('.achievement-marker') ||\r\n                         target.closest('button') ||\r\n                         target.closest('[role=\"button\"]')\r\n    \r\n    if (isInteractive) return\r\n\r\n    setIsDragging(true)\r\n    setDragStartX(e.clientX)\r\n    setDragStartY(e.clientY)\r\n    setScrollLeft(timelineRef.current?.scrollLeft || 0)\r\n    setScrollTop(timelineRef.current?.scrollTop || 0)\r\n    dragStartTime.current = Date.now()\r\n    e.preventDefault()\r\n  }, [])\r\n\r\n  // Убираем локальный handleMouseMove, так как используем глобальный\r\n  const handleMouseMove = useCallback(() => {}, [])\r\n\r\n  // Убираем локальный handleMouseUp, так как используем глобальный\r\n  const handleMouseUp = useCallback(() => {}, [])\r\n\r\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\r\n    const target = e.target as HTMLElement\r\n    const isInteractive = target.closest('.life-bar') || \r\n                         target.closest('.achievement-marker') ||\r\n                         target.closest('button') ||\r\n                         target.closest('[role=\"button\"]')\r\n    \r\n    if (isInteractive) return\r\n\r\n    setIsDragging(true)\r\n    setDragStartX(e.touches[0].clientX)\r\n    setDragStartY(e.touches[0].clientY)\r\n    setScrollLeft(timelineRef.current?.scrollLeft || 0)\r\n    setScrollTop(timelineRef.current?.scrollTop || 0)\r\n    dragStartTime.current = Date.now()\r\n  }, [])\r\n\r\n  const handleTouchMove = useCallback((e: React.TouchEvent) => {\r\n    if (!isDragging) return\r\n\r\n    const deltaX = e.touches[0].clientX - dragStartX\r\n    const deltaY = e.touches[0].clientY - dragStartY\r\n    const newScrollLeft = scrollLeft - deltaX\r\n    const newScrollTop = scrollTop - deltaY\r\n    \r\n    if (timelineRef.current) {\r\n      timelineRef.current.scrollLeft = Math.max(0, newScrollLeft)\r\n      timelineRef.current.scrollTop = Math.max(0, newScrollTop)\r\n    }\r\n  }, [isDragging, dragStartX, dragStartY, scrollLeft, scrollTop])\r\n\r\n  const handleTouchEnd = useCallback(() => {\r\n    if (!isDragging) return\r\n\r\n    const dragDuration = Date.now() - dragStartTime.current\r\n    \r\n    if (dragDuration < 200) {\r\n      setIsDraggingTimeline(false)\r\n    } else {\r\n      setIsDraggingTimeline(true)\r\n      setTimeout(() => setIsDraggingTimeline(false), 100)\r\n    }\r\n\r\n    setIsDragging(false)\r\n  }, [isDragging])\r\n\r\n  useEffect(() => {\r\n    const handleGlobalMouseMove = (e: MouseEvent) => {\r\n      if (!isDragging) return\r\n\r\n      const deltaX = e.clientX - dragStartX\r\n      const deltaY = e.clientY - dragStartY\r\n      const newScrollLeft = scrollLeft - deltaX\r\n      const newScrollTop = scrollTop - deltaY\r\n      \r\n      if (timelineRef.current) {\r\n        timelineRef.current.scrollLeft = Math.max(0, newScrollLeft)\r\n        timelineRef.current.scrollTop = Math.max(0, newScrollTop)\r\n      }\r\n    }\r\n\r\n    const handleGlobalMouseUp = () => {\r\n      if (!isDragging) return\r\n\r\n      const dragDuration = Date.now() - dragStartTime.current\r\n      \r\n      if (dragDuration < 200) {\r\n        setIsDraggingTimeline(false)\r\n      } else {\r\n        setIsDraggingTimeline(true)\r\n        setTimeout(() => setIsDraggingTimeline(false), 100)\r\n      }\r\n\r\n      setIsDragging(false)\r\n    }\r\n\r\n    if (isDragging) {\r\n      document.addEventListener('mousemove', handleGlobalMouseMove)\r\n      document.addEventListener('mouseup', handleGlobalMouseUp)\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousemove', handleGlobalMouseMove)\r\n      document.removeEventListener('mouseup', handleGlobalMouseUp)\r\n      setIsDragging(false)\r\n      setIsDraggingTimeline(false)\r\n    }\r\n  }, [isDragging, dragStartX, dragStartY, scrollLeft, scrollTop])\r\n\r\n  return {\r\n    timelineRef,\r\n    isDragging,\r\n    handleMouseDown,\r\n    handleMouseMove,\r\n    handleMouseUp,\r\n    handleTouchStart,\r\n    handleTouchMove,\r\n    handleTouchEnd\r\n  }\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}